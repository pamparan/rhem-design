{
  "version": 3,
  "sources": ["../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_sm.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_md.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_lg.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_xl.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_2xl.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_sm.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_md.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_lg.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_xl.js", "../../@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_2xl.js", "../../@patternfly/react-core/src/helpers/constants.ts", "../../tabbable/src/index.js", "../../focus-trap/index.js", "../../@patternfly/react-core/src/helpers/FocusTrap/FocusTrap.tsx", "../../@patternfly/react-core/src/helpers/useUnmountEffect.ts", "../../@patternfly/react-core/src/helpers/util.ts", "../../@patternfly/react-core/src/helpers/GenerateId/GenerateId.ts", "../../@patternfly/react-core/src/helpers/htmlConstants.ts", "../../@patternfly/react-core/src/helpers/OUIA/ouia.ts", "../../@patternfly/react-core/src/helpers/useIsomorphicLayout.ts", "../../@patternfly/react-core/src/helpers/Popper/Popper.tsx", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/react-popper/usePopper.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getBoundingClientRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getWindow.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getWindowScroll.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/instanceOf.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getHTMLElementScroll.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getNodeScroll.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getNodeName.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getDocumentElement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getWindowScrollBarX.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getComputedStyle.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/isScrollParent.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getCompositeRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getLayoutRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getParentNode.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getScrollParent.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/listScrollParents.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/isTableElement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getOffsetParent.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/enums.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/orderModifiers.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/debounce.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getBasePlacement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/mergeByName.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getViewportRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getDocumentRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/contains.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/rectToClientRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getClippingRect.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getVariation.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getMainAxisFromPlacement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/computeOffsets.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getFreshSideObject.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/mergePaddingObject.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/expandToHashMap.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/detectOverflow.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/index.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/eventListeners.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/popperOffsets.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/computeStyles.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/applyStyles.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/offset.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getOppositePlacement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getOppositeVariationPlacement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/computeAutoPlacement.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/flip.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getAltAxis.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/within.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/preventOverflow.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/arrow.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/hide.ts", "../../@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/popper.ts", "../../@patternfly/react-styles/src/index.ts", "../../@patternfly/react-core/src/helpers/KeyboardHandler.tsx", "../../@patternfly/react-core/src/helpers/resizeObserver.tsx", "../../@patternfly/react-core/src/helpers/useInterval.ts", "../../@patternfly/react-core/src/helpers/datetimeUtils.ts", "../../@patternfly/react-styles/css/components/Spinner/spinner.mjs", "../../@patternfly/react-tokens/dist/esm/c_spinner_diameter.js", "../../@patternfly/react-core/src/components/Spinner/Spinner.tsx", "../../@patternfly/react-styles/css/components/Badge/badge.mjs", "../../@patternfly/react-core/src/components/Badge/Badge.tsx", "../../@patternfly/react-core/src/components/Button/Button.tsx", "../../@patternfly/react-styles/css/components/Button/button.mjs", "../../@patternfly/react-core/src/components/Button/hamburgerIcon.tsx", "../../@patternfly/react-core/src/components/Tooltip/Tooltip.tsx", "../../@patternfly/react-styles/css/components/Tooltip/tooltip.mjs", "../../@patternfly/react-core/src/components/Tooltip/TooltipContent.tsx", "../../@patternfly/react-core/src/components/Tooltip/TooltipArrow.tsx", "../../@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth.js", "../../@patternfly/react-styles/css/components/ActionList/action-list.mjs", "../../@patternfly/react-core/src/components/ActionList/ActionList.tsx", "../../@patternfly/react-core/src/components/ActionList/ActionListGroup.tsx", "../../@patternfly/react-core/src/components/ActionList/ActionListItem.tsx", "../../@patternfly/react-core/src/components/TextInput/TextInput.tsx", "../../@patternfly/react-styles/css/components/FormControl/form-control.mjs", "../../@patternfly/react-core/src/components/FormControl/FormControlIcon.tsx", "../../@patternfly/react-core/src/components/Menu/Menu.tsx", "../../@patternfly/react-styles/css/components/Menu/menu.mjs", "../../@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs", "../../@patternfly/react-core/src/components/Menu/MenuContext.ts", "../../@patternfly/react-core/src/components/Menu/MenuContent.tsx", "../../@patternfly/react-tokens/dist/esm/c_menu__content_Height.js", "../../@patternfly/react-tokens/dist/esm/c_menu__content_MaxHeight.js", "../../@patternfly/react-core/src/components/Menu/MenuFooter.tsx", "../../@patternfly/react-core/src/components/Menu/MenuSearch.tsx", "../../@patternfly/react-core/src/components/Menu/MenuSearchInput.tsx", "../../@patternfly/react-core/src/components/Menu/MenuGroup.tsx", "../../@patternfly/react-core/src/components/Checkbox/Checkbox.tsx", "../../@patternfly/react-styles/css/components/Check/check.mjs", "../../@patternfly/react-core/src/components/Menu/MenuItemAction.tsx", "../../@patternfly/react-core/src/components/Menu/MenuItem.tsx", "../../@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_top_offset.js", "../../@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_m_left_right_offset.js", "../../@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_left_offset.js", "../../@patternfly/react-core/src/components/Menu/MenuList.tsx", "../../@patternfly/react-core/src/components/Menu/DrilldownMenu.tsx", "../../@patternfly/react-core/src/components/Menu/MenuBreadcrumb.tsx", "../../@patternfly/react-core/src/components/Menu/MenuContainer.tsx", "../../@patternfly/react-core/src/components/Select/Select.tsx", "../../@patternfly/react-core/src/components/Select/SelectGroup.tsx", "../../@patternfly/react-core/src/components/Select/SelectList.tsx", "../../@patternfly/react-core/src/components/Select/SelectOption.tsx", "../../@patternfly/react-core/src/components/MenuToggle/MenuToggle.tsx", "../../@patternfly/react-styles/css/components/MenuToggle/menu-toggle.mjs", "../../@patternfly/react-core/src/components/MenuToggle/MenuToggleAction.tsx", "../../@patternfly/react-core/src/components/MenuToggle/MenuToggleCheckbox.tsx", "../../@patternfly/react-core/src/components/Popover/Popover.tsx", "../../@patternfly/react-styles/css/components/Popover/popover.mjs", "../../@patternfly/react-core/src/components/Popover/PopoverContext.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverContent.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverBody.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverHeaderIcon.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverHeaderText.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverHeader.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverFooter.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverCloseButton.tsx", "../../@patternfly/react-core/src/components/Popover/PopoverArrow.tsx", "../../@patternfly/react-tokens/dist/esm/c_popover_MaxWidth.js", "../../@patternfly/react-tokens/dist/esm/c_popover_MinWidth.js", "../../@patternfly/react-styles/css/components/Divider/divider.mjs", "../../@patternfly/react-core/src/components/Divider/Divider.tsx", "../../@patternfly/react-core/src/components/Dropdown/Dropdown.tsx", "../../@patternfly/react-core/src/components/Dropdown/DropdownGroup.tsx", "../../@patternfly/react-core/src/components/Dropdown/DropdownItem.tsx", "../../@patternfly/react-core/src/components/Dropdown/DropdownList.tsx", "../../@patternfly/react-styles/css/components/Form/form.mjs"],
  "sourcesContent": ["export const t_global_breakpoint_sm = {\n  \"name\": \"--pf-t--global--breakpoint--sm\",\n  \"value\": \"36rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--sm)\"\n};\nexport default t_global_breakpoint_sm;", "export const t_global_breakpoint_md = {\n  \"name\": \"--pf-t--global--breakpoint--md\",\n  \"value\": \"48rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--md)\"\n};\nexport default t_global_breakpoint_md;", "export const t_global_breakpoint_lg = {\n  \"name\": \"--pf-t--global--breakpoint--lg\",\n  \"value\": \"62rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--lg)\"\n};\nexport default t_global_breakpoint_lg;", "export const t_global_breakpoint_xl = {\n  \"name\": \"--pf-t--global--breakpoint--xl\",\n  \"value\": \"75rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--xl)\"\n};\nexport default t_global_breakpoint_xl;", "export const t_global_breakpoint_2xl = {\n  \"name\": \"--pf-t--global--breakpoint--2xl\",\n  \"value\": \"90.625rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--2xl)\"\n};\nexport default t_global_breakpoint_2xl;", "export const t_global_breakpoint_height_sm = {\n  \"name\": \"--pf-t--global--breakpoint--height--sm\",\n  \"value\": \"0rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--height--sm)\"\n};\nexport default t_global_breakpoint_height_sm;", "export const t_global_breakpoint_height_md = {\n  \"name\": \"--pf-t--global--breakpoint--height--md\",\n  \"value\": \"40rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--height--md)\"\n};\nexport default t_global_breakpoint_height_md;", "export const t_global_breakpoint_height_lg = {\n  \"name\": \"--pf-t--global--breakpoint--height--lg\",\n  \"value\": \"48rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--height--lg)\"\n};\nexport default t_global_breakpoint_height_lg;", "export const t_global_breakpoint_height_xl = {\n  \"name\": \"--pf-t--global--breakpoint--height--xl\",\n  \"value\": \"60rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--height--xl)\"\n};\nexport default t_global_breakpoint_height_xl;", "export const t_global_breakpoint_height_2xl = {\n  \"name\": \"--pf-t--global--breakpoint--height--2xl\",\n  \"value\": \"80rem\",\n  \"var\": \"var(--pf-t--global--breakpoint--height--2xl)\"\n};\nexport default t_global_breakpoint_height_2xl;", "import globalBreakpointSm from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_sm';\nimport globalBreakpointMd from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_md';\nimport globalBreakpointLg from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_lg';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_xl';\nimport globalBreakpoint2xl from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_2xl';\n\nimport globalHeightBreakpointSm from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_sm';\nimport globalHeightBreakpointMd from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_md';\nimport globalHeightBreakpointLg from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_lg';\nimport globalHeightBreakpointXl from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_xl';\nimport globalHeightBreakpoint2xl from '@patternfly/react-tokens/dist/esm/t_global_breakpoint_height_2xl';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\n\nexport const SIDE = { RIGHT: 'right', LEFT: 'left', BOTH: 'both', NONE: 'none' };\n\nexport const KEYHANDLER_DIRECTION = { UP: 'up', DOWN: 'down', RIGHT: 'right', LEFT: 'left' };\n\nexport enum ValidatedOptions {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n  default = 'default'\n}\n\nexport const KeyTypes = {\n  Tab: 'Tab',\n  Space: ' ',\n  Escape: 'Escape',\n  Enter: 'Enter',\n  ArrowUp: 'ArrowUp',\n  ArrowDown: 'ArrowDown',\n  ArrowLeft: 'ArrowLeft',\n  ArrowRight: 'ArrowRight'\n};\n\nexport const globalWidthBreakpoints = {\n  sm: parseInt(globalBreakpointSm.value) * 16,\n  md: parseInt(globalBreakpointMd.value) * 16,\n  lg: parseInt(globalBreakpointLg.value) * 16,\n  xl: parseInt(globalBreakpointXl.value) * 16,\n  '2xl': parseInt(globalBreakpoint2xl.value) * 16\n};\n\nexport const globalHeightBreakpoints = {\n  sm: parseInt(globalHeightBreakpointSm.value) * 16,\n  md: parseInt(globalHeightBreakpointMd.value) * 16,\n  lg: parseInt(globalHeightBreakpointLg.value) * 16,\n  xl: parseInt(globalHeightBreakpointXl.value) * 16,\n  '2xl': parseInt(globalHeightBreakpoint2xl.value) * 16\n};\n\nexport const statusIcons = {\n  success: CheckCircleIcon,\n  danger: ExclamationCircleIcon,\n  warning: ExclamationTriangleIcon,\n  info: InfoCircleIcon,\n  custom: BellIcon\n};\n", "// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n", "import {\n  tabbable,\n  focusable,\n  isFocusable,\n  isTabbable,\n  getTabIndex,\n} from 'tabbable';\n\nconst activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n\n    if (\n      trapStack.length > 0 &&\n      !trapStack[trapStack.length - 1]._isManuallyPaused()\n    ) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  },\n};\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e?.key === 'Escape' || e?.key === 'Esc' || e?.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e?.key === 'Tab' || e?.keyCode === 9;\n};\n\n// checks for TAB by default\nconst isKeyForward = function (e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nconst isKeyBackward = function (e) {\n  return isTabEvent(e) && e.shiftKey;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nconst internalTrapStack = [];\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const trapStack = userOptions?.trapStack || internalTrapStack;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward,\n    isKeyBackward,\n    ...userOptions,\n  };\n\n  const state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [], // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  const findContainerIndex = function (element, event) {\n    const composedPath =\n      typeof event?.composedPath === 'function'\n        ? event.composedPath()\n        : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) =>\n        container.contains(element) ||\n        // fall back to explicit tabbable search which will take into consideration any\n        //  web components if the `tabbableOptions.getShadowRoot` option was used for\n        //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n        //  look inside web components even if open)\n        composedPath?.includes(container) ||\n        tabbableNodes.find((node) => node === element)\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  const getNodeForOption = function (\n    optionName,\n    { hasFallback = false, params = [] } = {}\n  ) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\n          `\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`\n        );\n      }\n\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\n            `\\`${optionName}\\` as selector refers to no known node`\n          );\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus', { hasFallback: true });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (\n      node === undefined ||\n      (node && !isFocusable(node, config.tabbableOptions))\n    ) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.containerGroups = state.containers.map((container) => {\n      const tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      const focusableNodes = focusable(container, config.tabbableOptions);\n\n      const firstTabbableNode =\n        tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      const lastTabbableNode =\n        tabbableNodes.length > 0\n          ? tabbableNodes[tabbableNodes.length - 1]\n          : undefined;\n\n      const firstDomTabbableNode = focusableNodes.find((node) =>\n        isTabbable(node)\n      );\n      const lastDomTabbableNode = focusableNodes\n        .slice()\n        .reverse()\n        .find((node) => isTabbable(node));\n\n      const posTabIndexesFound = !!tabbableNodes.find(\n        (node) => getTabIndex(node) > 0\n      );\n\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound,\n\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode,\n\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode(node, forward = true) {\n          const nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes\n                .slice(focusableNodes.indexOf(node) + 1)\n                .find((el) => isTabbable(el));\n            }\n\n            return focusableNodes\n              .slice(0, focusableNodes.indexOf(node))\n              .reverse()\n              .find((el) => isTabbable(el));\n          }\n\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        },\n      };\n    });\n\n    state.tabbableGroups = state.containerGroups.filter(\n      (group) => group.tabbableNodes.length > 0\n    );\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (\n      state.containerGroups.find((g) => g.posTabIndexesFound) &&\n      state.containerGroups.length > 1\n    ) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  const getActiveElement = function (el) {\n    const activeElement = el.activeElement;\n\n    if (!activeElement) {\n      return;\n    }\n\n    if (\n      activeElement.shadowRoot &&\n      activeElement.shadowRoot.activeElement !== null\n    ) {\n      return getActiveElement(activeElement.shadowRoot);\n    }\n\n    return activeElement;\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === getActiveElement(document)) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement],\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  const findNextNavNode = function ({ target, event, isBackward = false }) {\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findContainerIndex(target, event);\n      const containerGroup =\n        containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.lastTabbableNode\n              : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.firstTabbableNode\n              : destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate,\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  const checkFocusIn = function (event) {\n    const target = getActualTarget(event);\n    const targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      let nextNode; // next node to focus, if we find one\n      let navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          const mruContainerIdx = findContainerIndex(\n            state.mostRecentlyFocusedNode\n          );\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          const { tabbableNodes } = state.containerGroups[mruContainerIdx];\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            const mruTabIdx = tabbableNodes.findIndex(\n              (node) => node === state.mostRecentlyFocusedNode\n            );\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (\n            !state.containerGroups.some((g) =>\n              g.tabbableNodes.some((n) => getTabIndex(n) > 0)\n            )\n          ) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent),\n        });\n      }\n\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkKeyNav = function (event, isBackward = false) {\n    state.recentNavEvent = event;\n\n    const destinationNode = findNextNavNode({ event, isBackward });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkTabKey = function (event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  const checkEscapeKey = function (event) {\n    if (\n      isEscapeEvent(event) &&\n      valueOrHandler(config.escapeDeactivates, event) !== false\n    ) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n\n  const checkClick = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  const checkDomRemoval = function (mutations) {\n    const isFocusedNodeRemoved = mutations.some(function (mutation) {\n      const removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  const mutationObserver =\n    typeof window !== 'undefined' && 'MutationObserver' in window\n      ? new MutationObserver(checkDomRemoval)\n      : undefined;\n\n  const updateObservedNodes = function () {\n    if (!mutationObserver) {\n      return;\n    }\n\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true,\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      onActivate?.();\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate?.();\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      const options = {\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus,\n        ...deactivateOptions,\n      };\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n\n      const onDeactivate = getOption(options, 'onDeactivate');\n      const onPostDeactivate = getOption(options, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      const returnFocus = getOption(\n        options,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      onDeactivate?.();\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate?.();\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = true;\n\n      return this._setPausedState(true, pauseOptions);\n    },\n\n    unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = false;\n\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n\n      return this._setPausedState(false, unpauseOptions);\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      updateObservedNodes();\n\n      return this;\n    },\n  };\n\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value() {\n        return state.manuallyPaused;\n      },\n    },\n    _setPausedState: {\n      value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n\n        state.paused = paused;\n        if (paused) {\n          const onPause = getOption(options, 'onPause');\n          const onPostPause = getOption(options, 'onPostPause');\n          onPause?.();\n\n          removeListeners();\n          updateObservedNodes();\n\n          onPostPause?.();\n        } else {\n          const onUnpause = getOption(options, 'onUnpause');\n          const onPostUnpause = getOption(options, 'onPostUnpause');\n\n          onUnpause?.();\n\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n\n          onPostUnpause?.();\n        }\n\n        return this;\n      },\n    },\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n", "import { createFocusTrap, FocusTrap as FocusTrapInstance, Options as FocusTrapOptions } from 'focus-trap';\nimport { ComponentPropsWithRef, forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { useUnmountEffect } from '../useUnmountEffect';\n\nexport interface FocusTrapProps extends ComponentPropsWithRef<'div'> {\n  active?: boolean;\n  paused?: boolean;\n  focusTrapOptions?: FocusTrapOptions;\n  /** Prevent from scrolling to the previously focused element on deactivation */\n  preventScrollOnDeactivate?: boolean;\n}\n\nexport const FocusTrap = forwardRef<HTMLDivElement, FocusTrapProps>(function FocusTrap(\n  { active = true, paused = false, focusTrapOptions = {}, preventScrollOnDeactivate = false, ...props },\n  forwardedRef\n) {\n  // Fall back to internal ref if no forwarded ref is provided.\n  const ref = useRef<HTMLDivElement>(null);\n  useImperativeHandle(forwardedRef, () => ref.current!);\n\n  // Create focus trap instance after rendering DOM.\n  const focusTrapRef = useRef<FocusTrapInstance | null>(null);\n  useEffect(() => {\n    const focusTrap = createFocusTrap(ref.current!, {\n      ...focusTrapOptions,\n      returnFocusOnDeactivate: false\n    });\n    focusTrapRef.current = focusTrap;\n\n    // Deactivate focus trap on cleanup.\n    return () => {\n      focusTrap.deactivate();\n    };\n  }, []);\n\n  // Handle activation status based on 'active' prop.\n  useEffect(() => {\n    const focusTrap = focusTrapRef.current;\n    active ? focusTrap?.activate() : focusTrap?.deactivate();\n  }, [active]);\n\n  // Handle pause status based on 'pause' prop.\n  useEffect(() => {\n    const focusTrap = focusTrapRef.current;\n    paused ? focusTrap?.pause() : focusTrap?.unpause();\n  }, [paused]);\n\n  // Store the currently active element to restore focus to later.\n  const previousElementRef = useRef(typeof document !== 'undefined' ? document.activeElement : null);\n\n  // Restore focus to the previously active element on unmount.\n  useUnmountEffect(() => {\n    if (focusTrapOptions.returnFocusOnDeactivate !== false && previousElementRef.current instanceof HTMLElement) {\n      previousElementRef.current.focus({\n        preventScroll: preventScrollOnDeactivate\n      });\n    }\n  });\n\n  return <div ref={ref} {...props} />;\n});\n\nFocusTrap.displayName = 'FocusTrap';\n", "import { EffectCallback, useEffect, useRef } from 'react';\n\n/**\n * A `useEffect`-like hook that only triggers when a component unmounts. Does not require a dependency list, as the effect callback will always be kept up to date.\n */\nexport function useUnmountEffect(effect: EffectCallback) {\n  // Always use the latest effect callback so that it can reference the latest props and state.\n  const effectRef = useRef(effect);\n  effectRef.current = effect;\n\n  // Trigger the effect callback when the component unmounts.\n  useEffect(\n    () => () => {\n      effectRef.current();\n    },\n    []\n  );\n}\n", "import { globalWidthBreakpoints, globalHeightBreakpoints, SIDE } from './constants';\n\n/**\n * @param {string} input - String to capitalize first letter\n */\nexport function capitalize(input: string) {\n  return input[0].toUpperCase() + input.substring(1);\n}\n\n/**\n * @param {string} prefix - String to prefix ID with\n */\nexport function getUniqueId(prefix = 'pf') {\n  const uid = new Date().getTime() + Math.random().toString(36).slice(2);\n  return `${prefix}-${uid}`;\n}\n\n/**\n * @param { any } this - \"This\" reference\n * @param { Function } func - Function to debounce\n * @param { number } wait - Debounce amount\n */\nexport function debounce(this: any, func: (...args: any[]) => any, wait: number) {\n  let timeout: number;\n  return (...args: any[]) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, args), wait) as any;\n  };\n}\n\n/** This function returns whether or not an element is within the viewable area of a container. If partial is true,\n * then this function will return true even if only part of the element is in view.\n *\n * @param {HTMLElement} container  The container to check if the element is in view of.\n * @param {HTMLElement} element    The element to check if it is view\n * @param {boolean} partial   true if partial view is allowed\n * @param {boolean} strict    true if strict mode is set, never consider the container width and element width\n *\n * @returns { boolean } True if the component is in View.\n */\nexport function isElementInView(\n  container: HTMLElement,\n  element: HTMLElement,\n  partial: boolean,\n  strict: boolean = false\n): boolean {\n  if (!container || !element) {\n    return false;\n  }\n  const containerBounds = container.getBoundingClientRect();\n  const elementBounds = element.getBoundingClientRect();\n  const containerBoundsLeft = Math.ceil(containerBounds.left);\n  const containerBoundsRight = Math.floor(containerBounds.right);\n  const elementBoundsLeft = Math.ceil(elementBounds.left);\n  const elementBoundsRight = Math.floor(elementBounds.right);\n\n  // Check if in view\n  const isTotallyInView = elementBoundsLeft >= containerBoundsLeft && elementBoundsRight <= containerBoundsRight;\n  const isPartiallyInView =\n    (partial || (!strict && containerBounds.width < elementBounds.width)) &&\n    ((elementBoundsLeft < containerBoundsLeft && elementBoundsRight > containerBoundsLeft) ||\n      (elementBoundsRight > containerBoundsRight && elementBoundsLeft < containerBoundsRight));\n\n  // Return outcome\n  return isTotallyInView || isPartiallyInView;\n}\n\n/** This function returns the side the element is out of view on (right, left or both)\n *\n * @param {HTMLElement} container    The container to check if the element is in view of.\n * @param {HTMLElement} element      The element to check if it is view\n *\n * @returns {string} right if the element is of the right, left if element is off the left or both if it is off on both sides.\n */\nexport function sideElementIsOutOfView(container: HTMLElement, element: HTMLElement): string {\n  const containerBounds = container.getBoundingClientRect();\n  const elementBounds = element.getBoundingClientRect();\n  const containerBoundsLeft = Math.floor(containerBounds.left);\n  const containerBoundsRight = Math.floor(containerBounds.right);\n  const elementBoundsLeft = Math.floor(elementBounds.left);\n  const elementBoundsRight = Math.floor(elementBounds.right);\n\n  // Check if in view\n  const isOffLeft = elementBoundsLeft < containerBoundsLeft;\n  const isOffRight = elementBoundsRight > containerBoundsRight;\n\n  let side = SIDE.NONE;\n\n  if (isOffRight && isOffLeft) {\n    side = SIDE.BOTH;\n  } else if (isOffRight) {\n    side = SIDE.RIGHT;\n  } else if (isOffLeft) {\n    side = SIDE.LEFT;\n  }\n  // Return outcome\n  return side;\n}\n\n/** Interpolates a parameterized templateString using values from a templateVars object.\n * The templateVars object should have keys and values which match the templateString's parameters.\n * Example:\n *    const templateString: 'My name is ${firstName} ${lastName}';\n *    const templateVars: {\n *      firstName: 'Jon'\n *      lastName: 'Dough'\n *    };\n *    const result = fillTemplate(templateString, templateVars);\n *    // \"My name is Jon Dough\"\n *\n * @param {string} templateString  The string passed by the consumer\n * @param {object} templateVars The variables passed to the string\n *\n * @returns {string} The template string literal result\n */\nexport function fillTemplate(templateString: string, templateVars: any) {\n  return templateString.replace(/\\${(.*?)}/g, (_, match) => templateVars[match] || '');\n}\n\n/**\n * This function allows for keyboard navigation through dropdowns. The custom argument is optional.\n *\n * @param {number} index The index of the element you're on\n * @param {number} innerIndex Inner index number\n * @param {string} position The orientation of the dropdown\n * @param {string[]} refsCollection Array of refs to the items in the dropdown\n * @param {object[]} kids Array of items in the dropdown\n * @param {boolean} [custom] Allows for handling of flexible content\n */\nexport function keyHandler(\n  index: number,\n  innerIndex: number,\n  position: string,\n  refsCollection: any[],\n  kids: any[],\n  custom = false\n) {\n  if (!Array.isArray(kids)) {\n    return;\n  }\n  const isMultiDimensional = refsCollection.filter((ref) => ref)[0].constructor === Array;\n  let nextIndex = index;\n  let nextInnerIndex = innerIndex;\n  if (position === 'up') {\n    if (index === 0) {\n      // loop back to end\n      nextIndex = kids.length - 1;\n    } else {\n      nextIndex = index - 1;\n    }\n  } else if (position === 'down') {\n    if (index === kids.length - 1) {\n      // loop back to beginning\n      nextIndex = 0;\n    } else {\n      nextIndex = index + 1;\n    }\n  } else if (position === 'left') {\n    if (innerIndex === 0) {\n      nextInnerIndex = refsCollection[index].length - 1;\n    } else {\n      nextInnerIndex = innerIndex - 1;\n    }\n  } else if (position === 'right') {\n    if (innerIndex === refsCollection[index].length - 1) {\n      nextInnerIndex = 0;\n    } else {\n      nextInnerIndex = innerIndex + 1;\n    }\n  }\n  if (\n    refsCollection[nextIndex] === null ||\n    refsCollection[nextIndex] === undefined ||\n    (isMultiDimensional &&\n      (refsCollection[nextIndex][nextInnerIndex] === null || refsCollection[nextIndex][nextInnerIndex] === undefined))\n  ) {\n    keyHandler(nextIndex, nextInnerIndex, position, refsCollection, kids, custom);\n  } else if (custom) {\n    if (refsCollection[nextIndex].focus) {\n      refsCollection[nextIndex].focus();\n    }\n\n    const element = refsCollection[nextIndex] as HTMLElement;\n    element.focus();\n  } else if (position !== 'tab') {\n    if (isMultiDimensional) {\n      refsCollection[nextIndex][nextInnerIndex].focus();\n    } else {\n      refsCollection[nextIndex].focus();\n    }\n  }\n}\n\n/** This function returns a list of tabbable items in a container\n *\n *  @param {any} containerRef to the container\n *  @param {string} tababbleSelectors CSS selector string of tabbable items\n */\nexport function findTabbableElements(containerRef: any, tababbleSelectors: string): any[] {\n  const tabbable = containerRef.current.querySelectorAll(tababbleSelectors);\n  const list = Array.prototype.filter.call(tabbable, function (item) {\n    return item.tabIndex >= '0';\n  });\n  return list;\n}\n\n/** This function is a helper for keyboard navigation through dropdowns.\n *\n * @param {number} index The index of the element you're on\n * @param {string} position The orientation of the dropdown\n * @param {string[]} collection Array of refs to the items in the dropdown\n */\nexport function getNextIndex(index: number, position: string, collection: any[]): number {\n  let nextIndex;\n  if (position === 'up') {\n    if (index === 0) {\n      // loop back to end\n      nextIndex = collection.length - 1;\n    } else {\n      nextIndex = index - 1;\n    }\n  } else if (index === collection.length - 1) {\n    // loop back to beginning\n    nextIndex = 0;\n  } else {\n    nextIndex = index + 1;\n  }\n  if (collection[nextIndex] === undefined || collection[nextIndex][0] === null) {\n    return getNextIndex(nextIndex, position, collection);\n  } else {\n    return nextIndex;\n  }\n}\n\n/** This function is a helper for pluralizing strings.\n *\n * @param {number} i The quantity of the string you want to pluralize\n * @param {string} singular The singular version of the string\n * @param {string} plural The change to the string that should occur if the quantity is not equal to 1.\n *                 Defaults to adding an 's'.\n */\nexport function pluralize(i: number, singular: string, plural?: string) {\n  if (!plural) {\n    plural = `${singular}s`;\n  }\n  return `${i || 0} ${i === 1 ? singular : plural}`;\n}\n\n/**\n * This function is a helper for turning arrays of breakpointMod objects for flex and grid into style object\n *\n * @param {object} mods The modifiers object\n * @param {string} css-variable The appropriate css variable for the component\n */\nexport const setBreakpointCssVars = (\n  mods: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n    '3xl'?: string;\n  },\n  cssVar: string\n): React.CSSProperties =>\n  Object.entries(mods || {}).reduce(\n    (acc, [breakpoint, value]) =>\n      breakpoint === 'default' ? { ...acc, [cssVar]: value } : { ...acc, [`${cssVar}-on-${breakpoint}`]: value },\n    {}\n  );\n\nexport interface Mods {\n  default?: string;\n  xs?: string;\n  sm?: string;\n  md?: string;\n  lg?: string;\n  xl?: string;\n  '2xl'?: string;\n  '3xl'?: string;\n  '4xl'?: string;\n}\n\n/**\n * This function is a helper for turning arrays of breakpointMod objects for data toolbar and flex into classes\n *\n * @param {object} mods The modifiers object\n * @param {any} styles The appropriate styles object for the component\n */\nexport const formatBreakpointMods = (\n  mods: Mods,\n  styles: any,\n  stylePrefix: string = '',\n  breakpoint?: 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl',\n  vertical?: boolean\n) => {\n  if (!mods) {\n    return '';\n  }\n  if (breakpoint && !vertical) {\n    if (breakpoint in mods) {\n      return styles.modifiers[toCamel(`${stylePrefix}${mods[breakpoint as keyof Mods]}`)];\n    }\n    // the current breakpoint is not specified in mods, so we try to find the next nearest\n    const breakpointsOrder = ['2xl', 'xl', 'lg', 'md', 'sm', 'default'];\n    const breakpointsIndex = breakpointsOrder.indexOf(breakpoint);\n    for (let i = breakpointsIndex; i < breakpointsOrder.length; i++) {\n      if (breakpointsOrder[i] in mods) {\n        return styles.modifiers[toCamel(`${stylePrefix}${mods[breakpointsOrder[i] as keyof Mods]}`)];\n      }\n    }\n    return '';\n  }\n\n  return Object.entries(mods || {})\n    .map(\n      ([breakpoint, mod]) =>\n        `${stylePrefix}${mod}${breakpoint !== 'default' ? `-on-${breakpoint}` : ''}${\n          vertical && breakpoint !== 'default' ? '-height' : ''\n        }`\n    )\n    .map(toCamel)\n    .map((mod) => mod.replace(/-?(\\dxl)/gi, (_res, group) => `_${group}`))\n    .map((modifierKey) => styles.modifiers[modifierKey])\n    .filter(Boolean)\n    .join(' ');\n};\n\n/**\n * Return the breakpoint for the given height\n *\n * @param {number | null} height The height to check\n * @returns {'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'} The breakpoint\n */\nexport const getVerticalBreakpoint = (height: number): 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' => {\n  if (height === null) {\n    return null;\n  }\n  if (height >= globalHeightBreakpoints['2xl']) {\n    return '2xl';\n  }\n  if (height >= globalHeightBreakpoints.xl) {\n    return 'xl';\n  }\n  if (height >= globalHeightBreakpoints.lg) {\n    return 'lg';\n  }\n  if (height >= globalHeightBreakpoints.md) {\n    return 'md';\n  }\n  if (height >= globalHeightBreakpoints.sm) {\n    return 'sm';\n  }\n  return 'default';\n};\n\n/**\n * Return the breakpoint for the given width\n *\n * @param {number | null} width The width to check\n * @returns {'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'} The breakpoint\n */\nexport const getBreakpoint = (width: number): 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' => {\n  if (width === null) {\n    return null;\n  }\n  if (width >= globalWidthBreakpoints['2xl']) {\n    return '2xl';\n  }\n  if (width >= globalWidthBreakpoints.xl) {\n    return 'xl';\n  }\n  if (width >= globalWidthBreakpoints.lg) {\n    return 'lg';\n  }\n  if (width >= globalWidthBreakpoints.md) {\n    return 'md';\n  }\n  if (width >= globalWidthBreakpoints.sm) {\n    return 'sm';\n  }\n  return 'default';\n};\n\nconst camelize = (s: string) => s.toUpperCase().replace('-', '').replace('_', '');\n/**\n *\n * @param {string} s string to make camelCased\n */\nexport const toCamel = (s: string) => s.replace(/([-_][a-z])/gi, camelize);\n\n/**\n * Copied from exenv\n */\nexport const canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Calculate the width of the text\n * Example:\n * getTextWidth('my text', node)\n *\n * @param {string} text The text to calculate the width for\n * @param {HTMLElement} node The HTML element\n */\nexport const getTextWidth = (text: string, node: HTMLElement) => {\n  const computedStyle = getComputedStyle(node);\n  // Firefox returns the empty string for .font, so this function creates the .font property manually\n  const getFontFromComputedStyle = () => {\n    let computedFont = '';\n    // Firefox uses percentages for font-stretch, but Canvas does not accept percentages\n    // so convert to keywords, as listed at:\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-stretch\n    const fontStretchLookupTable = {\n      '50%': 'ultra-condensed',\n      '62.5%': 'extra-condensed',\n      '75%': 'condensed',\n      '87.5%': 'semi-condensed',\n      '100%': 'normal',\n      '112.5%': 'semi-expanded',\n      '125%': 'expanded',\n      '150%': 'extra-expanded',\n      '200%': 'ultra-expanded'\n    };\n    // If the retrieved font-stretch percentage isn't found in the lookup table, use\n    // 'normal' as a last resort.\n    let fontStretch;\n    if (computedStyle.fontStretch in fontStretchLookupTable) {\n      fontStretch = (fontStretchLookupTable as any)[computedStyle.fontStretch];\n    } else {\n      fontStretch = 'normal';\n    }\n    computedFont =\n      computedStyle.fontStyle +\n      ' ' +\n      computedStyle.fontVariant +\n      ' ' +\n      computedStyle.fontWeight +\n      ' ' +\n      fontStretch +\n      ' ' +\n      computedStyle.fontSize +\n      '/' +\n      computedStyle.lineHeight +\n      ' ' +\n      computedStyle.fontFamily;\n    return computedFont;\n  };\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  context.font = computedStyle.font || getFontFromComputedStyle();\n\n  return context.measureText(text).width;\n};\n\n/**\n * Get the inner dimensions of an element\n *\n * @param {HTMLElement} node HTML element to calculate the inner dimensions for\n */\nexport const innerDimensions = (node: HTMLElement) => {\n  const computedStyle = getComputedStyle(node);\n\n  let width = node.clientWidth; // width with padding\n  let height = node.clientHeight; // height with padding\n\n  height -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n  width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n  return { height, width };\n};\n\n/**\n * This function is a helper for truncating text content on the left, leaving the right side of the content in view\n *\n * @param {HTMLElement} node HTML element\n * @param {string} value The original text value\n */\nexport const trimLeft = (node: HTMLElement, value: string) => {\n  const availableWidth = innerDimensions(node).width;\n  let newValue = value;\n  if (getTextWidth(value, node) > availableWidth) {\n    // we have text overflow, trim the text to the left and add ... in the front until it fits\n    while (getTextWidth(`...${newValue}`, node) > availableWidth) {\n      newValue = newValue.substring(1);\n    }\n    // replace text with our truncated text\n    if ((node as HTMLInputElement).value) {\n      (node as HTMLInputElement).value = `...${newValue}`;\n    } else {\n      node.innerText = `...${newValue}`;\n    }\n  } else {\n    if ((node as HTMLInputElement).value) {\n      (node as HTMLInputElement).value = value;\n    } else {\n      node.innerText = value;\n    }\n  }\n};\n\n/**\n * @param {string[]} events - Operations to prevent when disabled\n */\nexport const preventedEvents = (events: string[]) =>\n  events.reduce(\n    (handlers, eventToPrevent) => ({\n      ...handlers,\n      [eventToPrevent]: (event: React.SyntheticEvent<HTMLElement>) => {\n        event.preventDefault();\n      }\n    }),\n    {}\n  );\n\n/**\n * @param {React.RefObject<any>[]} timeoutRefs - Timeout refs to clear\n */\nexport const clearTimeouts = (timeoutRefs: React.RefObject<any>[]) => {\n  timeoutRefs.forEach((ref) => {\n    if (ref.current) {\n      clearTimeout(ref.current);\n    }\n  });\n};\n\n/**\n * Helper function to get the language direction of a given element, useful for figuring out if left-to-right\n * or right-to-left specific logic should be applied.\n *\n * @param {HTMLElement} targetElement  - Element the helper will get the language direction of\n * @param {'ltr' | 'rtl'} defaultDirection - Language direction to assume if one can't be determined, defaults to 'ltr'\n * @returns {'ltr' | 'rtl'} - The language direction of the target element\n */\nexport const getLanguageDirection = (targetElement: HTMLElement, defaultDirection: 'ltr' | 'rtl' = 'ltr') => {\n  if (!targetElement) {\n    return defaultDirection;\n  }\n\n  const computedDirection = getComputedStyle(targetElement).getPropertyValue('direction');\n\n  if (['ltr', 'rtl'].includes(computedDirection)) {\n    return computedDirection as 'ltr' | 'rtl';\n  }\n\n  return defaultDirection;\n};\n\n/**\n * Gets a reference element based on a ref property, which can typically be 1 of several types.\n *\n * @param {HTMLElement | (() => HTMLElement) | React.RefObject<any>} refProp The ref property to get a reference element from.\n * @returns The reference element if one is found.\n */\nexport const getReferenceElement = (refProp: HTMLElement | (() => HTMLElement) | React.RefObject<any>) => {\n  if (refProp instanceof HTMLElement) {\n    return refProp;\n  }\n  if (typeof refProp === 'function') {\n    return refProp();\n  }\n\n  return refProp?.current;\n};\n\n/**\n * Gets the [client|offset|scroll]Left property of an element, and determines whether it needs to be\n * adjusted for an RTL direction.\n *\n * @param {HTMLElement} targetElement  - Element to get the inline-start property of.\n * @param {HTMLElement} ancestorElement - Ancestor element to base the inline-start calculation off of when the direction is RTL.\n * @param {'client' | 'offset' | 'scroll'} inlineType - The inline-start property type to base calculations on.\n * @returns {number} - The value of the inline-start property.\n */\nexport const getInlineStartProperty = (\n  targetElement: HTMLElement,\n  ancestorElement: HTMLElement,\n  inlineType: 'client' | 'offset' | 'scroll' = 'offset'\n) => {\n  if (!targetElement) {\n    return;\n  }\n\n  const inlineProperty: 'offsetLeft' | 'clientLeft' | 'scrollLeft' = `${inlineType}Left`;\n  const isRTL = getLanguageDirection(targetElement) === 'rtl';\n  if (!isRTL) {\n    return targetElement[inlineProperty];\n  }\n\n  const widthProperty: 'offsetWidth' | 'clientWidth' | 'scrollWidth' = `${inlineType}Width`;\n  return ancestorElement[widthProperty] - (targetElement[inlineProperty] + targetElement[widthProperty]);\n};\n", "/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport { Component } from 'react';\nimport { getUniqueId } from '../util';\n\nlet currentId = 0;\n\n// gives us a unique (enough) id to add to the generated id that it should prevent issues with duplicate ids\nfunction getRandomId() {\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  } else {\n    return getUniqueId();\n  }\n}\n\nexport interface GenerateIdProps {\n  /** String to prefix the random id with */\n  prefix?: string;\n  /** Component to be rendered with the generated id */\n  children(id: string): React.ReactNode;\n  /** Flag to add randomness to the generated id, should be used whenever possible */\n  isRandom?: boolean;\n}\n\nclass GenerateId extends Component<GenerateIdProps, {}> {\n  static displayName = 'GenerateId';\n  static defaultProps = {\n    prefix: 'pf-random-id-',\n    isRandom: false\n  };\n  uniqueElement = this.props.isRandom ? getRandomId() : currentId++;\n  id = `${this.props.prefix}${this.uniqueElement}`;\n\n  render() {\n    return this.props.children(this.id);\n  }\n}\n\nexport { GenerateId };\n", "export const ASTERISK = '*';\n", "import { useMemo } from 'react';\n\ntype OuiaId = number | string;\n\n// https://ouia.readthedocs.io/en/latest/README.html#ouia-component\nexport interface OUIAProps {\n  // If there is only one instance of the component on the page at once, it is OPTIONAL\n  ouiaId?: OuiaId;\n  // False if in animation\n  ouiaSafe?: boolean;\n}\n\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute: any = {};\n\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType: string, id: OuiaId, ouiaSafe: boolean = true) {\n  return {\n    'data-ouia-component-type': `PF6/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': id\n  };\n}\n\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType: string, id?: OuiaId, ouiaSafe: boolean = true, variant?: string) => ({\n  'data-ouia-component-type': `PF6/${componentType}`,\n  'data-ouia-safe': ouiaSafe,\n  'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType: string, id?: OuiaId, variant?: string) => {\n  const defaultOUIAId = useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n  return id ?? defaultOUIAId;\n};\n\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType: string, variant?: string) {\n  /*\n  ouiaIdByRoute = {\n    [route+componentType]: [number]\n  }\n  */\n  try {\n    let key;\n    if (typeof window !== 'undefined') {\n      // browser environments\n      key = `${window.location.href}-${componentType}-${variant || ''}`;\n    } else {\n      // node/SSR environments\n      key = `${componentType}-${variant || ''}`;\n    }\n    if (!ouiaIdByRoute[key]) {\n      ouiaIdByRoute[key] = 0;\n    }\n    return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n  } catch (exception) {\n    return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n  }\n}\n", "import { useEffect, useLayoutEffect } from 'react';\nimport { canUseDOM } from './util';\n\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n", "import { cloneElement, isValidElement, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { Placement, Modifier } from './thirdparty/popper-core';\nimport { clearTimeouts } from '../util';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\nimport { getLanguageDirection } from '../util';\n\nconst hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom',\n  'top-start': 'bottom-end',\n  'top-end': 'bottom-start',\n  'bottom-start': 'top-end',\n  'bottom-end': 'top-start',\n  'left-start': 'right-end',\n  'left-end': 'right-start',\n  'right-start': 'left-end',\n  'right-end': 'left-start'\n};\n\nconst getOppositePlacement = (placement: Placement): any =>\n  placement.replace(\n    /left|right|bottom|top|top-start|top-end|bottom-start|bottom-end|right-start|right-end|left-start|left-end/g,\n    (matched: string) =>\n      hash[\n        matched as\n          | 'left'\n          | 'right'\n          | 'bottom'\n          | 'top'\n          | 'top-start'\n          | 'top-end'\n          | 'bottom-start'\n          | 'bottom-end'\n          | 'right-start'\n          | 'right-end'\n          | 'left-start'\n          | 'left-end'\n      ] as Placement\n  );\n\nexport const getOpacityTransition = (animationDuration: number) =>\n  `opacity ${animationDuration}ms cubic-bezier(.54, 1.5, .38, 1.11)`;\n\nexport interface PopperProps {\n  /**\n   * Trigger reference element to which the popper is relatively placed to.\n   */\n  trigger?: React.ReactNode;\n  /**\n   * A reference to the trigger reference element that can be passed instead of or along\n   * with the trigger prop. When passed along with the trigger prop, the div element that\n   * wraps the trigger will be removed.\n   */\n  triggerRef?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** The popper (menu/tooltip/popover) element */\n  popper: React.ReactElement<any>;\n  /**\n   * Reference to the popper (menu/tooltip/popover) element.\n   * Passing this prop will remove the wrapper div element from the popper.\n   */\n  popperRef?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** popper direction */\n  direction?: 'up' | 'down';\n  /** popper position */\n  position?: 'right' | 'left' | 'center' | 'start' | 'end';\n  /** Instead of direction and position can set the placement of the popper */\n  placement?: Placement;\n  /** Custom width of the popper. If the value is \"trigger\", it will set the width to the trigger element's width */\n  width?: string | 'trigger';\n  /** Minimum width of the popper. If the value is \"trigger\", it will set the min width to the trigger element's width */\n  minWidth?: string | 'trigger';\n  /** Maximum width of the popper. If the value is \"trigger\", it will set the max width to the trigger element's width */\n  maxWidth?: string | 'trigger';\n  /** The container to append the popper to. Defaults to 'inline'. */\n  appendTo?: HTMLElement | (() => HTMLElement) | 'inline';\n  /** z-index of the popper element */\n  zIndex?: number;\n  /** True to make the popper visible */\n  isVisible?: boolean;\n  /**\n   * Map class names to positions, for example:\n   * {\n   *   top: styles.modifiers.top,\n   *   bottom: styles.modifiers.bottom,\n   *   left: styles.modifiers.left,\n   *   right: styles.modifiers.right\n   * }\n   */\n  positionModifiers?: {\n    top?: string;\n    right?: string;\n    bottom?: string;\n    left?: string;\n    topStart?: string;\n    topEnd?: string;\n    bottomStart?: string;\n    bottomEnd?: string;\n    leftStart?: string;\n    leftEnd?: string;\n    rightStart?: string;\n    rightEnd?: string;\n  };\n  /** Distance of the popper to the trigger */\n  distance?: number;\n  /** Callback function when mouse enters trigger */\n  onMouseEnter?: (event?: MouseEvent) => void;\n  /** Callback function when mouse leaves trigger */\n  onMouseLeave?: (event?: MouseEvent) => void;\n  /** Callback function when trigger is focused */\n  onFocus?: (event?: FocusEvent) => void;\n  /** Callback function when trigger is blurred (focus leaves) */\n  onBlur?: (event?: FocusEvent) => void;\n  /** Callback function when trigger is clicked */\n  onTriggerClick?: (event?: MouseEvent) => void;\n  /** Callback function when Enter key is used on trigger */\n  onTriggerEnter?: (event?: KeyboardEvent) => void;\n  /** Callback function when popper is clicked */\n  onPopperClick?: (event?: MouseEvent) => void;\n  /** Callback function when mouse enters popper content */\n  onPopperMouseEnter?: (event?: MouseEvent) => void;\n  /** Callback function when mouse leaves popper content */\n  onPopperMouseLeave?: (event?: MouseEvent) => void;\n  /** Callback function when document is clicked */\n  onDocumentClick?: (event?: MouseEvent, triggerElement?: HTMLElement, popperElement?: HTMLElement) => void;\n  /** Callback function when keydown event occurs on document */\n  onDocumentKeyDown?: (event?: KeyboardEvent) => void;\n  /** Enable to flip the popper when it reaches the boundary */\n  enableFlip?: boolean;\n  /** The behavior of how the popper flips when it reaches the boundary */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n  /** The duration of the CSS fade transition animation. */\n  animationDuration?: number;\n  /** Delay in ms before the popper appears */\n  entryDelay?: number;\n  /** Delay in ms before the popper disappears */\n  exitDelay?: number;\n  /** Callback when popper's hide transition has finished executing */\n  onHidden?: () => void;\n  /**\n   * Lifecycle function invoked when the popper begins to transition out.\n   */\n  onHide?: () => void;\n  /**\n   * Lifecycle function invoked when the popper has been mounted to the DOM.\n   */\n  onMount?: () => void;\n  /**\n   * Lifecycle function invoked when the popper begins to transition in.\n   */\n  onShow?: () => void;\n  /**\n   * Lifecycle function invoked when the popper has fully transitioned in.\n   */\n  onShown?: () => void;\n  /** Flag to prevent the popper from overflowing its container and becoming partially obscured. */\n  preventOverflow?: boolean;\n}\n\nexport const Popper: React.FunctionComponent<PopperProps> = ({\n  trigger,\n  popper,\n  direction = 'down',\n  position = 'start',\n  placement,\n  width,\n  minWidth = 'trigger',\n  maxWidth,\n  appendTo = () => document.body,\n  zIndex = 9999,\n  isVisible = true,\n  positionModifiers,\n  distance = 0,\n  onMouseEnter,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  onDocumentClick,\n  onTriggerClick,\n  onTriggerEnter,\n  onPopperClick,\n  onPopperMouseEnter,\n  onPopperMouseLeave,\n  onDocumentKeyDown,\n  enableFlip = true,\n  flipBehavior = 'flip',\n  triggerRef,\n  popperRef,\n  animationDuration = 0,\n  entryDelay = 0,\n  exitDelay = 0,\n  onHidden = () => {},\n  onHide = () => {},\n  onMount = () => {},\n  onShow = () => {},\n  onShown = () => {},\n  preventOverflow = false\n}) => {\n  const [triggerElement, setTriggerElement] = useState(null);\n  const [refElement, setRefElement] = useState<HTMLElement>(null);\n  const [popperElement, setPopperElement] = useState<HTMLElement>(null);\n  const [popperContent, setPopperContent] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n  const [internalIsVisible, setInternalIsVisible] = useState(isVisible);\n  const transitionTimerRef = useRef(null);\n  const showTimerRef = useRef(null);\n  const hideTimerRef = useRef(null);\n  const prevExitDelayRef = useRef<number>(undefined);\n\n  const refOrTrigger = refElement || triggerElement;\n  const showPopper = isVisible || internalIsVisible;\n\n  const triggerParent = ((triggerRef as React.RefObject<any>)?.current || triggerElement)?.parentElement;\n  const languageDirection = getLanguageDirection(triggerParent);\n\n  const internalPosition = useMemo<'left' | 'right' | 'center'>(() => {\n    const fixedPositions = { left: 'left', right: 'right', center: 'center' };\n\n    const positionMap = {\n      ltr: {\n        start: 'left',\n        end: 'right',\n        ...fixedPositions\n      },\n      rtl: {\n        start: 'right',\n        end: 'left',\n        ...fixedPositions\n      }\n    };\n\n    return positionMap[languageDirection][position] as 'left' | 'right' | 'center';\n  }, [position, languageDirection]);\n\n  const onDocumentClickCallback = useCallback(\n    (event: MouseEvent) => onDocumentClick(event, refOrTrigger, popperElement),\n    [showPopper, triggerElement, refElement, popperElement, onDocumentClick]\n  );\n\n  useEffect(() => {\n    setReady(true);\n    onMount();\n  }, []);\n\n  // Cancel all timers on unmount\n  useEffect(\n    () => () => {\n      clearTimeouts([transitionTimerRef, hideTimerRef, showTimerRef]);\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (triggerRef) {\n      if ((triggerRef as React.RefObject<any>).current) {\n        setRefElement((triggerRef as React.RefObject<any>).current);\n      } else if (typeof triggerRef === 'function') {\n        setRefElement(triggerRef());\n      }\n    }\n  }, [triggerRef, trigger]);\n  useEffect(() => {\n    // When the popperRef is defined or the popper visibility changes, ensure the popper element is up to date\n    if (popperRef) {\n      if ((popperRef as React.RefObject<any>).current) {\n        setPopperElement((popperRef as React.RefObject<any>).current);\n      } else if (typeof popperRef === 'function') {\n        setPopperElement(popperRef());\n      }\n    }\n  }, [showPopper, popperRef]);\n  useEffect(() => {\n    // Trigger a Popper update when content changes.\n    const observer = new MutationObserver(() => {\n      update && update();\n    });\n    popperElement && observer.observe(popperElement, { attributes: true, childList: true, subtree: true });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [popperElement]);\n\n  const addEventListener = (listener: any, element: Document | HTMLElement, event: string, capture = false) => {\n    if (listener && element) {\n      element.addEventListener(event, listener, { capture });\n    }\n  };\n  const removeEventListener = (listener: any, element: Document | HTMLElement, event: string, capture = false) => {\n    if (listener && element) {\n      element.removeEventListener(event, listener, { capture });\n    }\n  };\n\n  useEffect(() => {\n    addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n    addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n    addEventListener(onFocus, refOrTrigger, 'focus');\n    addEventListener(onBlur, refOrTrigger, 'blur');\n    addEventListener(onTriggerClick, refOrTrigger, 'click');\n    addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n    addEventListener(onPopperClick, popperElement, 'click');\n    addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n    addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n    onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click', true);\n    addEventListener(onDocumentKeyDown, document, 'keydown', true);\n\n    return () => {\n      removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n      removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n      removeEventListener(onFocus, refOrTrigger, 'focus');\n      removeEventListener(onBlur, refOrTrigger, 'blur');\n      removeEventListener(onTriggerClick, refOrTrigger, 'click');\n      removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n      removeEventListener(onPopperClick, popperElement, 'click');\n      removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n      removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n      onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click', true);\n      removeEventListener(onDocumentKeyDown, document, 'keydown', true);\n    };\n  }, [\n    triggerElement,\n    popperElement,\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur,\n    onTriggerClick,\n    onTriggerEnter,\n    onPopperClick,\n    onPopperMouseEnter,\n    onPopperMouseLeave,\n    onDocumentClick,\n    onDocumentKeyDown,\n    refElement\n  ]);\n  const getPlacement = () => {\n    if (placement) {\n      return placement;\n    }\n    let convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n    if (internalPosition !== 'center') {\n      convertedPlacement = `${convertedPlacement}-${internalPosition === 'right' ? 'end' : 'start'}`;\n    }\n    return convertedPlacement as Placement;\n  };\n  const getPlacementMemo = useMemo(getPlacement, [direction, internalPosition, placement]);\n  const getOppositePlacementMemo = useMemo(\n    () => getOppositePlacement(getPlacement()),\n    [direction, internalPosition, placement]\n  );\n\n  const widthMods: Modifier<'widthMods', {}> = useMemo(\n    () => ({\n      name: 'widthMods',\n      enabled: width !== undefined || minWidth !== undefined || maxWidth !== undefined,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn: ({ state }) => {\n        const triggerWidth = state.rects.reference.width;\n        if (width) {\n          state.styles.popper.width = width === 'trigger' ? `${triggerWidth}px` : width;\n        }\n\n        if (minWidth) {\n          state.styles.popper.minWidth = minWidth === 'trigger' ? `${triggerWidth}px` : minWidth;\n        }\n\n        if (maxWidth) {\n          state.styles.popper.maxWidth = maxWidth === 'trigger' ? `${triggerWidth}px` : maxWidth;\n        }\n      },\n      effect: ({ state }) => {\n        const triggerWidth = (state.elements.reference as HTMLElement).offsetWidth;\n        if (width) {\n          state.elements.popper.style.width = width === 'trigger' ? `${triggerWidth}px` : width;\n        }\n\n        if (minWidth) {\n          state.elements.popper.style.minWidth = minWidth === 'trigger' ? `${triggerWidth}px` : minWidth;\n        }\n\n        if (maxWidth) {\n          state.elements.popper.style.maxWidth = maxWidth === 'trigger' ? `${triggerWidth}px` : maxWidth;\n        }\n        return () => {};\n      }\n    }),\n    [width, minWidth, maxWidth]\n  );\n\n  const {\n    styles: popperStyles,\n    attributes,\n    update,\n    forceUpdate\n  } = usePopper(refOrTrigger, popperElement, {\n    placement: getPlacementMemo,\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset: [0, distance]\n        }\n      },\n      {\n        name: 'preventOverflow',\n        enabled: preventOverflow\n      },\n      {\n        // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n        name: 'hide',\n        enabled: true\n      },\n      {\n        name: 'flip',\n        enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n        options: {\n          fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n        }\n      },\n      widthMods\n    ]\n  });\n\n  /** We want to forceUpdate only when a tooltip's content is dynamically updated.\n   * TODO: Investigate into 3rd party libraries for a less limited/specific solution\n   */\n  useEffect(() => {\n    // currentPopperContent = {tooltip children} || {dropdown children}\n    const currentPopperContent =\n      popper?.props?.children?.[1]?.props?.children || popper?.props?.children?.props?.children;\n    setPopperContent(currentPopperContent);\n\n    if (currentPopperContent && popperContent && currentPopperContent !== popperContent) {\n      forceUpdate && forceUpdate();\n    }\n  }, [popper]);\n\n  useEffect(() => {\n    if (prevExitDelayRef.current < exitDelay) {\n      clearTimeouts([transitionTimerRef, hideTimerRef]);\n      hideTimerRef.current = setTimeout(() => {\n        transitionTimerRef.current = setTimeout(() => {\n          setInternalIsVisible(false);\n        }, animationDuration);\n      }, exitDelay);\n    }\n    prevExitDelayRef.current = exitDelay;\n  }, [exitDelay]);\n\n  const show = () => {\n    onShow();\n    clearTimeouts([transitionTimerRef, hideTimerRef]);\n    showTimerRef.current = setTimeout(() => {\n      setInternalIsVisible(true);\n      setOpacity(1);\n      onShown();\n    }, entryDelay);\n  };\n\n  const hide = () => {\n    onHide();\n    clearTimeouts([showTimerRef]);\n    hideTimerRef.current = setTimeout(() => {\n      setOpacity(0);\n      transitionTimerRef.current = setTimeout(() => {\n        setInternalIsVisible(false);\n        setPopperElement(null);\n        onHidden();\n      }, animationDuration);\n    }, exitDelay);\n  };\n\n  useEffect(() => {\n    if (isVisible) {\n      show();\n    } else {\n      hide();\n    }\n  }, [isVisible]);\n\n  // Returns the CSS modifier class in order to place the Popper's arrow properly\n  // Depends on the position of the Popper relative to the reference element\n  const modifierFromPopperPosition = () => {\n    if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n      const popperPlacement = attributes.popper['data-popper-placement'] as keyof typeof positionModifiers;\n      return positionModifiers[popperPlacement];\n    }\n    return positionModifiers.top;\n  };\n\n  const options = {\n    className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()),\n    style: {\n      ...((popper.props && popper.props.style) || {}),\n      ...popperStyles.popper,\n      zIndex,\n      opacity,\n      transition: getOpacityTransition(animationDuration)\n    },\n    ...attributes.popper\n  };\n\n  const getMenuWithPopper = () => {\n    const localPopper = cloneElement(popper, options);\n\n    return popperRef ? (\n      localPopper\n    ) : (\n      <div\n        style={{ display: 'contents' }}\n        ref={(node) => {\n          setPopperElement(node?.firstElementChild as HTMLElement);\n        }}\n      >\n        {localPopper}\n      </div>\n    );\n  };\n\n  const getPopper = () => {\n    if (appendTo === 'inline') {\n      return getMenuWithPopper();\n    } else {\n      const target = typeof appendTo === 'function' ? appendTo() : appendTo;\n      return ReactDOM.createPortal(getMenuWithPopper(), target);\n    }\n  };\n\n  return (\n    <>\n      {!triggerRef && trigger && isValidElement(trigger) && (\n        <div\n          style={{ display: 'contents' }}\n          ref={(node) => {\n            setTriggerElement(node?.firstElementChild as HTMLElement);\n          }}\n        >\n          {trigger}\n        </div>\n      )}\n      {triggerRef && trigger && isValidElement(trigger) && trigger}\n      {ready && showPopper && getPopper()}\n    </>\n  );\n};\nPopper.displayName = 'Popper';\n", "/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { useMemo, useRef, useState } from 'react';\nimport { createPopper as defaultCreatePopper, Options as PopperOptions, VirtualElement } from '../popper-core/popper';\nimport { useIsomorphicLayoutEffect } from '../../../../helpers/useIsomorphicLayout';\n\ntype $Shape<T extends object> = Partial<T>;\n\nconst isEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b);\n\n/**\n * Simple ponyfill for Object.fromEntries\n */\nconst fromEntries = (entries: [string, any][]) =>\n  entries.reduce((acc: any, [key, value]) => {\n    acc[key] = value;\n    return acc;\n  }, {});\n\ntype Options = $Shape<\n  PopperOptions & {\n    createPopper: typeof defaultCreatePopper;\n  }\n>;\n\ntype State = {\n  styles: {\n    [key: string]: $Shape<CSSStyleDeclaration>;\n  };\n  attributes: {\n    [key: string]: {\n      [key: string]: string;\n    };\n  };\n};\n\nconst EMPTY_MODIFIERS: any = [];\n\nexport const usePopper = (\n  referenceElement: (Element | VirtualElement) | null | undefined,\n  popperElement: HTMLElement | null | undefined,\n  options: Options = {}\n) => {\n  const prevOptions = useRef<PopperOptions | null | undefined>(null);\n\n  const optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  const [state, setState] = useState<State>({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      }\n    },\n    attributes: {}\n  });\n\n  const updateStateModifier = useMemo(\n    () => ({\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      // eslint-disable-next-line no-shadow\n      fn: ({ state }: any) => {\n        const elements = Object.keys(state.elements);\n\n        setState({\n          styles: fromEntries(elements.map(element => [element, state.styles[element] || {}])),\n          attributes: fromEntries(elements.map(element => [element, state.attributes[element]]))\n        });\n      },\n      requires: ['computeStyles']\n    }),\n    []\n  );\n\n  const popperOptions = useMemo(() => {\n    const newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [...optionsWithDefaults.modifiers, updateStateModifier, { name: 'applyStyles', enabled: false }]\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [\n    optionsWithDefaults.onFirstUpdate,\n    optionsWithDefaults.placement,\n    optionsWithDefaults.strategy,\n    optionsWithDefaults.modifiers,\n    updateStateModifier\n  ]);\n\n  const popperInstanceRef = useRef<any>(undefined);\n\n  useIsomorphicLayoutEffect(() => {\n    if (popperInstanceRef && popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    const createPopper = options.createPopper || defaultCreatePopper;\n    const popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n\n    popperInstanceRef.current = popperInstance;\n\n    return () => {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};\n", "// @ts-nocheck\nimport { ClientRectObject, VirtualElement } from '../types';\n\n/**\n * @param element\n */\nexport default function getBoundingClientRect(element: Element | VirtualElement): ClientRectObject {\n  const rect = element.getBoundingClientRect();\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    y: rect.top\n  };\n}\n", "// @ts-nocheck\n\n/* :: import type { Window } from '../types'; */\n\n/* :: declare function getWindow(node: Node | Window): Window; */\n\n/**\n * @param node\n */\nexport default function getWindow(node) {\n  if (node.toString() !== '[object Window]') {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  return node;\n}\n", "// @ts-nocheck\nimport getWindow from './getWindow';\nimport { Window } from '../types';\n\n/**\n * @param node\n */\nexport default function getWindowScroll(node: Node | Window) {\n  const win = getWindow(node);\n  const scrollLeft = win.pageXOffset;\n  const scrollTop = win.pageYOffset;\n\n  return {\n    scrollLeft,\n    scrollTop\n  };\n}\n", "// @ts-nocheck\nimport getWindow from './getWindow';\n\n/* :: declare function isElement(node: mixed): boolean %checks(node instanceof\n  Element); */\n/**\n * @param node\n */\nfunction isElement(node) {\n  const OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\n/* :: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof\n  HTMLElement); */\n/**\n * @param node\n */\nfunction isHTMLElement(node) {\n  const OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nexport { isElement, isHTMLElement };\n", "// @ts-nocheck\n\n/**\n * @param element\n */\nexport default function getHTMLElementScroll(element: HTMLElement) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n", "// @ts-nocheck\nimport getWindowScroll from './getWindowScroll';\nimport getWindow from './getWindow';\nimport { isHTMLElement } from './instanceOf';\nimport getHTMLElementScroll from './getHTMLElementScroll';\nimport { Window } from '../types';\n\n/**\n * @param node\n */\nexport default function getNodeScroll(node: Node | Window) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n", "// @ts-nocheck\nimport { Window } from '../types';\n\n/**\n * @param element\n */\nexport default function getNodeName(element: (Node | null | undefined) | Window): string | null | undefined {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n", "// @ts-nocheck\nimport { isElement } from './instanceOf';\nimport { Window } from '../types';\n\n/**\n * @param element\n */\nexport default function getDocumentElement(element: Element | Window): HTMLElement {\n  // $FlowFixMe: assume body is always available\n  return (isElement(element) ? element.ownerDocument : element.document).documentElement;\n}\n", "// @ts-nocheck\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScroll from './getWindowScroll';\n\n/**\n * @param element\n */\nexport default function getWindowScrollBarX(element: Element): number {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\n", "// @ts-nocheck\nimport getWindow from './getWindow';\n\n/**\n * @param element\n */\nexport default function getComputedStyle(element: Element): CSSStyleDeclaration {\n  return getWindow(element).getComputedStyle(element);\n}\n", "// @ts-nocheck\nimport getComputedStyle from './getComputedStyle';\n\n/**\n * @param element\n */\nexport default function isScrollParent(element: HTMLElement): boolean {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n", "// @ts-nocheck\nimport { Rect, VirtualElement, Window } from '../types';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getNodeScroll from './getNodeScroll';\nimport getNodeName from './getNodeName';\nimport { isHTMLElement } from './instanceOf';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getDocumentElement from './getDocumentElement';\nimport isScrollParent from './isScrollParent';\n\n// Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n/**\n * @param elementOrVirtualElement\n * @param offsetParent\n * @param isFixed\n */\nexport default function getCompositeRect(\n  elementOrVirtualElement: Element | VirtualElement,\n  offsetParent: Element | Window,\n  isFixed: boolean = false\n): Rect {\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(elementOrVirtualElement);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n\n  let scroll = { scrollLeft: 0, scrollTop: 0 };\n  let offsets = { x: 0, y: 0 };\n\n  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {\n    if (\n      getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n      isScrollParent(documentElement)\n    ) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n", "// @ts-nocheck\nimport { Rect } from '../types';\n\n// Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n/**\n * @param element\n */\nexport default function getLayoutRect(element: HTMLElement): Rect {\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  };\n}\n", "// @ts-nocheck\nimport getNodeName from './getNodeName';\nimport getDocumentElement from './getDocumentElement';\n\n/**\n * @param element\n */\nexport default function getParentNode(element: Node | ShadowRoot): Node {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (\n    // $FlowFixMe: this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || // DOM Element detected\n    // $FlowFixMe: need a better way to handle this...\n    element.host || // ShadowRoot detected\n    // $FlowFixMe: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n  );\n}\n", "// @ts-nocheck\nimport getParentNode from './getParentNode';\nimport isScrollParent from './isScrollParent';\nimport getNodeName from './getNodeName';\nimport { isHTMLElement } from './instanceOf';\n\n/**\n * @param node\n */\nexport default function getScrollParent(node: Node): HTMLElement {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n", "// @ts-nocheck\nimport getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getNodeName from './getNodeName';\nimport getWindow from './getWindow';\nimport { Window, VisualViewport } from '../types';\nimport isScrollParent from './isScrollParent';\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the \nreference element's position.\n*/\n/**\n * @param element\n * @param list\n */\nexport default function listScrollParents(\n  element: Node,\n  list: (Element | Window)[] = []\n): (Element | Window | VisualViewport)[] {\n  const scrollParent = getScrollParent(element);\n  const isBody = getNodeName(scrollParent) === 'body';\n  const win = getWindow(scrollParent);\n  const target = isBody\n    ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : [])\n    : scrollParent;\n  const updatedList = list.concat(target);\n\n  return isBody\n    ? updatedList // $FlowFixMe: isBody tells us target will be an HTMLElement here\n    : updatedList.concat(listScrollParents(getParentNode(target)));\n}\n", "// @ts-nocheck\nimport getNodeName from './getNodeName';\n\n/**\n * @param element\n */\nexport default function isTableElement(element: Element): boolean {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n", "// @ts-nocheck\nimport getWindow from './getWindow';\nimport getNodeName from './getNodeName';\nimport getComputedStyle from './getComputedStyle';\nimport { isHTMLElement } from './instanceOf';\nimport isTableElement from './isTableElement';\nimport getParentNode from './getParentNode';\nimport getDocumentElement from './getDocumentElement';\n\n/**\n * @param element\n */\nfunction getTrueOffsetParent(element: Element): Element | null | undefined {\n  if (\n    !isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n    getComputedStyle(element).position === 'fixed'\n  ) {\n    return null;\n  }\n\n  const offsetParent = element.offsetParent;\n\n  if (offsetParent) {\n    const html = getDocumentElement(offsetParent);\n\n    if (\n      getNodeName(offsetParent) === 'body' &&\n      getComputedStyle(offsetParent).position === 'static' &&\n      getComputedStyle(html).position !== 'static'\n    ) {\n      return html;\n    }\n  }\n\n  return offsetParent;\n}\n\n// `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n/**\n * @param element\n */\nfunction getContainingBlock(element: Element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    const css = getComputedStyle(currentNode);\n\n    // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    if (css.transform !== 'none' || css.perspective !== 'none' || (css.willChange && css.willChange !== 'auto')) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n/**\n * @param element\n */\nexport default function getOffsetParent(element: Element) {\n  const window = getWindow(element);\n\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static') {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n", "// @ts-nocheck\nexport const top: 'top' = 'top';\nexport const bottom: 'bottom' = 'bottom';\nexport const right: 'right' = 'right';\nexport const left: 'left' = 'left';\nexport const auto: 'auto' = 'auto';\nexport type BasePlacement = typeof top | typeof bottom | typeof right | typeof left;\nexport const basePlacements: BasePlacement[] = [top, bottom, right, left];\n\nexport const start: 'start' = 'start';\nexport const end: 'end' = 'end';\nexport type Variation = typeof start | typeof end;\n\nexport const clippingParents: 'clippingParents' = 'clippingParents';\nexport const viewport: 'viewport' = 'viewport';\nexport type Boundary = HTMLElement | HTMLElement[] | typeof clippingParents;\nexport type RootBoundary = typeof viewport | 'document';\n\nexport const popper: 'popper' = 'popper';\nexport const reference: 'reference' = 'reference';\nexport type Context = typeof popper | typeof reference;\n\nexport type VariationPlacement =\n  | 'top-start'\n  | 'top-end'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right-end'\n  | 'left-start'\n  | 'left-end';\nexport type AutoPlacement = 'auto' | 'auto-start' | 'auto-end';\nexport type ComputedPlacement = VariationPlacement | BasePlacement;\nexport type Placement = AutoPlacement | BasePlacement | VariationPlacement;\n\nexport const variationPlacements: VariationPlacement[] = basePlacements.reduce(\n  (acc: VariationPlacement[], placement: BasePlacement) =>\n    acc.concat([`${placement}-${start}` as any, `${placement}-${end}` as any]),\n  []\n);\nexport const placements: Placement[] = [...basePlacements, auto].reduce(\n  (acc: Placement[], placement: BasePlacement | typeof auto): Placement[] =>\n    acc.concat([placement, `${placement}-${start}` as any, `${placement}-${end}` as any]),\n  []\n);\n\n// modifiers that need to read the DOM\nexport const beforeRead: 'beforeRead' = 'beforeRead';\nexport const read: 'read' = 'read';\nexport const afterRead: 'afterRead' = 'afterRead';\n// pure-logic modifiers\nexport const beforeMain: 'beforeMain' = 'beforeMain';\nexport const main: 'main' = 'main';\nexport const afterMain: 'afterMain' = 'afterMain';\n// modifier with the purpose to write to the DOM (or write into a framework state)\nexport const beforeWrite: 'beforeWrite' = 'beforeWrite';\nexport const write: 'write' = 'write';\nexport const afterWrite: 'afterWrite' = 'afterWrite';\nexport const modifierPhases: ModifierPhases[] = [\n  beforeRead,\n  read,\n  afterRead,\n  beforeMain,\n  main,\n  afterMain,\n  beforeWrite,\n  write,\n  afterWrite\n];\n\nexport type ModifierPhases =\n  | typeof beforeRead\n  | typeof read\n  | typeof afterRead\n  | typeof beforeMain\n  | typeof main\n  | typeof afterMain\n  | typeof beforeWrite\n  | typeof write\n  | typeof afterWrite;\n", "// @ts-nocheck\nimport { Modifier } from '../types';\nimport { modifierPhases } from '../enums';\n\n// source: https://stackoverflow.com/questions/49875255\n/**\n * @param modifiers\n */\nfunction order(modifiers) {\n  const map = new Map();\n  const visited = new Set();\n  const result = [];\n\n  modifiers.forEach(modifier => {\n    map.set(modifier.name, modifier);\n  });\n\n  // On visiting object, check for its dependencies and visit them recursively\n  /**\n   * @param modifier\n   */\n  function sort(modifier: Modifier<any, any>) {\n    visited.add(modifier.name);\n\n    const requires = [...(modifier.requires || []), ...(modifier.requiresIfExists || [])];\n\n    requires.forEach(dep => {\n      if (!visited.has(dep)) {\n        const depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n\n    result.push(modifier);\n  }\n\n  modifiers.forEach(modifier => {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n\n  return result;\n}\n\n/**\n * @param modifiers\n */\nexport default function orderModifiers(modifiers: Modifier<any, any>[]): Modifier<any, any>[] {\n  // order based on dependencies\n  const orderedModifiers = order(modifiers);\n\n  // order based on phase\n  return modifierPhases.reduce(\n    (acc, phase) => acc.concat(orderedModifiers.filter(modifier => modifier.phase === phase)),\n    []\n  );\n}\n", "// @ts-nocheck\n\n/**\n * @param fn\n */\nexport default function debounce<T>(fn: Function): () => Promise<T> {\n  let pending;\n  return () => {\n    if (!pending) {\n      pending = new Promise<T>(resolve => {\n        Promise.resolve().then(() => {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n", "// @ts-nocheck\nimport { BasePlacement, Placement, auto } from '../enums';\n\n/**\n * @param placement\n */\nexport default function getBasePlacement(placement: Placement | typeof auto): BasePlacement {\n  return placement.split('-')[0] as any;\n}\n", "// @ts-nocheck\nimport { Modifier } from '../types';\n\n/**\n * @param modifiers\n */\nexport default function mergeByName(modifiers: Partial<Modifier<any, any>>[]): Partial<Modifier<any, any>>[] {\n  const merged = modifiers.reduce((merged, current) => {\n    const existing = merged[current.name];\n    merged[current.name] = existing\n      ? {\n          ...existing,\n          ...current,\n          options: { ...existing.options, ...current.options },\n          data: { ...existing.data, ...current.data }\n        }\n      : current;\n    return merged;\n  }, {});\n\n  // IE11 does not support Object.values\n  return Object.keys(merged).map(key => merged[key]);\n}\n", "// @ts-nocheck\nimport getWindow from './getWindow';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScrollBarX from './getWindowScrollBarX';\n\n/**\n * @param element\n */\nexport default function getViewportRect(element: Element) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n\n    // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x: x + getWindowScrollBarX(element),\n    y\n  };\n}\n", "// @ts-nocheck\nimport { Rect } from '../types';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll';\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n/**\n * @param element\n */\nexport default function getDocumentRect(element: HTMLElement): Rect {\n  const html = getDocumentElement(element);\n  const winScroll = getWindowScroll(element);\n  const body = element.ownerDocument.body;\n\n  const width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = Math.max(\n    html.scrollHeight,\n    html.clientHeight,\n    body ? body.scrollHeight : 0,\n    body ? body.clientHeight : 0\n  );\n\n  let x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return { width, height, x, y };\n}\n", "// @ts-nocheck\n/**\n * @param parent\n * @param child\n */\nexport default function contains(parent: Element, child: Element) {\n  // $FlowFixMe: hasOwnProperty doesn't seem to work in tests\n  const isShadow = Boolean(child.getRootNode && child.getRootNode().host);\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (isShadow) {\n    let next = child;\n    do {\n      if (next && parent.isSameNode(next)) {\n        return true;\n      }\n      // $FlowFixMe: need a better way to handle this...\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  // Give up, the result is false\n  return false;\n}\n", "// @ts-nocheck\nimport { Rect, ClientRectObject } from '../types';\n\n/**\n * @param rect\n */\nexport default function rectToClientRect(rect: Rect): ClientRectObject {\n  return {\n    ...rect,\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n", "// @ts-nocheck\nimport { ClientRectObject } from '../types';\nimport { Boundary, RootBoundary } from '../enums';\nimport { viewport } from '../enums';\nimport getViewportRect from './getViewportRect';\nimport getDocumentRect from './getDocumentRect';\nimport listScrollParents from './listScrollParents';\nimport getOffsetParent from './getOffsetParent';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport { isElement, isHTMLElement } from './instanceOf';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getParentNode from './getParentNode';\nimport contains from './contains';\nimport getNodeName from './getNodeName';\nimport rectToClientRect from '../utils/rectToClientRect';\n\n/**\n * @param element\n */\nfunction getInnerBoundingClientRect(element: Element) {\n  const rect = getBoundingClientRect(element);\n\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n\n  return rect;\n}\n\n/**\n * @param element\n * @param clippingParent\n */\nfunction getClientRectFromMixedType(element: Element, clippingParent: Element | RootBoundary): ClientRectObject {\n  return clippingParent === viewport\n    ? rectToClientRect(getViewportRect(element))\n    : isHTMLElement(clippingParent)\n    ? getInnerBoundingClientRect(clippingParent)\n    : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n/**\n * @param element\n */\nfunction getClippingParents(element: Element): Element[] {\n  const clippingParents = listScrollParents(getParentNode(element));\n  const canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  }\n\n  // $FlowFixMe: https://github.com/facebook/flow/issues/1414\n  return clippingParents.filter(\n    clippingParent =>\n      isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body'\n  );\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n/**\n * @param element\n * @param boundary\n * @param rootBoundary\n */\nexport default function getClippingRect(\n  element: Element,\n  boundary: Boundary,\n  rootBoundary: RootBoundary\n): ClientRectObject {\n  const mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  const clippingParents = [...mainClippingParents, rootBoundary];\n  const firstClippingParent = clippingParents[0];\n\n  const clippingRect = clippingParents.reduce((accRect, clippingParent) => {\n    const rect = getClientRectFromMixedType(element, clippingParent);\n\n    accRect.top = Math.max(rect.top, accRect.top);\n    accRect.right = Math.min(rect.right, accRect.right);\n    accRect.bottom = Math.min(rect.bottom, accRect.bottom);\n    accRect.left = Math.max(rect.left, accRect.left);\n\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n\n  return clippingRect;\n}\n", "// @ts-nocheck\nimport { Variation, Placement } from '../enums';\n\n/**\n * @param placement\n */\nexport default function getVariation(placement: Placement): Variation | null | undefined {\n  return placement.split('-')[1] as any;\n}\n", "// @ts-nocheck\nimport { Placement } from '../enums';\n\n/**\n * @param placement\n */\nexport default function getMainAxisFromPlacement(placement: Placement): 'x' | 'y' {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n", "// @ts-nocheck\nimport getBasePlacement from './getBasePlacement';\nimport getVariation from './getVariation';\nimport getMainAxisFromPlacement from './getMainAxisFromPlacement';\nimport { Rect, PositioningStrategy, Offsets, ClientRectObject } from '../types';\nimport { top, right, bottom, left, start, end, Placement } from '../enums';\n\n/**\n *\n */\nexport default function computeOffsets({\n  reference,\n  element,\n  placement\n}: {\n  reference: Rect | ClientRectObject;\n  element: Rect | ClientRectObject;\n  strategy: PositioningStrategy;\n  placement?: Placement;\n}): Offsets {\n  const basePlacement = placement ? getBasePlacement(placement) : null;\n  const variation = placement ? getVariation(placement) : null;\n  const commonX = reference.x + reference.width / 2 - element.width / 2;\n  const commonY = reference.y + reference.height / 2 - element.height / 2;\n\n  let offsets;\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  const mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    const len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = Math.floor(offsets[mainAxis]) - Math.floor(reference[len] / 2 - element[len] / 2);\n        break;\n      case end:\n        offsets[mainAxis] = Math.floor(offsets[mainAxis]) + Math.ceil(reference[len] / 2 - element[len] / 2);\n        break;\n      default:\n    }\n  }\n\n  return offsets;\n}\n", "// @ts-nocheck\nimport { SideObject } from '../types';\n\n/**\n *\n */\nexport default function getFreshSideObject(): SideObject {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}\n", "// @ts-nocheck\nimport { SideObject } from '../types';\nimport getFreshSideObject from './getFreshSideObject';\n\n/**\n * @param paddingObject\n */\nexport default function mergePaddingObject(paddingObject: Partial<SideObject>): SideObject {\n  return {\n    ...getFreshSideObject(),\n    ...paddingObject\n  };\n}\n", "// @ts-nocheck\n\n/**\n * @param value\n * @param keys\n */\nexport default function expandToHashMap<T extends number | string | boolean, K extends string>(\n  value: T,\n  keys: K[]\n): {\n  [key: string]: T;\n} {\n  return keys.reduce((hashMap, key) => {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n", "// @ts-nocheck\nimport { State, SideObject, Padding } from '../types';\nimport { Placement, Boundary, RootBoundary, Context } from '../enums';\nimport getBoundingClientRect from '../dom-utils/getBoundingClientRect';\nimport getClippingRect from '../dom-utils/getClippingRect';\nimport getDocumentElement from '../dom-utils/getDocumentElement';\nimport computeOffsets from './computeOffsets';\nimport rectToClientRect from './rectToClientRect';\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from '../enums';\nimport { isElement } from '../dom-utils/instanceOf';\nimport mergePaddingObject from './mergePaddingObject';\nimport expandToHashMap from './expandToHashMap';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  placement: Placement;\n  boundary: Boundary;\n  rootBoundary: RootBoundary;\n  elementContext: Context;\n  altBoundary: boolean;\n  padding: Padding;\n}\n\n/**\n * @param state\n * @param options\n */\nexport default function detectOverflow(state: State, options: Partial<Options> = {}): SideObject {\n  const {\n    placement = state.placement,\n    boundary = clippingParents,\n    rootBoundary = viewport,\n    elementContext = popper,\n    altBoundary = false,\n    padding = 0\n  } = options;\n\n  const paddingObject = mergePaddingObject(\n    typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements)\n  );\n\n  const altContext = elementContext === popper ? reference : popper;\n\n  const referenceElement = state.elements.reference;\n  const popperRect = state.rects.popper;\n  const element = state.elements[altBoundary ? altContext : elementContext];\n\n  const clippingClientRect = getClippingRect(\n    isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper),\n    boundary,\n    rootBoundary\n  );\n\n  const referenceClientRect = getBoundingClientRect(referenceElement);\n\n  const popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement\n  });\n\n  const popperClientRect = rectToClientRect({\n    ...popperRect,\n    ...popperOffsets\n  });\n\n  const elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;\n\n  // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n  const overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n\n  const offsetData = state.modifiersData.offset;\n\n  // Offsets can be applied only to the popper element\n  if (elementContext === popper && offsetData) {\n    const offset = offsetData[placement];\n\n    Object.keys(overflowOffsets).forEach(key => {\n      const multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      const axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n", "// @ts-nocheck\nimport { State, OptionsGeneric, Modifier, Instance, VirtualElement } from './types';\nimport getCompositeRect from './dom-utils/getCompositeRect';\nimport getLayoutRect from './dom-utils/getLayoutRect';\nimport listScrollParents from './dom-utils/listScrollParents';\nimport getOffsetParent from './dom-utils/getOffsetParent';\nimport getComputedStyle from './dom-utils/getComputedStyle';\nimport orderModifiers from './utils/orderModifiers';\nimport debounce from './utils/debounce';\nimport validateModifiers from './utils/validateModifiers';\nimport uniqueBy from './utils/uniqueBy';\nimport getBasePlacement from './utils/getBasePlacement';\nimport mergeByName from './utils/mergeByName';\nimport detectOverflow from './utils/detectOverflow';\nimport { isElement } from './dom-utils/instanceOf';\nimport { auto } from './enums';\n\nexport * from './types';\nexport * from './enums';\n\nconst INVALID_ELEMENT_ERROR =\n  'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nconst INFINITE_LOOP_ERROR =\n  'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\n\nconst DEFAULT_OPTIONS: OptionsGeneric<any> = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\ninterface PopperGeneratorArgs {\n  defaultModifiers?: Modifier<any, any>[];\n  defaultOptions?: Partial<OptionsGeneric<any>>;\n}\n\n/**\n * @param args\n */\nfunction areValidElements(...args: any[]): boolean {\n  return !args.some(element => !(element && typeof element.getBoundingClientRect === 'function'));\n}\n\n/**\n * @param generatorOptions\n */\nexport function popperGenerator(generatorOptions: PopperGeneratorArgs = {}) {\n  const { defaultModifiers = [], defaultOptions = DEFAULT_OPTIONS } = generatorOptions;\n\n  return function createPopper<TModifier extends Partial<Modifier<any, any>>>(\n    reference: Element | VirtualElement,\n    popper: HTMLElement,\n    options: Partial<OptionsGeneric<TModifier>> = defaultOptions\n  ): Instance {\n    let state: Partial<State> = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: { ...DEFAULT_OPTIONS, ...defaultOptions },\n      modifiersData: {},\n      elements: {\n        reference,\n        popper\n      },\n      attributes: {},\n      styles: {}\n    };\n\n    let effectCleanupFns: (() => void)[] = [];\n    let isDestroyed = false;\n\n    const instance = {\n      state,\n      setOptions(options) {\n        cleanupModifierEffects();\n\n        state.options = {\n          // $FlowFixMe\n          ...defaultOptions,\n          ...state.options,\n          ...options\n        };\n\n        state.scrollParents = {\n          reference: isElement(reference)\n            ? listScrollParents(reference)\n            : reference.contextElement\n            ? listScrollParents(reference.contextElement)\n            : [],\n          popper: listScrollParents(popper)\n        };\n\n        // Orders the modifiers based on their dependencies and `phase`\n        // properties\n        const orderedModifiers = orderModifiers(mergeByName([...defaultModifiers, ...state.options.modifiers]));\n\n        // Strip out disabled modifiers\n        state.orderedModifiers = orderedModifiers.filter(m => m.enabled);\n\n        // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n        if (false /* __DEV__*/) {\n          const modifiers = uniqueBy([...orderedModifiers, ...state.options.modifiers], ({ name }) => name);\n\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            const flipModifier = state.orderedModifiers.find(({ name }) => name === 'flip');\n\n            if (!flipModifier) {\n              console.error(\n                ['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' ')\n              );\n            }\n          }\n\n          const { marginTop, marginRight, marginBottom, marginLeft } = getComputedStyle(popper);\n\n          // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(margin => parseFloat(margin))) {\n            console.warn(\n              [\n                'Popper: CSS \"margin\" styles cannot be used to apply padding',\n                'between the popper and its reference element or boundary.',\n                'To replicate margin, use the `offset` modifier, as well as',\n                'the `padding` option in the `preventOverflow` and `flip`',\n                'modifiers.'\n              ].join(' ')\n            );\n          }\n        }\n\n        runModifierEffects();\n\n        return instance.update();\n      },\n\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        const { reference, popper } = state.elements;\n\n        // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n        if (!areValidElements(reference, popper)) {\n          if (false /* __DEV__*/) {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n          return;\n        }\n\n        // Store the reference and popper rects to be read by modifiers\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        };\n\n        // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n        state.reset = false;\n\n        state.placement = state.options.placement;\n\n        // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n        state.orderedModifiers.forEach(\n          modifier =>\n            (state.modifiersData[modifier.name] = {\n              ...modifier.data\n            })\n        );\n\n        let __debug_loops__ = 0;\n        for (let index = 0; index < state.orderedModifiers.length; index++) {\n          if (false /* __DEV__*/) {\n            __debug_loops__ += 1;\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          const { fn, options = {}, name } = state.orderedModifiers[index];\n\n          if (typeof fn === 'function') {\n            state = fn({ state, options, name, instance }) || state;\n          }\n        }\n      },\n\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce<Partial<State>>(\n        () =>\n          new Promise<Partial<State>>(resolve => {\n            instance.forceUpdate();\n            resolve(state);\n          })\n      ),\n\n      destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (false /* __DEV__*/) {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n      return instance;\n    }\n\n    instance.setOptions(options).then(state => {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    });\n\n    // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n    /**\n     *\n     */\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(({ name, options = {}, effect }) => {\n        if (typeof effect === 'function') {\n          const cleanupFn = effect({ state, name, instance, options });\n          const noopFn = () => {};\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    /**\n     *\n     */\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(fn => fn());\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\n\nexport const createPopper = popperGenerator();\n\n// eslint-disable-next-line import/no-unused-modules\nexport { detectOverflow };\n", "// @ts-nocheck\nimport { ModifierArguments, Modifier } from '../types';\nimport getWindow from '../dom-utils/getWindow';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  scroll: boolean;\n  resize: boolean;\n}\n\nconst passive = { passive: true };\n\n/**\n *\n */\nfunction effect({ state, instance, options }: ModifierArguments<Options>) {\n  const { scroll = true, resize = true } = options;\n\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type EventListenersModifier = Modifier<'eventListeners', Options>;\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n} as EventListenersModifier;\n", "// @ts-nocheck\nimport { ModifierArguments, Modifier } from '../types';\nimport computeOffsets from '../utils/computeOffsets';\n\n/**\n *\n */\nfunction popperOffsets({ state, name }: ModifierArguments<{}>) {\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type PopperOffsetsModifier = Modifier<'popperOffsets', {}>;\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n} as PopperOffsetsModifier;\n", "// @ts-nocheck\nimport { PositioningStrategy, Offsets, Modifier, ModifierArguments, Rect, Window } from '../types';\nimport { BasePlacement, top, left, right, bottom } from '../enums';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getWindow from '../dom-utils/getWindow';\nimport getDocumentElement from '../dom-utils/getDocumentElement';\nimport getComputedStyle from '../dom-utils/getComputedStyle';\nimport getBasePlacement from '../utils/getBasePlacement';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  gpuAcceleration: boolean;\n  adaptive: boolean;\n}\n\nconst unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n};\n\n// Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n/**\n *\n */\nfunction roundOffsets({ x, y }): Offsets {\n  const win: Window = window;\n  const dpr = win.devicePixelRatio || 1;\n\n  return {\n    x: Math.round(x * dpr) / dpr || 0,\n    y: Math.round(y * dpr) / dpr || 0\n  };\n}\n\n/**\n *\n */\nexport function mapToStyles({\n  popper,\n  popperRect,\n  placement,\n  offsets,\n  position,\n  gpuAcceleration,\n  adaptive\n}: {\n  popper: HTMLElement;\n  popperRect: Rect;\n  placement: BasePlacement;\n  offsets: Partial<{ x: number; y: number; centerOffset: number }>;\n  position: PositioningStrategy;\n  gpuAcceleration: boolean;\n  adaptive: boolean;\n}) {\n  let { x, y } = roundOffsets(offsets);\n\n  const hasX = offsets.hasOwnProperty('x');\n  const hasY = offsets.hasOwnProperty('y');\n\n  let sideX: string = left;\n  let sideY: string = top;\n\n  const win: Window = window;\n\n  if (adaptive) {\n    let offsetParent = getOffsetParent(popper);\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n    }\n\n    // $FlowFixMe: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n    /* :: offsetParent = (offsetParent: Element); */\n\n    if (placement === top) {\n      sideY = bottom;\n      y -= offsetParent.clientHeight - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left) {\n      sideX = right;\n      x -= offsetParent.clientWidth - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  const commonStyles = {\n    position,\n    ...(adaptive && unsetSides)\n  };\n\n  if (gpuAcceleration) {\n    return {\n      ...commonStyles,\n      [sideY]: hasY ? '0' : '',\n      [sideX]: hasX ? '0' : '',\n      // Layer acceleration can disable subpixel rendering which causes slightly\n      // blurry text on low PPI displays, so we want to use 2D transforms\n      // instead\n      transform: (win.devicePixelRatio || 1) < 2 ? `translate(${x}px, ${y}px)` : `translate3d(${x}px, ${y}px, 0)`\n    };\n  }\n\n  return {\n    ...commonStyles,\n    [sideY]: hasY ? `${y}px` : '',\n    [sideX]: hasX ? `${x}px` : '',\n    transform: ''\n  };\n}\n\n/**\n *\n */\nfunction computeStyles({ state, options }: ModifierArguments<Options>) {\n  const { gpuAcceleration = true, adaptive = true } = options;\n\n  if (false /* __DEV__*/) {\n    const transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (\n      adaptive &&\n      ['transform', 'top', 'right', 'bottom', 'left'].some(property => transitionProperty.indexOf(property) >= 0)\n    ) {\n      console.warn(\n        [\n          'Popper: Detected CSS transitions on at least one of the following',\n          'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".',\n          '\\n\\n',\n          'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow',\n          'for smooth transitions, or remove these properties from the CSS',\n          'transition declaration on the popper element if only transitioning',\n          'opacity or background-color for example.',\n          '\\n\\n',\n          'We recommend using the popper element as a wrapper around an inner',\n          'element that can have any CSS property transitioned for animations.'\n        ].join(' ')\n      );\n    }\n  }\n\n  const commonStyles = {\n    placement: getBasePlacement(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = {\n      ...state.styles.popper,\n      ...mapToStyles({\n        ...commonStyles,\n        offsets: state.modifiersData.popperOffsets,\n        position: state.options.strategy,\n        adaptive\n      })\n    };\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = {\n      ...state.styles.arrow,\n      ...mapToStyles({\n        ...commonStyles,\n        offsets: state.modifiersData.arrow,\n        position: 'absolute',\n        adaptive: false\n      })\n    };\n  }\n\n  state.attributes.popper = {\n    ...state.attributes.popper,\n    'data-popper-placement': state.placement\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ComputeStylesModifier = Modifier<'computeStyles', Options>;\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n} as ComputeStylesModifier;\n", "// @ts-nocheck\nimport { Modifier, ModifierArguments } from '../types';\nimport getNodeName from '../dom-utils/getNodeName';\nimport { isHTMLElement } from '../dom-utils/instanceOf';\n\n// This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\n/**\n *\n */\nfunction applyStyles({ state }: ModifierArguments<{}>) {\n  Object.keys(state.elements).forEach(name => {\n    const style = state.styles[name] || {};\n\n    const attributes = state.attributes[name] || {};\n    const element = state.elements[name];\n\n    // arrow is optional + virtual elements\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    }\n\n    // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe\n    Object.assign(element.style, style);\n\n    Object.keys(attributes).forEach(name => {\n      const value = attributes[name];\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\n/**\n *\n */\nfunction effect({ state }: ModifierArguments<{}>) {\n  const initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return () => {\n    Object.keys(state.elements).forEach(name => {\n      const element = state.elements[name];\n      const attributes = state.attributes[name] || {};\n\n      const styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);\n\n      // Set all values to an empty string to unset them\n      const style = styleProperties.reduce((style, property) => {\n        style[property] = '';\n        return style;\n      }, {});\n\n      // arrow is optional + virtual elements\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      // Flow doesn't support to extend this property, but it's the most\n      // effective way to apply styles to an HTMLElement\n      // $FlowFixMe\n      Object.assign(element.style, style);\n\n      Object.keys(attributes).forEach(attribute => {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ApplyStylesModifier = Modifier<'applyStyles', {}>;\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect,\n  requires: ['computeStyles']\n} as ApplyStylesModifier;\n", "// @ts-nocheck\nimport { Placement } from '../enums';\nimport { ModifierArguments, Modifier, Rect, Offsets } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport { top, left, right, placements } from '../enums';\n\ntype OffsetsFunction = (arg0: {\n  popper: Rect;\n  reference: Rect;\n  placement: Placement;\n}) => [number | null | undefined, number | null | undefined];\n\ntype Offset = OffsetsFunction | [number | null | undefined, number | null | undefined];\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  offset: Offset;\n}\n\n/**\n * @param placement\n * @param rects\n * @param offset\n */\nexport function distanceAndSkiddingToXY(\n  placement: Placement,\n  rects: { popper: Rect; reference: Rect },\n  offset: Offset\n): Offsets {\n  const basePlacement = getBasePlacement(placement);\n  const invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  let [skidding, distance] =\n    typeof offset === 'function'\n      ? offset({\n          ...rects,\n          placement\n        })\n      : offset;\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n\n  return [left, right].indexOf(basePlacement) >= 0 ? { x: distance, y: skidding } : { x: skidding, y: distance };\n}\n\n/**\n *\n */\nfunction offset({ state, options, name }: ModifierArguments<Options>) {\n  const { offset = [0, 0] } = options;\n\n  const data = placements.reduce((acc, placement) => {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n\n  const { x, y } = data[state.placement];\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type OffsetModifier = Modifier<'offset', Options>;\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n} as OffsetModifier;\n", "// @ts-nocheck\nimport { Placement } from '../enums';\n\nconst hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\n/**\n * @param placement\n */\nexport default function getOppositePlacement(placement: Placement): Placement {\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]) as any;\n}\n", "// @ts-nocheck\nimport { Placement } from '../enums';\n\nconst hash = { start: 'end', end: 'start' };\n\n/**\n * @param placement\n */\nexport default function getOppositeVariationPlacement(placement: Placement): Placement {\n  return placement.replace(/start|end/g, matched => hash[matched]) as any;\n}\n", "// @ts-nocheck\nimport { State, Padding } from '../types';\nimport { Placement, ComputedPlacement, Boundary, RootBoundary } from '../enums';\nimport getVariation from './getVariation';\nimport { variationPlacements, basePlacements, placements as allPlacements } from '../enums';\nimport detectOverflow from './detectOverflow';\nimport getBasePlacement from './getBasePlacement';\n\ninterface Options {\n  placement: Placement;\n  padding: Padding;\n  boundary: Boundary;\n  rootBoundary: RootBoundary;\n  flipVariations: boolean;\n  allowedAutoPlacements?: Placement[];\n}\n\n/* :: type OverflowsMap = { [ComputedPlacement]: number }; */\n\n/* ;; type OverflowsMap = { [key in ComputedPlacement]: number }; */\n\n/**\n * @param state\n * @param options\n */\nexport default function computeAutoPlacement(state: Partial<State>, options: Options = {}): ComputedPlacement[] {\n  const { placement, boundary, rootBoundary, padding, flipVariations, allowedAutoPlacements = allPlacements } = options;\n\n  const variation = getVariation(placement);\n\n  const placements = variation\n    ? flipVariations\n      ? variationPlacements\n      : variationPlacements.filter(placement => getVariation(placement) === variation)\n    : basePlacements;\n\n  // $FlowFixMe\n  let allowedPlacements = placements.filter(placement => allowedAutoPlacements.indexOf(placement) >= 0);\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (false /* __DEV__*/) {\n      console.error(\n        [\n          'Popper: The `allowedAutoPlacements` option did not allow any',\n          'placements. Ensure the `placement` option matches the variation',\n          'of the allowed placements.',\n          'For example, \"auto\" cannot be used to allow \"bottom-start\".',\n          'Use \"auto-start\" instead.'\n        ].join(' ')\n      );\n    }\n  }\n\n  // $FlowFixMe: Flow seems to have problems with two array unions...\n  const overflows: OverflowsMap = allowedPlacements.reduce((acc, placement) => {\n    acc[placement] = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      padding\n    })[getBasePlacement(placement)];\n\n    return acc;\n  }, {});\n\n  return Object.keys(overflows).sort((a, b) => overflows[a] - overflows[b]);\n}\n", "// @ts-nocheck\nimport { Placement, Boundary, RootBoundary } from '../enums';\nimport { ModifierArguments, Modifier, Padding } from '../types';\nimport getOppositePlacement from '../utils/getOppositePlacement';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getOppositeVariationPlacement from '../utils/getOppositeVariationPlacement';\nimport detectOverflow from '../utils/detectOverflow';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\nimport { bottom, top, start, right, left, auto } from '../enums';\nimport getVariation from '../utils/getVariation';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  mainAxis: boolean;\n  altAxis: boolean;\n  fallbackPlacements: Placement[];\n  padding: Padding;\n  boundary: Boundary;\n  rootBoundary: RootBoundary;\n  altBoundary: boolean;\n  flipVariations: boolean;\n  allowedAutoPlacements: Placement[];\n}\n\n/**\n * @param placement\n */\nfunction getExpandedFallbackPlacements(placement: Placement): Placement[] {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  const oppositePlacement = getOppositePlacement(placement);\n\n  return [\n    getOppositeVariationPlacement(placement),\n    oppositePlacement,\n    getOppositeVariationPlacement(oppositePlacement)\n  ];\n}\n\n/**\n *\n */\nfunction flip({ state, options, name }: ModifierArguments<Options>) {\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = true,\n    fallbackPlacements: specifiedFallbackPlacements,\n    padding,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    flipVariations = true,\n    allowedAutoPlacements\n  } = options;\n\n  const preferredPlacement = state.options.placement;\n  const basePlacement = getBasePlacement(preferredPlacement);\n  const isBasePlacement = basePlacement === preferredPlacement;\n\n  const fallbackPlacements =\n    specifiedFallbackPlacements ||\n    (isBasePlacement || !flipVariations\n      ? [getOppositePlacement(preferredPlacement)]\n      : getExpandedFallbackPlacements(preferredPlacement));\n\n  const placements = [preferredPlacement, ...fallbackPlacements].reduce(\n    (acc, placement) =>\n      acc.concat(\n        getBasePlacement(placement) === auto\n          ? computeAutoPlacement(state, {\n              placement,\n              boundary,\n              rootBoundary,\n              padding,\n              flipVariations,\n              allowedAutoPlacements\n            })\n          : placement\n      ),\n    []\n  );\n\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n\n  const checksMap = new Map();\n  let makeFallbackChecks = true;\n  let firstFittingPlacement = placements[0];\n\n  for (let i = 0; i < placements.length; i++) {\n    const placement = placements[i];\n    const basePlacement = getBasePlacement(placement);\n    const isStartVariation = getVariation(placement) === start;\n    const isVertical = [top, bottom].indexOf(basePlacement) >= 0;\n    const len = isVertical ? 'width' : 'height';\n\n    const overflow = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      altBoundary,\n      padding\n    });\n\n    let mainVariationSide: any = isVertical ? (isStartVariation ? right : left) : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    const altVariationSide: any = getOppositePlacement(mainVariationSide);\n\n    const checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(check => check)) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    const numberOfChecks = flipVariations ? 3 : 1;\n\n    for (let i = numberOfChecks; i > 0; i--) {\n      const fittingPlacement = placements.find(placement => {\n        const checks = checksMap.get(placement);\n        if (checks) {\n          return checks.slice(0, i).every(check => check);\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        break;\n      }\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type FlipModifier = Modifier<'flip', Options>;\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: { _skip: false }\n} as FlipModifier;\n", "// @ts-nocheck\n\n/**\n * @param axis\n */\nexport default function getAltAxis(axis: 'x' | 'y'): 'x' | 'y' {\n  return axis === 'x' ? 'y' : 'x';\n}\n", "// @ts-nocheck\n\n/**\n * @param min\n * @param value\n * @param max\n */\nexport default function within(min: number, value: number, max: number): number {\n  return Math.max(min, Math.min(value, max));\n}\n", "// @ts-nocheck\nimport { top, left, right, bottom, start } from '../enums';\nimport { Placement, Boundary, RootBoundary } from '../enums';\nimport { Rect, ModifierArguments, Modifier, Padding } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport getAltAxis from '../utils/getAltAxis';\nimport within from '../utils/within';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport detectOverflow from '../utils/detectOverflow';\nimport getVariation from '../utils/getVariation';\nimport getFreshSideObject from '../utils/getFreshSideObject';\n\ntype TetherOffset = (arg0: { popper: Rect; reference: Rect; placement: Placement }) => number | number;\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  /* Prevents boundaries overflow on the main axis */\n  mainAxis: boolean;\n\n  /* Prevents boundaries overflow on the alternate axis */\n  altAxis: boolean;\n\n  /* The area to check the popper is overflowing in */\n  boundary: Boundary;\n\n  /* If the popper is not overflowing the main area, fallback to this one */\n  rootBoundary: RootBoundary;\n\n  /* Use the reference's \"clippingParents\" boundary context */\n  altBoundary: boolean;\n\n  /**\n   * Allows the popper to overflow from its boundaries to keep it near its\n   * reference element\n   */\n  tether: boolean;\n\n  /* Offsets when the `tether` option should activate */\n  tetherOffset: TetherOffset;\n\n  /* Sets a padding to the provided boundary */\n  padding: Padding;\n}\n\n/**\n *\n */\nfunction preventOverflow({ state, options, name }: ModifierArguments<Options>) {\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = false,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    padding,\n    tether = true,\n    tetherOffset = 0\n  } = options;\n\n  const overflow = detectOverflow(state, {\n    boundary,\n    rootBoundary,\n    padding,\n    altBoundary\n  });\n  const basePlacement = getBasePlacement(state.placement);\n  const variation = getVariation(state.placement);\n  const isBasePlacement = !variation;\n  const mainAxis = getMainAxisFromPlacement(basePlacement);\n  const altAxis = getAltAxis(mainAxis);\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const tetherOffsetValue =\n    typeof tetherOffset === 'function'\n      ? tetherOffset({\n          ...state.rects,\n          placement: state.placement\n        })\n      : tetherOffset;\n\n  const data = { x: 0, y: 0 };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    const mainSide = mainAxis === 'y' ? top : left;\n    const altSide = mainAxis === 'y' ? bottom : right;\n    const len = mainAxis === 'y' ? 'height' : 'width';\n    const offset = popperOffsets[mainAxis];\n\n    const min = popperOffsets[mainAxis] + overflow[mainSide];\n    const max = popperOffsets[mainAxis] - overflow[altSide];\n\n    const additive = tether ? -popperRect[len] / 2 : 0;\n\n    const minLen = variation === start ? referenceRect[len] : popperRect[len];\n    const maxLen = variation === start ? -popperRect[len] : -referenceRect[len];\n\n    // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n    const arrowElement = state.elements.arrow;\n    const arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : { width: 0, height: 0 };\n    const arrowPaddingObject = state.modifiersData['arrow#persistent']\n      ? state.modifiersData['arrow#persistent'].padding\n      : getFreshSideObject();\n    const arrowPaddingMin = arrowPaddingObject[mainSide];\n    const arrowPaddingMax = arrowPaddingObject[altSide];\n\n    // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n    const arrowLen = within(0, referenceRect[len], arrowRect[len]);\n\n    const minOffset = isBasePlacement\n      ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue\n      : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    const maxOffset = isBasePlacement\n      ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue\n      : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n\n    const arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    const clientOffset = arrowOffsetParent\n      ? mainAxis === 'y'\n        ? arrowOffsetParent.clientTop || 0\n        : arrowOffsetParent.clientLeft || 0\n      : 0;\n\n    const offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n\n    const tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    const tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    const preventedOffset = within(\n      tether ? Math.min(min, tetherMin) : min,\n      offset,\n      tether ? Math.max(max, tetherMax) : max\n    );\n\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    const mainSide = mainAxis === 'x' ? top : left;\n    const altSide = mainAxis === 'x' ? bottom : right;\n    const offset = popperOffsets[altAxis];\n\n    const min = offset + overflow[mainSide];\n    const max = offset - overflow[altSide];\n\n    const preventedOffset = within(min, offset, max);\n\n    popperOffsets[altAxis] = preventedOffset;\n    data[altAxis] = preventedOffset - offset;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type PreventOverflowModifier = Modifier<'preventOverflow', Options>;\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n} as PreventOverflowModifier;\n", "// @ts-nocheck\nimport { Modifier, ModifierArguments, Padding } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport contains from '../dom-utils/contains';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport within from '../utils/within';\nimport mergePaddingObject from '../utils/mergePaddingObject';\nimport expandToHashMap from '../utils/expandToHashMap';\nimport { left, right, basePlacements, top, bottom } from '../enums';\nimport { isHTMLElement } from '../dom-utils/instanceOf';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  element: HTMLElement | string | null;\n  padding: Padding;\n}\n\n/**\n *\n */\nfunction arrow({ state, name }: ModifierArguments<Options>) {\n  const arrowElement = state.elements.arrow;\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const basePlacement = getBasePlacement(state.placement);\n  const axis = getMainAxisFromPlacement(basePlacement);\n  const isVertical = [left, right].indexOf(basePlacement) >= 0;\n  const len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  const paddingObject = state.modifiersData[`${name}#persistent`].padding;\n  const arrowRect = getLayoutRect(arrowElement);\n  const minProp = axis === 'y' ? top : left;\n  const maxProp = axis === 'y' ? bottom : right;\n\n  const endDiff =\n    state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  const startDiff = popperOffsets[axis] - state.rects.reference[axis];\n\n  const arrowOffsetParent = getOffsetParent(arrowElement);\n  const clientSize = arrowOffsetParent\n    ? axis === 'y'\n      ? arrowOffsetParent.clientHeight || 0\n      : arrowOffsetParent.clientWidth || 0\n    : 0;\n\n  const centerToReference = endDiff / 2 - startDiff / 2;\n\n  // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n  const min = paddingObject[minProp];\n  const max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  const center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  const offset = within(min, center, max);\n\n  // Prevents breaking syntax highlighting...\n  const axisProp: string = axis;\n  state.modifiersData[name] = {\n    [axisProp]: offset,\n    centerOffset: offset - center\n  };\n}\n\n/**\n *\n */\nfunction effect({ state, options, name }: ModifierArguments<Options>) {\n  let { element: arrowElement = '[data-popper-arrow]', padding = 0 } = options;\n\n  if (arrowElement == null) {\n    return;\n  }\n\n  // CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (false /* __DEV__*/) {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(\n        [\n          'Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).',\n          'To use an SVG arrow, wrap it in an HTMLElement that will be used as',\n          'the arrow.'\n        ].join(' ')\n      );\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (false /* __DEV__*/) {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n  state.modifiersData[`${name}#persistent`] = {\n    padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements))\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ArrowModifier = Modifier<'arrow', Options>;\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n} as ArrowModifier;\n", "// @ts-nocheck\nimport { ModifierArguments, Modifier, Rect, SideObject, Offsets } from '../types';\nimport { top, bottom, left, right } from '../enums';\nimport detectOverflow from '../utils/detectOverflow';\n\n/**\n * @param overflow\n * @param rect\n * @param preventedOffsets\n */\nfunction getSideOffsets(overflow: SideObject, rect: Rect, preventedOffsets: Offsets = { x: 0, y: 0 }): SideObject {\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\n/**\n * @param overflow\n */\nfunction isAnySideFullyClipped(overflow: SideObject): boolean {\n  return [top, right, bottom, left].some(side => overflow[side] >= 0);\n}\n\n/**\n *\n */\nfunction hide({ state, name }: ModifierArguments<{}>) {\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const preventedOffsets = state.modifiersData.preventOverflow;\n\n  const referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  const popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n\n  const referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  const popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n\n  const isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  const hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n\n  state.modifiersData[name] = {\n    referenceClippingOffsets,\n    popperEscapeOffsets,\n    isReferenceHidden,\n    hasPopperEscaped\n  };\n\n  state.attributes.popper = {\n    ...state.attributes.popper,\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type HideModifier = Modifier<'hide', {}>;\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n} as HideModifier;\n", "// @ts-nocheck\nimport { popperGenerator, detectOverflow } from '.';\n\nimport eventListeners from './modifiers/eventListeners';\nimport popperOffsets from './modifiers/popperOffsets';\nimport computeStyles from './modifiers/computeStyles';\nimport applyStyles from './modifiers/applyStyles';\nimport offset from './modifiers/offset';\nimport flip from './modifiers/flip';\nimport preventOverflow from './modifiers/preventOverflow';\nimport arrow from './modifiers/arrow';\nimport hide from './modifiers/hide';\n\nexport * from './types';\n\nconst defaultModifiers = [\n  eventListeners,\n  popperOffsets,\n  computeStyles,\n  applyStyles,\n  offset,\n  flip,\n  preventOverflow,\n  arrow,\n  hide\n];\n\nconst createPopper = popperGenerator({ defaultModifiers });\n\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };\n", "/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args: any): string {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  const classes = [] as string[];\n  const hasOwn = {}.hasOwnProperty;\n\n  args.filter(Boolean).forEach((arg: any) => {\n    const argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = css(...(arg as any));\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n\n  return classes.join(' ');\n}\n", "import { Component } from 'react';\nimport { canUseDOM } from './util';\n\nexport interface KeyboardHandlerProps {\n  /** Reference of the container to apply keyboard interaction */\n  containerRef: React.RefObject<any>;\n  /** Callback returning an array of navigable elements to be traversable via vertical arrow keys. This array should not include non-navigable elements such as disabled elements. */\n  createNavigableElements: () => Element[];\n  /** Callback to determine if a given event is from the container. By default the function conducts a basic check to see if the containerRef contains the event target */\n  isEventFromContainer?: (event: KeyboardEvent) => boolean;\n  /** Additional key handling outside of the included arrow keys, enter, and space handling */\n  additionalKeyHandler?: (event: KeyboardEvent) => void;\n  /** Callback to determine if a given element from the navigable elements array is the active element of the page */\n  isActiveElement?: (navigableElement: Element) => boolean;\n  /** Callback returning the focusable element of a given element from the navigable elements array */\n  getFocusableElement?: (navigableElement: Element) => Element;\n  /** Valid sibling tags that horizontal arrow handling will focus */\n  validSiblingTags?: string[];\n  /** Flag indicating that the tabIndex of the currently focused element and next focused element should be updated, in the case of using a roving tabIndex */\n  updateTabIndex?: boolean;\n  /** Flag indicating that next focusable element of a horizontal movement will be this element's sibling */\n  onlyTraverseSiblings?: boolean;\n  /** Flag indicating that the included vertical arrow key handling should be ignored */\n  noVerticalArrowHandling?: boolean;\n  /** Flag indicating that the included horizontal arrow key handling should be ignored */\n  noHorizontalArrowHandling?: boolean;\n  /** Flag indicating that the included enter key handling should be ignored */\n  noEnterHandling?: boolean;\n  /** Flag indicating that the included space key handling should be ignored */\n  noSpaceHandling?: boolean;\n}\n\n/**\n * This function is a helper for handling basic arrow keyboard interactions. If a component already has its own key handler and event start up/tear down, this function may be easier to integrate in over the full component.\n *\n * @param {event} event Event triggered by the keyboard\n * @param {element[]} navigableElements Valid traversable elements of the container\n * @param {function} isActiveElement Callback to determine if a given element from the navigable elements array is the active element of the page\n * @param {function} getFocusableElement Callback returning the focusable element of a given element from the navigable elements array\n * @param {string[]} validSiblingTags Valid sibling tags that horizontal arrow handling will focus\n * @param {boolean} noVerticalArrowHandling Flag indicating that the included vertical arrow key handling should be ignored\n * @param {boolean} noHorizontalArrowHandling Flag indicating that the included horizontal arrow key handling should be ignored\n * @param {boolean} updateTabIndex Flag indicating that the tabIndex of the currently focused element and next focused element should be updated, in the case of using a roving tabIndex\n * @param {boolean} onlyTraverseSiblings Flag indicating that next focusable element of a horizontal movement will be this element's sibling\n */\nexport const handleArrows = (\n  event: KeyboardEvent,\n  navigableElements: Element[],\n  isActiveElement: (element: Element) => boolean = (element) => document.activeElement.contains(element),\n  getFocusableElement: (element: Element) => Element = (element) => element,\n  validSiblingTags: string[] = ['A', 'BUTTON', 'INPUT'],\n  noVerticalArrowHandling: boolean = false,\n  noHorizontalArrowHandling: boolean = false,\n  updateTabIndex: boolean = true,\n  onlyTraverseSiblings: boolean = true\n) => {\n  const activeElement = document.activeElement;\n  const key = event.key;\n  let moveTarget: Element = null;\n\n  // Handle vertical arrow keys. If noVerticalArrowHandling is passed, skip this block\n  if (!noVerticalArrowHandling) {\n    if (['ArrowUp', 'ArrowDown'].includes(key)) {\n      event.preventDefault();\n      event.stopImmediatePropagation(); // For menus in menus\n\n      // Traverse navigableElements to find the element which is currently active\n      let currentIndex = -1;\n      // while (currentIndex === -1) {\n      navigableElements.forEach((element, index) => {\n        if (isActiveElement(element)) {\n          // Once found, move up or down the array by 1. Determined by the vertical arrow key direction\n          let increment = 0;\n\n          // keep increasing the increment until you've tried the whole navigableElement\n          while (!moveTarget && increment < navigableElements.length && increment * -1 < navigableElements.length) {\n            key === 'ArrowUp' ? increment-- : increment++;\n            currentIndex = index + increment;\n\n            if (currentIndex >= navigableElements.length) {\n              currentIndex = 0;\n            }\n            if (currentIndex < 0) {\n              currentIndex = navigableElements.length - 1;\n            }\n\n            // Set the next target element (undefined if none found)\n            moveTarget = getFocusableElement(navigableElements[currentIndex]);\n          }\n        }\n      });\n      // }\n    }\n  }\n\n  // Handle horizontal arrow keys. If noHorizontalArrowHandling is passed, skip this block\n  if (!noHorizontalArrowHandling) {\n    if (['ArrowLeft', 'ArrowRight'].includes(key)) {\n      event.preventDefault();\n      event.stopImmediatePropagation(); // For menus in menus\n\n      let currentIndex = -1;\n      navigableElements.forEach((element, index) => {\n        if (isActiveElement(element)) {\n          const activeRow = navigableElements[index].querySelectorAll(validSiblingTags.join(',')); // all focusable elements in my row\n\n          if (!activeRow.length || onlyTraverseSiblings) {\n            let nextSibling = activeElement;\n\n            while (nextSibling) {\n              const isDirectChildOfNavigableElement = nextSibling.parentElement === element;\n              const nextSiblingMainElement = isDirectChildOfNavigableElement ? nextSibling : nextSibling.parentElement;\n              nextSibling =\n                key === 'ArrowLeft'\n                  ? nextSiblingMainElement.previousElementSibling\n                  : nextSiblingMainElement.nextElementSibling;\n\n              if (nextSibling) {\n                if (validSiblingTags.includes(nextSibling?.tagName)) {\n                  moveTarget = nextSibling;\n                  break;\n                }\n                // For cases where the validSiblingTag is inside a div wrapper\n                if (validSiblingTags.includes(nextSibling.children[0]?.tagName)) {\n                  moveTarget = nextSibling.children[0];\n                  break;\n                }\n              }\n            }\n          } else {\n            activeRow.forEach((focusableElement, index) => {\n              if (event.target === focusableElement) {\n                const increment = key === 'ArrowLeft' ? -1 : 1;\n                currentIndex = index + increment;\n                if (currentIndex >= activeRow.length) {\n                  currentIndex = 0;\n                }\n                if (currentIndex < 0) {\n                  currentIndex = activeRow.length - 1;\n                }\n\n                moveTarget = activeRow[currentIndex];\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  if (moveTarget) {\n    // If updateTabIndex is true, set the previously focussed element's tabIndex to -1 and the next focussed element's tabIndex to 0\n    // This updates the tabIndex for a roving tabIndex\n    if (updateTabIndex) {\n      (activeElement as HTMLElement).tabIndex = -1;\n      (moveTarget as HTMLElement).tabIndex = 0;\n    }\n    // If a move target has been set by either arrow handler, focus that target\n    (moveTarget as HTMLElement).focus();\n  }\n};\n\n/**\n * This function is a helper for setting the initial tabIndexes in a roving tabIndex\n *\n * @param {HTMLElement[]} options Array of elements which should have a tabIndex of -1, except for the first element which will have a tabIndex of 0\n */\nexport const setTabIndex = (options: HTMLElement[]) => {\n  if (options && options.length > 0) {\n    // Iterate the options and set the tabIndex to -1 on every option\n    options.forEach((option: HTMLElement) => {\n      option.tabIndex = -1;\n    });\n    // Manually set the tabIndex of the first option to 0\n    options[0].tabIndex = 0;\n  }\n};\n\n/**\n * This function is used in Dropdown, Select and MenuContainer as a default toggle keydown behavior. When the toggle has focus and the menu is open, pressing the up/down arrow keys will focus a valid non-disabled menu item - the first item for the down arrow key and last item for the up arrow key.\n *\n * @param event Event triggered by the keyboard\n * @param menuRef Menu reference\n */\nexport const onToggleArrowKeydownDefault = (event: KeyboardEvent, menuRef: React.RefObject<HTMLDivElement | null>) => {\n  if (event.key !== 'ArrowDown' && event.key !== 'ArrowUp') {\n    return;\n  }\n\n  event.preventDefault();\n\n  const listItems = Array.from(menuRef.current?.querySelectorAll('li'));\n  const focusableElements = listItems\n    .map((li) => li.querySelector('button:not(:disabled),input:not(:disabled),a:not([aria-disabled=\"true\"])'))\n    .filter((el) => el !== null);\n\n  let focusableElement: Element;\n  if (event.key === 'ArrowDown') {\n    focusableElement = focusableElements[0];\n  } else {\n    focusableElement = focusableElements[focusableElements.length - 1];\n  }\n  focusableElement && (focusableElement as HTMLElement).focus();\n};\n\nclass KeyboardHandler extends Component<KeyboardHandlerProps> {\n  static displayName = 'KeyboardHandler';\n  static defaultProps: KeyboardHandlerProps = {\n    containerRef: null,\n    createNavigableElements: () => null as Element[],\n    isActiveElement: (navigableElement: Element) => document.activeElement === navigableElement,\n    getFocusableElement: (navigableElement: Element) => navigableElement,\n    validSiblingTags: ['BUTTON', 'A'],\n    onlyTraverseSiblings: true,\n    updateTabIndex: true,\n    noHorizontalArrowHandling: false,\n    noVerticalArrowHandling: false,\n    noEnterHandling: false,\n    noSpaceHandling: false\n  };\n\n  componentDidMount() {\n    if (canUseDOM) {\n      window.addEventListener('keydown', this.keyHandler);\n    }\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('keydown', this.keyHandler);\n    }\n  }\n\n  keyHandler = (event: KeyboardEvent) => {\n    const { isEventFromContainer } = this.props;\n    // If the passed keyboard event is not from the container, ignore the event by returning\n    if (isEventFromContainer ? !isEventFromContainer(event) : !this._isEventFromContainer(event)) {\n      return;\n    }\n\n    const {\n      isActiveElement,\n      getFocusableElement,\n      noVerticalArrowHandling,\n      noHorizontalArrowHandling,\n      noEnterHandling,\n      noSpaceHandling,\n      updateTabIndex,\n      validSiblingTags,\n      additionalKeyHandler,\n      createNavigableElements,\n      onlyTraverseSiblings\n    } = this.props;\n\n    // Pass the event off to be handled by any custom handler\n    additionalKeyHandler && additionalKeyHandler(event);\n\n    // Initialize navigableElements from the createNavigableElements callback\n    const navigableElements = createNavigableElements();\n    if (!navigableElements) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'No navigable elements have been passed to the KeyboardHandler. Keyboard navigation provided by this component will be ignored.'\n      );\n      return;\n    }\n    const key = event.key;\n\n    // Handle enter key. If noEnterHandling is passed, skip this block\n    if (!noEnterHandling) {\n      if (key === 'Enter') {\n        event.preventDefault();\n        event.stopImmediatePropagation(); // For menus in menus\n        (document.activeElement as HTMLElement).click();\n      }\n    }\n\n    // Handle space key. If noSpaceHandling is passed, skip this block\n    if (!noSpaceHandling) {\n      if (key === ' ') {\n        event.preventDefault();\n        event.stopImmediatePropagation(); // For menus in menus\n        (document.activeElement as HTMLElement).click();\n      }\n    }\n\n    // Inject helper handler for arrow navigation\n    handleArrows(\n      event,\n      navigableElements,\n      isActiveElement,\n      getFocusableElement,\n      validSiblingTags,\n      noVerticalArrowHandling,\n      noHorizontalArrowHandling,\n      updateTabIndex,\n      onlyTraverseSiblings\n    );\n  };\n\n  _isEventFromContainer = (event: KeyboardEvent) => {\n    const { containerRef } = this.props;\n    return containerRef.current && containerRef.current.contains(event.target as HTMLElement);\n  };\n\n  render() {\n    return null as React.ReactNode;\n  }\n}\n\nexport { KeyboardHandler };\n", "import { canUseDOM, debounce } from './util';\n\n/**\n * This function creates a ResizeObserver used to handle resize events for the given containerRef. If ResizeObserver\n * or the given containerRef are not available, a window resize event listener is used by default.\n *\n * Example 1:\n *\n * private containerRef = createRef<HTMLDivElement>();\n * private observer: any = () => {};\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.containerRef.current, this.handleResize, true);\n * }\n *\n * public componentWillUnmount() {\n *   this.observer();\n * }\n *\n * private handleResize = () => {\n *   if (this.containerRef.current && this.containerRef.current.clientWidth) {\n *     this.setState({ width: this.containerRef.current.clientWidth });\n *   }\n * };\n *\n * public render() {\n *   return (\n *     <div ref={this.containerRef} >\n *       <Chart width={this.state.width} ... />\n *     </div>\n *   );\n * }\n *\n * Example 2:\n *\n * private inputRef = createRef<HTMLInputElement>();\n * private observer: any = () => {};\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.inputRef.current, this.handleResize, true);\n * }\n *\n * public componentWillUnmount() {\n *   this.observer();\n * }\n *\n * private handleResize = () => {\n *   if (this.inputRef.current) {\n *     trimLeft(inputRef.current, String(this.props.value));\n *   }\n * };\n *\n * public render() {\n *   return (\n *     <input ref={this.inputRef} ... />\n *   );\n * }\n *\n * Example 3 - With debounced method passed in:\n *\n * public componentDidMount() {\n *   this.observer = getResizeObserver(this.inputRef.current, debounce(this.handleResize, 250));\n * }\n *\n * @param {Element} containerRefElement The container reference to observe\n * @param {Function} handleResize The function to call for resize events\n * @param {boolean} useRequestAnimationFrame Whether to pass the handleResize function as a callback to requestAnimationFrame. Pass in true when the function passed in is not debounced.\n * @return {Function} The function used to unobserve resize events\n */\nexport const getResizeObserver = (\n  containerRefElement: Element,\n  handleResize: () => void,\n  useRequestAnimationFrame?: boolean\n) => {\n  let unobserve: any;\n\n  if (canUseDOM) {\n    const { ResizeObserver } = window as any;\n\n    if (containerRefElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver((entries: any) => {\n        // Wrap resize function in requestAnimationFrame to avoid \"ResizeObserver loop limit exceeded\" errors\n        if (useRequestAnimationFrame) {\n          window.requestAnimationFrame(() => {\n            if (Array.isArray(entries) && entries.length > 0) {\n              debounce(handleResize, 100);\n            }\n          });\n          // Avoid wrapping function in requestAnimationFrame if the function is debounced\n        } else {\n          if (Array.isArray(entries) && entries.length > 0) {\n            handleResize();\n          }\n        }\n      });\n      resizeObserver.observe(containerRefElement);\n      unobserve = () => resizeObserver.unobserve(containerRefElement);\n    } else {\n      window.addEventListener('resize', handleResize);\n      unobserve = () => window.removeEventListener('resize', handleResize);\n    }\n  }\n  return () => {\n    if (unobserve) {\n      unobserve();\n    }\n  };\n};\n", "/** This is a custom React hook in a format suggest by Dan Abramov in a blog post here:\n * https://overreacted.io/making-setinterval-declarative-with-react-hooks/. It allows setInterval to be used\n * declaratively in functional React components.\n */\nimport { useEffect, useRef } from 'react';\n\nexport function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(() => {});\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n", "/**\n * @param {Date} date - A date to check the validity of\n */\nexport const isValidDate = (date?: Date) => Boolean(date && !isNaN(date as any));\n", "import './spinner.css';\nexport default {\n  \"modifiers\": {\n    \"inline\": \"pf-m-inline\",\n    \"xs\": \"pf-m-xs\",\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"xl\": \"pf-m-xl\"\n  },\n  \"spinner\": \"pf-v6-c-spinner\",\n  \"spinnerPath\": \"pf-v6-c-spinner__path\"\n};", "export const c_spinner_diameter = {\n  \"name\": \"--pf-v6-c-spinner--diameter\",\n  \"value\": \"3.5rem\",\n  \"var\": \"var(--pf-v6-c-spinner--diameter)\"\n};\nexport default c_spinner_diameter;", "import styles from '@patternfly/react-styles/css/components/Spinner/spinner';\nimport { css } from '@patternfly/react-styles';\nimport cssDiameter from '@patternfly/react-tokens/dist/esm/c_spinner_diameter';\n\nexport enum spinnerSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl'\n}\n\nexport interface SpinnerProps extends React.SVGProps<SVGSVGElement> {\n  /** Additional classes added to the Spinner. */\n  className?: string;\n  /** Size variant of progress. */\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  /** Text describing that current loading status or progress */\n  'aria-valuetext'?: string;\n  /** Diameter of spinner set as CSS variable */\n  diameter?: string;\n  /** Indicates the spinner is inline and the size should inherit the text font size. This will override the size prop. */\n  isInline?: boolean;\n  /** Accessible label to describe what is loading */\n  'aria-label'?: string;\n  /** Id of element which describes what is being loaded */\n  'aria-labelledBy'?: string;\n}\n\nexport const Spinner: React.FunctionComponent<SpinnerProps> = ({\n  className = '',\n  size = 'xl',\n  'aria-valuetext': ariaValueText = 'Loading...',\n  diameter,\n  isInline = false,\n  'aria-label': ariaLabel,\n  'aria-labelledBy': ariaLabelledBy,\n  ...props\n}: SpinnerProps) => (\n  <svg\n    className={css(styles.spinner, isInline ? styles.modifiers.inline : styles.modifiers[size], className)}\n    role=\"progressbar\"\n    aria-valuetext={ariaValueText}\n    viewBox=\"0 0 100 100\"\n    {...(diameter && { style: { [cssDiameter.name]: diameter } as React.CSSProperties })}\n    {...(ariaLabel && { 'aria-label': ariaLabel })}\n    {...(ariaLabelledBy && { 'aria-labelledBy': ariaLabelledBy })}\n    {...(!ariaLabel && !ariaLabelledBy && { 'aria-label': 'Contents' })}\n    {...props}\n  >\n    <circle className={styles.spinnerPath} cx=\"50\" cy=\"50\" r=\"45\" fill=\"none\" />\n  </svg>\n);\nSpinner.displayName = 'Spinner';\n", "import './badge.css';\nexport default {\n  \"badge\": \"pf-v6-c-badge\",\n  \"badgeToggleIcon\": \"pf-v6-c-badge__toggle-icon\",\n  \"modifiers\": {\n    \"read\": \"pf-m-read\",\n    \"unread\": \"pf-m-unread\",\n    \"disabled\": \"pf-m-disabled\"\n  }\n};", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge';\n\nexport interface BadgeProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Text announced by screen readers to indicate the current content/status of the badge. */\n  screenReaderText?: string;\n  /**  Adds styling to the badge to indicate it has been read */\n  isRead?: boolean;\n  /** Adds styling to the badge to indicate it is disabled */\n  isDisabled?: boolean;\n  /** content rendered inside the Badge */\n  children?: React.ReactNode;\n  /** additional classes added to the Badge */\n  className?: string;\n}\n\nexport const Badge: React.FunctionComponent<BadgeProps> = ({\n  isRead = false,\n  isDisabled = false,\n  className = '',\n  children = '',\n  screenReaderText,\n  ...props\n}: BadgeProps) => (\n  <span\n    {...props}\n    className={css(\n      styles.badge,\n      (isRead ? styles.modifiers.read : styles.modifiers.unread) as any,\n      isDisabled && styles.modifiers.disabled,\n      className\n    )}\n  >\n    {children}\n    {screenReaderText && <span className=\"pf-v6-screen-reader\">{screenReaderText}</span>}\n  </span>\n);\nBadge.displayName = 'Badge';\n", "import { forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { Spinner, spinnerSize } from '../Spinner';\nimport { useOUIAProps, OUIAProps } from '../../helpers/OUIA/ouia';\nimport { Badge } from '../Badge';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport OutlinedStarIcon from '@patternfly/react-icons/dist/esm/icons/outlined-star-icon';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport { hamburgerIcon } from './hamburgerIcon';\n\nexport enum ButtonVariant {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary',\n  danger = 'danger',\n  warning = 'warning',\n  link = 'link',\n  plain = 'plain',\n  control = 'control',\n  stateful = 'stateful'\n}\n\nexport enum ButtonType {\n  button = 'button',\n  submit = 'submit',\n  reset = 'reset'\n}\n\nexport enum ButtonSize {\n  default = 'default',\n  sm = 'sm',\n  lg = 'lg'\n}\n\nexport enum ButtonState {\n  read = 'read',\n  unread = 'unread',\n  attention = 'attention'\n}\n\nexport interface BadgeCountObject {\n  /**  Adds styling to the badge to indicate it has been read */\n  isRead?: boolean;\n  /** Adds count number right of button */\n  count?: number;\n  /** Additional classes added to the badge count */\n  className?: string;\n}\n\nexport interface ButtonProps extends Omit<React.HTMLProps<HTMLButtonElement>, 'ref' | 'size'>, OUIAProps {\n  /** Content rendered inside the button */\n  children?: React.ReactNode;\n  /** Additional classes added to the button */\n  className?: string;\n  /** Sets the base component to render. defaults to button */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n  /** Adds clicked styling to button. */\n  isClicked?: boolean;\n  /** Adds block styling to button */\n  isBlock?: boolean;\n  /** Adds disabled styling and disables the button using the disabled html attribute */\n  isDisabled?: boolean;\n  /** Adds disabled styling and communicates that the button is disabled using the aria-disabled html attribute */\n  isAriaDisabled?: boolean;\n  /** Adds progress styling to button */\n  isLoading?: boolean;\n  /** Text describing that current loading status or progress */\n  spinnerAriaValueText?: string;\n  /** Accessible label for the spinner to describe what is loading */\n  spinnerAriaLabel?: string;\n  /** Id of element which describes what is being loaded */\n  spinnerAriaLabelledBy?: string;\n  /** Events to prevent when the button is in an aria-disabled state */\n  inoperableEvents?: string[];\n  /** Adds inline styling to a link button */\n  isInline?: boolean;\n  /** Adds favorite styling to a button */\n  isFavorite?: boolean;\n  /** Flag indicating whether the button is favorited or not, only when isFavorite is true. */\n  isFavorited?: boolean;\n  /** Adds styling which affects the size of the button */\n  size?: 'default' | 'sm' | 'lg';\n  /** Sets button type */\n  type?: 'button' | 'submit' | 'reset';\n  /** Adds button variant styles */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'danger' | 'warning' | 'link' | 'plain' | 'control' | 'stateful';\n  /** Sets state of the stateful button variant. Default is \"unread\" */\n  state?: 'read' | 'unread' | 'attention';\n  /** Applies no padding on a plain button variant. Use when plain button is placed inline with text */\n  hasNoPadding?: boolean;\n  /** Sets position of the icon. Note: \"left\" and \"right\" are deprecated. Use \"start\" and \"end\" instead */\n  iconPosition?: 'start' | 'end' | 'left' | 'right';\n  /** Adds accessible text to the button. */\n  'aria-label'?: string;\n  /** Icon for the button. */\n  icon?: React.ReactNode | null;\n  /** Sets the button tabindex. */\n  tabIndex?: number;\n  /** Adds danger styling to secondary or link button variants */\n  isDanger?: boolean;\n  /** Flag indicating whether content the button controls is expanded or not. Required when isHamburger is true. */\n  isExpanded?: boolean;\n  /** Flag indicating the button is a settings button. This will override the icon property. */\n  isSettings?: boolean;\n  /** Flag indicating the button is a hamburger button. This will override the icon property. */\n  isHamburger?: boolean;\n  /** Adjusts and animates the hamburger icon to indicate what will happen upon clicking the button. */\n  hamburgerVariant?: 'expand' | 'collapse';\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Adds count number to button */\n  countOptions?: BadgeCountObject;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nconst ButtonBase: React.FunctionComponent<ButtonProps> = ({\n  children = null,\n  className = '',\n  component = 'button',\n  isClicked = false,\n  isBlock = false,\n  isDisabled = false,\n  isAriaDisabled = false,\n  isLoading = null,\n  isDanger = false,\n  isExpanded,\n  isSettings,\n  isHamburger,\n  hamburgerVariant,\n  spinnerAriaValueText,\n  spinnerAriaLabelledBy,\n  spinnerAriaLabel,\n  size = ButtonSize.default,\n  inoperableEvents = ['onClick', 'onKeyPress'],\n  isInline = false,\n  isFavorite = false,\n  isFavorited = false,\n  type = ButtonType.button,\n  variant = ButtonVariant.primary,\n  state = ButtonState.unread,\n  hasNoPadding = false,\n  iconPosition = 'start',\n  'aria-label': ariaLabel = null,\n  icon = null,\n  role,\n  ouiaId,\n  ouiaSafe = true,\n  tabIndex = null,\n  innerRef,\n  countOptions,\n  ...props\n}: ButtonProps) => {\n  if (isHamburger && ![true, false].includes(isExpanded)) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'Button: when the isHamburger property is passed in, you must also pass in a boolean value to the isExpanded property. It is expected that a hamburger button controls the expansion of other content.'\n    );\n  }\n  // TODO: Remove isSettings || isHamburger || isFavorite conditional in breaking change to throw this warning for any button that does not have children or aria name\n  if ((isSettings || isHamburger || isFavorite) && !ariaLabel && !children && !props['aria-labelledby']) {\n    // eslint-disable-next-line no-console\n    console.error(\n      'Button: you must provide either visible text content or an accessible name via the aria-label or aria-labelledby properties.'\n    );\n  }\n\n  const ouiaProps = useOUIAProps(Button.displayName, ouiaId, ouiaSafe, variant);\n  const Component = component as any;\n  const isButtonElement = Component === 'button';\n  const isInlineSpan = isInline && Component === 'span';\n  const isIconAlignedAtEnd = iconPosition === 'end' || iconPosition === 'right';\n  const shouldOverrideIcon = isSettings || isHamburger || isFavorite;\n\n  const preventedEvents = inoperableEvents.reduce(\n    (handlers, eventToPrevent) => ({\n      ...handlers,\n      [eventToPrevent]: (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n      }\n    }),\n    {}\n  );\n\n  const getDefaultTabIdx = () => {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    } else if (isInlineSpan) {\n      return 0;\n    }\n  };\n\n  const renderIcon = () => {\n    let iconContent;\n\n    if (isFavorite) {\n      iconContent = (\n        <>\n          <span className={css('pf-v6-c-button__icon-favorite')}>\n            <OutlinedStarIcon />\n          </span>\n          <span className={css('pf-v6-c-button__icon-favorited')}>\n            <StarIcon />\n          </span>\n        </>\n      );\n    }\n\n    if (isSettings) {\n      iconContent = <CogIcon />;\n    }\n    if (isHamburger) {\n      iconContent = hamburgerIcon;\n    }\n    if (icon && !shouldOverrideIcon) {\n      iconContent = icon;\n    }\n\n    return (\n      iconContent && (\n        <span className={css(styles.buttonIcon, children && styles.modifiers[isIconAlignedAtEnd ? 'end' : 'start'])}>\n          {iconContent}\n        </span>\n      )\n    );\n  };\n  const _icon = renderIcon();\n  const _children = children && <span className={css('pf-v6-c-button__text')}>{children}</span>;\n  // We only want to render the aria-disabled attribute when true, similar to the disabled attribute natively.\n  const shouldRenderAriaDisabled = isAriaDisabled || (!isButtonElement && isDisabled);\n\n  return (\n    <Component\n      aria-expanded={isExpanded} // Move this after the spread props in next breaking change\n      {...props}\n      {...(isAriaDisabled ? preventedEvents : null)}\n      {...(shouldRenderAriaDisabled && { 'aria-disabled': true })}\n      aria-label={ariaLabel}\n      className={css(\n        styles.button,\n        styles.modifiers[variant],\n        isSettings && styles.modifiers.settings,\n        isHamburger && styles.modifiers.hamburger,\n        isHamburger && hamburgerVariant && styles.modifiers[hamburgerVariant],\n        isBlock && styles.modifiers.block,\n        isDisabled && !isButtonElement && styles.modifiers.disabled,\n        isAriaDisabled && styles.modifiers.ariaDisabled,\n        isClicked && styles.modifiers.clicked,\n        isInline && variant === ButtonVariant.link && styles.modifiers.inline,\n        isFavorite && styles.modifiers.favorite,\n        isFavorite && isFavorited && styles.modifiers.favorited,\n        isDanger && (variant === ButtonVariant.secondary || variant === ButtonVariant.link) && styles.modifiers.danger,\n        isLoading !== null && variant !== ButtonVariant.plain && styles.modifiers.progress,\n        isLoading && styles.modifiers.inProgress,\n        hasNoPadding && variant === ButtonVariant.plain && styles.modifiers.noPadding,\n        variant === ButtonVariant.stateful && styles.modifiers[state],\n        size === ButtonSize.sm && styles.modifiers.small,\n        size === ButtonSize.lg && styles.modifiers.displayLg,\n        className\n      )}\n      disabled={isButtonElement ? isDisabled : null}\n      tabIndex={tabIndex !== null ? tabIndex : getDefaultTabIdx()}\n      type={isButtonElement || isInlineSpan ? type : null}\n      role={isInlineSpan ? 'button' : role}\n      ref={innerRef}\n      {...ouiaProps}\n    >\n      {isLoading && (\n        <span className={css(styles.buttonProgress)}>\n          <Spinner\n            size={spinnerSize.md}\n            isInline={isInline}\n            aria-valuetext={spinnerAriaValueText}\n            aria-label={spinnerAriaLabel}\n            aria-labelledby={spinnerAriaLabelledBy}\n          />\n        </span>\n      )}\n      {isIconAlignedAtEnd ? (\n        <>\n          {_children}\n          {_icon}\n        </>\n      ) : (\n        <>\n          {_icon}\n          {_children}\n        </>\n      )}\n      {countOptions && (\n        <span className={css(styles.buttonCount, countOptions.className)}>\n          <Badge isRead={countOptions.isRead} isDisabled={isDisabled}>\n            {countOptions.count}\n          </Badge>\n        </span>\n      )}\n    </Component>\n  );\n};\n\nexport const Button = forwardRef((props: ButtonProps, ref: React.Ref<any>) => <ButtonBase innerRef={ref} {...props} />);\n\nButton.displayName = 'Button';\n", "import './button.css';\nexport default {\n  \"badge\": \"pf-v6-c-badge\",\n  \"button\": \"pf-v6-c-button\",\n  \"buttonCount\": \"pf-v6-c-button__count\",\n  \"buttonHamburgerIcon\": \"pf-v6-c-button--hamburger-icon\",\n  \"buttonHamburgerIconArrow\": \"pf-v6-c-button--hamburger-icon--arrow\",\n  \"buttonHamburgerIconBottom\": \"pf-v6-c-button--hamburger-icon--bottom\",\n  \"buttonHamburgerIconMiddle\": \"pf-v6-c-button--hamburger-icon--middle\",\n  \"buttonHamburgerIconTop\": \"pf-v6-c-button--hamburger-icon--top\",\n  \"buttonIcon\": \"pf-v6-c-button__icon\",\n  \"buttonIconFavorite\": \"pf-v6-c-button__icon-favorite\",\n  \"buttonIconFavorited\": \"pf-v6-c-button__icon-favorited\",\n  \"buttonProgress\": \"pf-v6-c-button__progress\",\n  \"buttonText\": \"pf-v6-c-button__text\",\n  \"modifiers\": {\n    \"primary\": \"pf-m-primary\",\n    \"unread\": \"pf-m-unread\",\n    \"secondary\": \"pf-m-secondary\",\n    \"danger\": \"pf-m-danger\",\n    \"tertiary\": \"pf-m-tertiary\",\n    \"link\": \"pf-m-link\",\n    \"inline\": \"pf-m-inline\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"warning\": \"pf-m-warning\",\n    \"control\": \"pf-m-control\",\n    \"stateful\": \"pf-m-stateful\",\n    \"read\": \"pf-m-read\",\n    \"attention\": \"pf-m-attention\",\n    \"plain\": \"pf-m-plain\",\n    \"noPadding\": \"pf-m-no-padding\",\n    \"block\": \"pf-m-block\",\n    \"small\": \"pf-m-small\",\n    \"favorite\": \"pf-m-favorite\",\n    \"favorited\": \"pf-m-favorited\",\n    \"settings\": \"pf-m-settings\",\n    \"hamburger\": \"pf-m-hamburger\",\n    \"expand\": \"pf-m-expand\",\n    \"collapse\": \"pf-m-collapse\",\n    \"clicked\": \"pf-m-clicked\",\n    \"disabled\": \"pf-m-disabled\",\n    \"ariaDisabled\": \"pf-m-aria-disabled\",\n    \"progress\": \"pf-m-progress\",\n    \"inProgress\": \"pf-m-in-progress\",\n    \"notify\": \"pf-m-notify\",\n    \"start\": \"pf-m-start\",\n    \"end\": \"pf-m-end\"\n  },\n  \"spinner\": \"pf-v6-c-spinner\"\n};", "import styles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\n\n// Because this is such a specific icon that requires being wrapped in a pf-v[current version]-c-button element,\n// we don't want to export this to consumers nor include it in the react-icons package as a custom icon.\nexport const hamburgerIcon = (\n  <svg viewBox=\"0 0 10 10\" className={css(styles.buttonHamburgerIcon, 'pf-v6-svg')} width=\"1em\" height=\"1em\">\n    <path className={css(styles.buttonHamburgerIconTop)} d=\"M1,1 L9,1\"></path>\n    <path className={css(styles.buttonHamburgerIconMiddle)} d=\"M1,5 L9,5\"></path>\n    <path className={css(styles.buttonHamburgerIconArrow)} d=\"M1,5 L1,5 L1,5\"></path>\n    <path className={css(styles.buttonHamburgerIconBottom)} d=\"M9,9 L1,9\"></path>\n  </svg>\n);\n", "import { cloneElement, ReactElement, createRef, useEffect, useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { Popper } from '../../helpers/Popper/Popper';\n\nexport enum TooltipPosition {\n  auto = 'auto',\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n  topStart = 'top-start',\n  topEnd = 'top-end',\n  bottomStart = 'bottom-start',\n  bottomEnd = 'bottom-end',\n  leftStart = 'left-start',\n  leftEnd = 'left-end',\n  rightStart = 'right-start',\n  rightEnd = 'right-end'\n}\n\nexport interface TooltipProps extends Omit<React.HTMLProps<HTMLDivElement>, 'content'> {\n  /** The element to append the tooltip to, defaults to body */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /**\n   * aria-labelledby or aria-describedby for tooltip.\n   * The trigger will be cloned to add the aria attribute, and the corresponding id in the form of 'pf-tooltip-#' is added to the content container.\n   * If you don't want that or prefer to add the aria attribute yourself on the trigger, set aria to 'none'.\n   */\n  aria?: 'describedby' | 'labelledby' | 'none';\n  /**\n   * Determines whether the tooltip is an aria-live region. If the triggerRef prop is passed in the\n   * default behavior is 'polite' in order to ensure the tooltip contents is announced to\n   * assistive technologies. Otherwise the default behavior is 'off'.\n   */\n  'aria-live'?: 'off' | 'polite';\n  /**\n   * The trigger reference element to which the Tooltip is relatively placed to.\n   * If you cannot wrap the element with the Tooltip, you can use the triggerRef prop instead.\n   * Usage: <Tooltip><Button>Reference</Button></Tooltip>\n   */\n  children?: ReactElement<any>;\n  /**\n   * The trigger reference element to which the Tooltip is relatively placed to.\n   * If you can wrap the element with the Tooltip, you can use the children prop instead, or both props together.\n   * When passed along with the trigger prop, the div element that wraps the trigger will be removed.\n   * Usage: <Tooltip triggerRef={() => document.getElementById('reference-element')} />\n   */\n  triggerRef?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** Tooltip additional class */\n  className?: string;\n  /** Tooltip content */\n  content: React.ReactNode;\n  /** Distance of the tooltip to its target, defaults to 15 */\n  distance?: number;\n  /** If true, tries to keep the tooltip in view by flipping it if necessary */\n  enableFlip?: boolean;\n  /** Delay in ms before the tooltip appears */\n  entryDelay?: number;\n  /** Delay in ms before the tooltip disappears, Avoid passing in a value of \"0\", as users should\n   * be given ample time to move their mouse from the trigger to the tooltip content without the content\n   * being hidden.\n   */\n  exitDelay?: number;\n  /**\n   * The desired position to flip the tooltip to if the initial position is not possible.\n   * By setting this prop to 'flip' it attempts to flip the tooltip to the opposite side if there is no space.\n   * You can also pass an array of positions that determines the flip order. It should contain the initial position\n   * followed by alternative positions if that position is unavailable.\n   * Example: Initial position is 'top'. Button with tooltip is in the top right corner. 'flipBehavior' is set to\n   * ['top', 'right', 'left']. Since there is no space to the top, it checks if right is available. There's also no\n   * space to the right, so it finally shows the tooltip on the left.\n   */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n  /** Minimum width of the tooltip. If set to \"trigger\", the minimum width will be set to the reference element width. */\n  minWidth?: string | 'trigger';\n  /** Maximum width of the tooltip (default 18.75rem) */\n  maxWidth?: string;\n  /** Callback when tooltip's hide transition has finished executing */\n  onTooltipHidden?: () => void;\n  /**\n   * Tooltip position. Note: With 'enableFlip' set to true,\n   * it will change the position if there is not enough space for the starting position.\n   * The behavior of where it flips to can be controlled through the flipBehavior prop.\n   * The 'auto' position chooses the side with the most space.\n   * The 'auto' position requires the 'enableFlip' prop to be true.\n   */\n  position?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /**\n   * Tooltip trigger: click, mouseenter, focus, manual\n   * Set to manual to trigger tooltip programmatically (through the isVisible prop)\n   */\n  trigger?: string;\n  /** Flag to indicate that the text content is left aligned */\n  isContentLeftAligned?: boolean;\n  /** value for visibility when trigger is 'manual' */\n  isVisible?: boolean;\n  /** z-index of the tooltip */\n  zIndex?: number;\n  /** id of the tooltip */\n  id?: string;\n  /** CSS fade transition animation duration */\n  animationDuration?: number;\n}\n\n// id for associating trigger with the content aria-describedby or aria-labelledby\nlet pfTooltipIdCounter = 1;\n\nexport const Tooltip: React.FunctionComponent<TooltipProps> = ({\n  content: bodyContent,\n  position = 'top',\n  trigger = 'mouseenter focus',\n  isVisible = false,\n  isContentLeftAligned = false,\n  enableFlip = true,\n  className = '',\n  entryDelay = 300,\n  exitDelay = 300,\n  appendTo = () => document.body,\n  zIndex = 9999,\n  minWidth,\n  maxWidth = tooltipMaxWidth.value,\n  distance = 15,\n  aria = 'describedby',\n  // For every initial starting position, there are 3 escape positions\n  flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'],\n  id = `pf-tooltip-${pfTooltipIdCounter++}`,\n  children,\n  animationDuration = 300,\n  triggerRef,\n  'aria-live': ariaLive = triggerRef ? 'polite' : 'off',\n  onTooltipHidden = () => {},\n  ...rest\n}: TooltipProps) => {\n  // could make this a prop in the future (true | false | 'toggle')\n  const hideOnClick = true;\n  const triggerOnMouseenter = trigger.includes('mouseenter');\n  const triggerOnFocus = trigger.includes('focus');\n  const triggerOnClick = trigger.includes('click');\n  const triggerManually = trigger === 'manual';\n  const [visible, setVisible] = useState(false);\n  const popperRef = createRef<HTMLDivElement>();\n\n  const onDocumentKeyDown = (event: KeyboardEvent) => {\n    if (!triggerManually) {\n      if (event.key === KeyTypes.Escape && visible) {\n        hide();\n      }\n    }\n  };\n  const onTriggerEnter = (event: KeyboardEvent) => {\n    if (event.key === KeyTypes.Enter) {\n      if (!visible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  };\n  useEffect(() => {\n    if (isVisible) {\n      show();\n    } else {\n      hide();\n    }\n  }, [isVisible]);\n\n  const show = () => {\n    setVisible(true);\n  };\n  const hide = () => {\n    setVisible(false);\n  };\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n  const content = (\n    <div\n      aria-live={ariaLive}\n      className={css(styles.tooltip, className)}\n      role=\"tooltip\"\n      id={id}\n      style={{\n        maxWidth: hasCustomMaxWidth ? maxWidth : null\n      }}\n      ref={popperRef}\n      {...rest}\n    >\n      <TooltipArrow />\n      <TooltipContent isLeftAligned={isContentLeftAligned}>{bodyContent}</TooltipContent>\n    </div>\n  );\n\n  const onDocumentClick = (event: MouseEvent, triggerElement: HTMLElement) => {\n    // event.currentTarget = document\n    // event.target could be triggerElement or something else\n    if (hideOnClick === true) {\n      // hide on inside the toggle as well as on outside clicks\n      if (visible) {\n        hide();\n      } else if (event.target === triggerElement) {\n        show();\n      }\n    } else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n      // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n      if (visible) {\n        hide();\n      } else {\n        show();\n      }\n    } else if (hideOnClick === false && !visible && event.target === triggerElement) {\n      show();\n    }\n  };\n\n  const addAriaToTrigger = () => {\n    if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n      return cloneElement(children, { 'aria-describedby': id });\n    } else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n      return cloneElement(children, { 'aria-labelledby': id });\n    }\n    return children;\n  };\n\n  return (\n    <Popper\n      trigger={aria !== 'none' && visible ? addAriaToTrigger() : children}\n      triggerRef={triggerRef}\n      popper={content}\n      popperRef={popperRef}\n      minWidth={minWidth !== undefined ? minWidth : 'revert'}\n      appendTo={appendTo}\n      isVisible={visible}\n      positionModifiers={positionModifiers}\n      distance={distance}\n      placement={position}\n      onMouseEnter={triggerOnMouseenter && show}\n      onMouseLeave={triggerOnMouseenter && hide}\n      onPopperMouseEnter={triggerOnMouseenter && show}\n      onPopperMouseLeave={triggerOnMouseenter && hide}\n      onFocus={triggerOnFocus && show}\n      onBlur={triggerOnFocus && hide}\n      onDocumentClick={triggerOnClick && onDocumentClick}\n      onDocumentKeyDown={triggerManually ? null : onDocumentKeyDown}\n      onTriggerEnter={triggerManually ? null : onTriggerEnter}\n      enableFlip={enableFlip}\n      zIndex={zIndex}\n      flipBehavior={flipBehavior}\n      animationDuration={animationDuration}\n      entryDelay={entryDelay}\n      exitDelay={exitDelay}\n      onHidden={onTooltipHidden}\n    />\n  );\n};\nTooltip.displayName = 'Tooltip';\n", "import './tooltip.css';\nexport default {\n  \"modifiers\": {\n    \"top\": \"pf-m-top\",\n    \"topLeft\": \"pf-m-top-left\",\n    \"topRight\": \"pf-m-top-right\",\n    \"bottom\": \"pf-m-bottom\",\n    \"bottomLeft\": \"pf-m-bottom-left\",\n    \"bottomRight\": \"pf-m-bottom-right\",\n    \"left\": \"pf-m-left\",\n    \"leftTop\": \"pf-m-left-top\",\n    \"leftBottom\": \"pf-m-left-bottom\",\n    \"right\": \"pf-m-right\",\n    \"rightTop\": \"pf-m-right-top\",\n    \"rightBottom\": \"pf-m-right-bottom\",\n    \"textAlignLeft\": \"pf-m-text-align-left\"\n  },\n  \"tooltip\": \"pf-v6-c-tooltip\",\n  \"tooltipArrow\": \"pf-v6-c-tooltip__arrow\",\n  \"tooltipContent\": \"pf-v6-c-tooltip__content\"\n};", "import styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\n\nexport interface TooltipContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** PopoverContent additional class */\n  className?: string;\n  /** PopoverContent content */\n  children: React.ReactNode;\n  /** Flag to align text to the left */\n  isLeftAligned?: boolean;\n}\n\nexport const TooltipContent: React.FunctionComponent<TooltipContentProps> = ({\n  className,\n  children,\n  isLeftAligned,\n  ...props\n}: TooltipContentProps) => (\n  <div className={css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className)} {...props}>\n    {children}\n  </div>\n);\nTooltipContent.displayName = 'TooltipContent';\n", "import styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\n\nexport interface TooltipArrowProps extends React.HTMLProps<HTMLDivElement> {\n  /** className */\n  className?: string;\n}\n\nexport const TooltipArrow: React.FunctionComponent<TooltipArrowProps> = ({\n  className,\n  ...props\n}: TooltipArrowProps) => <div className={css(styles.tooltipArrow, className)} {...props} />;\nTooltipArrow.displayName = 'TooltipArrow';\n", "export const c_tooltip_MaxWidth = {\n  \"name\": \"--pf-v6-c-tooltip--MaxWidth\",\n  \"value\": \"18.75rem\",\n  \"var\": \"var(--pf-v6-c-tooltip--MaxWidth)\"\n};\nexport default c_tooltip_MaxWidth;", "import './action-list.css';\nexport default {\n  \"actionList\": \"pf-v6-c-action-list\",\n  \"actionListGroup\": \"pf-v6-c-action-list__group\",\n  \"modifiers\": {\n    \"icons\": \"pf-m-icons\"\n  }\n};", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ActionList/action-list';\n\nexport interface ActionListProps extends React.HTMLProps<HTMLDivElement> {\n  /** Children of the action list */\n  children?: React.ReactNode;\n  /** Flag indicating the action list contains multiple icons and item padding should be removed */\n  isIconList?: boolean;\n  /** Additional classes added to the action list */\n  className?: string;\n}\n\nexport const ActionList: React.FunctionComponent<ActionListProps> = ({\n  children,\n  isIconList,\n  className,\n  ...props\n}: ActionListProps) => (\n  <div className={css(styles.actionList, isIconList && styles.modifiers.icons, className)} {...props}>\n    {children}\n  </div>\n);\nActionList.displayName = 'ActionList';\n", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ActionList/action-list';\n\nexport interface ActionListGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Children of the action list group */\n  children?: React.ReactNode;\n  /** Additional classes added to the action list group */\n  className?: string;\n  /** Flag indicating the action list group contains multiple icons and item padding should be removed */\n  isIconGroup?: boolean;\n}\n\nexport const ActionListGroup: React.FunctionComponent<ActionListGroupProps> = ({\n  children,\n  className,\n  isIconGroup,\n  ...props\n}: ActionListGroupProps) => (\n  <div className={css(styles.actionListGroup, isIconGroup && styles.modifiers.icons, className)} {...props}>\n    {children}\n  </div>\n);\nActionListGroup.displayName = 'ActionListGroup';\n", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ActionList/action-list';\n\nexport interface ActionListItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** Children of the action list item */\n  children?: React.ReactNode;\n  /** Additional classes added to the action list item */\n  className?: string;\n}\n\nexport const ActionListItem: React.FunctionComponent<ActionListItemProps> = ({\n  children,\n  className,\n  ...props\n}: ActionListItemProps) => (\n  <div className={css(`${styles.actionList}__item`, className)} {...props}>\n    {children}\n  </div>\n);\nActionListItem.displayName = 'ActionListItem';\n", "import { createRef, Component, forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { trimLeft } from '../../helpers/util';\nimport { getDefaultOUIAId, getOUIAProps, OUIAProps } from '../../helpers';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nimport { FormControlIcon } from '../FormControl/FormControlIcon';\n\nexport enum TextInputTypes {\n  text = 'text',\n  date = 'date',\n  datetimeLocal = 'datetime-local',\n  email = 'email',\n  month = 'month',\n  number = 'number',\n  password = 'password',\n  search = 'search',\n  tel = 'tel',\n  time = 'time',\n  url = 'url'\n}\n\nexport enum TextInputReadOnlyVariant {\n  default = 'default',\n  plain = 'plain'\n}\n\nexport interface TextInputExpandedObj {\n  /** Flag to apply expanded styling. */\n  isExpanded: boolean;\n  /** Id of the element that the text input is controlling expansion of. */\n  ariaControls: string;\n}\n\nexport interface TextInputProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'onChange' | 'onFocus' | 'onBlur' | 'disabled' | 'ref'>,\n    OUIAProps {\n  /** Additional classes added to the text input. */\n  className?: string;\n  /** Flag to show if the text input is disabled. */\n  isDisabled?: boolean;\n  /** @deprecated Flag to apply expanded styling. expandedProps should now be used instead. */\n  isExpanded?: boolean;\n  /** Prop to apply expanded styling to the text input and link it to the element it is controlling. This should be used when the input controls a menu and that menu is expandable. */\n  expandedProps?: TextInputExpandedObj;\n  /** Sets the input as readonly and determines the readonly styling. */\n  readOnlyVariant?: 'plain' | 'default';\n  /** Flag indicating whether the input is required */\n  isRequired?: boolean;\n  /** Value to indicate if the text input is modified to show that validation state.\n   * If set to success, text input will be modified to indicate valid state.\n   * If set to error, text input will be modified to indicate error state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** A callback for when the text input value changes. */\n  onChange?: (event: React.FormEvent<HTMLInputElement>, value: string) => void;\n  /** Type that the text input accepts. */\n  type?:\n    | 'text'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'time'\n    | 'url';\n  /** Value of the text input. */\n  value?: string | number;\n  /** Placeholder of the text input when there is no value */\n  placeholder?: string;\n  /** Aria-label. The text input requires an associated id or aria-label. */\n  'aria-label'?: string;\n  /** @hide A reference object to attach to the text input box. */\n  innerRef?: React.RefObject<any>;\n  /** @deprecated Use isStartTruncated instead. Trim text at start */\n  isLeftTruncated?: boolean;\n  /** Trim text at start */\n  isStartTruncated?: boolean;\n  /** Callback function when text input is focused */\n  onFocus?: (event?: any) => void;\n  /** Callback function when text input is blurred (focus leaves) */\n  onBlur?: (event?: any) => void;\n  /** Custom icon to render. If the validated prop is also passed, this will render an icon in addition to a validated icon. */\n  customIcon?: React.ReactNode;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\ninterface TextInputState {\n  ouiaStateId: string;\n}\n\nexport class TextInputBase extends Component<TextInputProps, TextInputState> {\n  static displayName = 'TextInputBase';\n  static defaultProps: TextInputProps = {\n    'aria-label': null,\n    isRequired: false,\n    validated: 'default' as 'success' | 'warning' | 'error' | 'default',\n    isDisabled: false,\n    isExpanded: false,\n    type: TextInputTypes.text,\n    isLeftTruncated: false,\n    isStartTruncated: false,\n    onChange: (): any => undefined,\n    ouiaSafe: true\n  };\n  inputRef = createRef<HTMLInputElement>();\n  observer: any = () => {};\n\n  constructor(props: TextInputProps) {\n    super(props);\n    if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n      // eslint-disable-next-line no-console\n      console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(TextInputBase.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    if (this.props.onChange) {\n      this.props.onChange(event, event.currentTarget.value);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.isLeftTruncated || this.props.isStartTruncated) {\n      const inputRef = this.props.innerRef || this.inputRef;\n      this.observer = getResizeObserver(inputRef.current, this.handleResize, true);\n      this.handleResize();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.isLeftTruncated || this.props.isStartTruncated) {\n      this.observer();\n    }\n  }\n\n  handleResize = () => {\n    const inputRef = this.props.innerRef || this.inputRef;\n    if (inputRef && inputRef.current) {\n      trimLeft(inputRef.current, String(this.props.value));\n    }\n  };\n\n  restoreText = () => {\n    const inputRef = this.props.innerRef || this.inputRef;\n    // restore the value\n    (inputRef.current as HTMLInputElement).value = String(this.props.value);\n    // make sure we still see the rightmost value to preserve cursor click position\n    inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n  };\n\n  onFocus = (event?: any) => {\n    const { isLeftTruncated, isStartTruncated, onFocus } = this.props;\n    if (isLeftTruncated || isStartTruncated) {\n      this.restoreText();\n    }\n    onFocus && onFocus(event);\n  };\n\n  onBlur = (event?: any) => {\n    const { isLeftTruncated, isStartTruncated, onBlur } = this.props;\n    if (isLeftTruncated || isStartTruncated) {\n      this.handleResize();\n    }\n    onBlur && onBlur(event);\n  };\n\n  render() {\n    const {\n      innerRef,\n      className,\n      type,\n      value,\n      placeholder,\n      validated,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      onFocus,\n      onBlur,\n      isLeftTruncated,\n      isStartTruncated,\n      isExpanded,\n      expandedProps,\n      readOnly,\n      readOnlyVariant,\n      isRequired,\n      isDisabled,\n      customIcon,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n\n    const hasStatusIcon = ['success', 'error', 'warning'].includes(validated);\n    const ariaExpandedProps = expandedProps\n      ? { 'aria-expanded': expandedProps?.isExpanded, 'aria-controls': expandedProps?.ariaControls, role: 'combobox' }\n      : {};\n\n    return (\n      <span\n        className={css(\n          styles.formControl,\n          readOnlyVariant && styles.modifiers.readonly,\n          readOnlyVariant === 'plain' && styles.modifiers.plain,\n          isDisabled && styles.modifiers.disabled,\n          (isExpanded || expandedProps?.isExpanded) && styles.modifiers.expanded,\n          customIcon && styles.modifiers.icon,\n          hasStatusIcon && styles.modifiers[validated as 'success' | 'warning' | 'error'],\n          className\n        )}\n      >\n        <input\n          {...props}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChange={this.handleChange}\n          type={type}\n          value={this.sanitizeInputValue(value)}\n          aria-invalid={props['aria-invalid'] ? props['aria-invalid'] : validated === ValidatedOptions.error}\n          {...ariaExpandedProps}\n          required={isRequired}\n          disabled={isDisabled}\n          readOnly={!!readOnlyVariant || readOnly}\n          ref={innerRef || this.inputRef}\n          placeholder={placeholder}\n          {...getOUIAProps(TextInput.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        />\n        {(customIcon || hasStatusIcon) && (\n          <span className={css(styles.formControlUtilities)}>\n            {customIcon && <FormControlIcon customIcon={customIcon} />}\n            {hasStatusIcon && <FormControlIcon status={validated as 'success' | 'error' | 'warning'} />}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  private sanitizeInputValue = (value: string | number) =>\n    typeof value === 'string' ? value.replace(/\\n/g, ' ') : value;\n}\n\nexport const TextInput = forwardRef((props: TextInputProps, ref: React.Ref<HTMLInputElement>) => (\n  <TextInputBase {...props} innerRef={ref as React.MutableRefObject<any>} />\n));\nTextInput.displayName = 'TextInput';\n", "import './form-control.css';\nexport default {\n  \"formControl\": \"pf-v6-c-form-control\",\n  \"formControlIcon\": \"pf-v6-c-form-control__icon\",\n  \"formControlToggleIcon\": \"pf-v6-c-form-control__toggle-icon\",\n  \"formControlUtilities\": \"pf-v6-c-form-control__utilities\",\n  \"modifiers\": {\n    \"textarea\": \"pf-m-textarea\",\n    \"success\": \"pf-m-success\",\n    \"warning\": \"pf-m-warning\",\n    \"error\": \"pf-m-error\",\n    \"readonly\": \"pf-m-readonly\",\n    \"plain\": \"pf-m-plain\",\n    \"expanded\": \"pf-m-expanded\",\n    \"disabled\": \"pf-m-disabled\",\n    \"status\": \"pf-m-status\",\n    \"icon\": \"pf-m-icon\",\n    \"placeholder\": \"pf-m-placeholder\",\n    \"resizeVertical\": \"pf-m-resize-vertical\",\n    \"resizeHorizontal\": \"pf-m-resize-horizontal\",\n    \"resizeBoth\": \"pf-m-resize-both\"\n  }\n};", "import styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nexport const statusIcons = {\n  success: CheckCircleIcon,\n  error: ExclamationCircleIcon,\n  warning: ExclamationTriangleIcon\n};\n\nexport interface FormControlIconProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional class names added to the text input icon wrapper. */\n  className?: string;\n  /** A custom icon to render instead of a status icon. */\n  customIcon?: React.ReactNode;\n  /** The status icon to render. */\n  status?: 'success' | 'error' | 'warning';\n}\n\nexport const FormControlIcon = ({ status, customIcon, className, ...props }: FormControlIconProps) => {\n  const StatusIcon = status && statusIcons[status];\n\n  return (\n    <span className={css(styles.formControlIcon, status && styles.modifiers.status, className)} {...props}>\n      {customIcon || <StatusIcon />}\n    </span>\n  );\n};\n", "import { Component, createRef, forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport breadcrumbStyles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\nexport interface MenuProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'ref' | 'onSelect'>, OUIAProps {\n  /** Anything that can be rendered inside of the Menu */\n  children?: React.ReactNode;\n  /** Additional classes added to the Menu */\n  className?: string;\n  /** ID of the menu */\n  id?: string;\n  /** Callback for updating when item selection changes. You can also specify onClick on the MenuItem. */\n  onSelect?: (event?: React.MouseEvent, itemId?: string | number) => void;\n  /** Single itemId for single select menus, or array of itemIds for multi select. You can also specify isSelected on the MenuItem. */\n  selected?: any | any[];\n  /** Callback called when an MenuItems's action button is clicked. You can also specify it within a MenuItemAction. */\n  onActionClick?: (event?: any, itemId?: any, actionId?: any) => void;\n  /** Indicates if menu contains a flyout menu */\n  containsFlyout?: boolean;\n  /** Indicating that the menu should have nav flyout styling */\n  isNavFlyout?: boolean;\n  /** Indicates if menu contains a drilldown menu */\n  containsDrilldown?: boolean;\n  /** Indicates if a menu is drilled into */\n  isMenuDrilledIn?: boolean;\n  /** Indicates the path of drilled in menu itemIds */\n  drilldownItemPath?: string[];\n  /** Array of menus that are drilled in */\n  drilledInMenus?: string[];\n  /** Callback for drilling into a submenu */\n  onDrillIn?: (\n    event: React.KeyboardEvent | React.MouseEvent,\n    fromItemId: string,\n    toItemId: string,\n    itemId: string\n  ) => void;\n  /** Callback for drilling out of a submenu */\n  onDrillOut?: (event: React.KeyboardEvent | React.MouseEvent, toItemId: string, itemId: string) => void;\n  /** Callback for collecting menu heights */\n  onGetMenuHeight?: (menuId: string, height: number) => void;\n  /** ID of parent menu for drilldown menus */\n  parentMenu?: string;\n  /** ID of the currently active menu for the drilldown variant */\n  activeMenu?: string;\n  /** itemId of the currently active item. You can also specify isActive on the MenuItem. */\n  activeItemId?: string | number;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLDivElement>;\n  /** Internal flag indicating if the Menu is the root of a menu tree */\n  isRootMenu?: boolean;\n  /** Indicates if the menu should be without the outer box-shadow */\n  isPlain?: boolean;\n  /** Indicates if the menu should be srollable */\n  isScrollable?: boolean;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n  /** Determines the accessible role of the menu. For a non-checkbox menu that can have\n   * one or more items selected, pass in \"listbox\". */\n  role?: string;\n}\n\nexport interface MenuState {\n  ouiaStateId: string;\n  transitionMoveTarget: HTMLElement;\n  flyoutRef: React.Ref<HTMLLIElement> | null;\n  disableHover: boolean;\n  currentDrilldownMenuId: string;\n}\n\nclass MenuBase extends Component<MenuProps, MenuState> {\n  static displayName = 'Menu';\n  static contextType = MenuContext;\n  context!: React.ContextType<typeof MenuContext>;\n  private menuRef = createRef<HTMLDivElement>();\n  private activeMenu = null as Element;\n  static defaultProps: MenuProps = {\n    ouiaSafe: true,\n    isRootMenu: true,\n    isPlain: false,\n    isScrollable: false,\n    role: 'menu'\n  };\n\n  constructor(props: MenuProps) {\n    super(props);\n    if (props.innerRef) {\n      this.menuRef = props.innerRef as React.RefObject<HTMLDivElement | null>;\n    }\n  }\n\n  state: MenuState = {\n    ouiaStateId: getDefaultOUIAId(Menu.displayName),\n    transitionMoveTarget: null,\n    flyoutRef: null,\n    disableHover: false,\n    currentDrilldownMenuId: this.props.id\n  };\n\n  allowTabFirstItem() {\n    // Allow tabbing to first menu item\n    const current = this.menuRef.current;\n    if (current) {\n      const first = current.querySelector('ul button:not(:disabled), ul a:not(:disabled)') as\n        | HTMLButtonElement\n        | HTMLAnchorElement;\n      if (first) {\n        first.tabIndex = 0;\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.context) {\n      this.setState({ disableHover: this.context.disableHover });\n    }\n    if (canUseDOM && this.props.containsDrilldown && this.props.isRootMenu) {\n      window.addEventListener('transitionend', this.handleDrilldownTransition);\n    }\n\n    this.allowTabFirstItem();\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM && this.props.containsDrilldown && this.props.isRootMenu) {\n      window.removeEventListener('transitionend', this.handleDrilldownTransition);\n    }\n  }\n\n  componentDidUpdate(prevProps: MenuProps) {\n    if (prevProps.children !== this.props.children) {\n      this.allowTabFirstItem();\n    }\n  }\n\n  handleDrilldownTransition = (event: TransitionEvent) => {\n    const current = this.menuRef.current;\n    if (\n      !current ||\n      (current !== (event.target as HTMLElement).closest(`.${styles.menu}`) &&\n        !Array.from(current.getElementsByClassName(styles.menu)).includes(\n          (event.target as HTMLElement).closest(`.${styles.menu}`)\n        ))\n    ) {\n      return;\n    }\n\n    if (this.state.transitionMoveTarget) {\n      this.state.transitionMoveTarget.focus();\n      this.setState({ transitionMoveTarget: null });\n    } else {\n      const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n      const nextMenuLists = nextMenu.getElementsByTagName('UL');\n      if (nextMenuLists.length === 0) {\n        return;\n      }\n      const nextMenuChildren = Array.from(nextMenuLists[0].children);\n      if (!this.state.currentDrilldownMenuId || nextMenu.id !== this.state.currentDrilldownMenuId) {\n        this.setState({ currentDrilldownMenuId: nextMenu.id });\n      } else {\n        // if the drilldown transition ends on the same menu, do not focus the first item\n        return;\n      }\n      const nextTarget = nextMenuChildren.filter(\n        (el) => !(el.classList.contains('pf-m-disabled') || el.classList.contains(styles.divider))\n      )[0].firstChild;\n      (nextTarget as HTMLElement).focus();\n      (nextTarget as HTMLElement).tabIndex = 0;\n    }\n  };\n\n  handleExtraKeys = (event: KeyboardEvent) => {\n    const isDrilldown = this.props.containsDrilldown;\n    const activeElement = document.activeElement;\n\n    if (\n      (event.target as HTMLElement).closest(`.${styles.menu}`) !== this.activeMenu &&\n      !(event.target as HTMLElement).classList.contains(breadcrumbStyles.breadcrumbLink)\n    ) {\n      this.activeMenu = (event.target as HTMLElement).closest(`.${styles.menu}`);\n      this.setState({ disableHover: true });\n    }\n\n    if ((event.target as HTMLElement).tagName === 'INPUT') {\n      return;\n    }\n\n    const parentMenu = this.activeMenu;\n    const key = event.key;\n    const isFromBreadcrumb = activeElement.classList.contains(breadcrumbStyles.breadcrumbLink);\n\n    if (key === ' ' || key === 'Enter') {\n      event.preventDefault();\n      if (isDrilldown && !isFromBreadcrumb) {\n        const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n        if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n          (activeElement as HTMLElement).tabIndex = -1;\n          (parentMenu.parentElement.firstChild as HTMLElement).tabIndex = 0;\n          this.setState({ transitionMoveTarget: parentMenu.parentElement.firstChild as HTMLElement });\n        } else {\n          if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains(styles.menu)) {\n            const childItems = Array.from(\n              activeElement.nextElementSibling.getElementsByTagName('UL')[0].children\n            ).filter((el) => !(el.classList.contains('pf-m-disabled') || el.classList.contains(styles.divider)));\n\n            (activeElement as HTMLElement).tabIndex = -1;\n            (childItems[0].firstChild as HTMLElement).tabIndex = 0;\n            this.setState({ transitionMoveTarget: childItems[0].firstChild as HTMLElement });\n          }\n        }\n      }\n      (document.activeElement as HTMLElement).click();\n    }\n  };\n\n  createNavigableElements = () => {\n    const isDrilldown = this.props.containsDrilldown;\n\n    if (isDrilldown) {\n      return this.activeMenu\n        ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(\n            (el) => !(el.classList.contains('pf-m-disabled') || el.classList.contains(styles.divider))\n          )\n        : [];\n    } else {\n      return this.menuRef.current\n        ? Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(\n            (el) => !(el.classList.contains('pf-m-disabled') || el.classList.contains(styles.divider))\n          )\n        : [];\n    }\n  };\n\n  render() {\n    const {\n      id,\n      children,\n      className,\n      onSelect,\n      selected = null,\n      onActionClick,\n      ouiaId,\n      ouiaSafe,\n      containsFlyout,\n      containsDrilldown,\n      isMenuDrilledIn,\n      isPlain,\n      isScrollable,\n      drilldownItemPath,\n      drilledInMenus,\n      onDrillIn,\n      onDrillOut,\n      onGetMenuHeight,\n      parentMenu = null,\n      activeItemId = null,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      innerRef,\n      isRootMenu,\n      activeMenu,\n      role,\n      isNavFlyout,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...props\n    } = this.props;\n    const _isMenuDrilledIn = isMenuDrilledIn || (drilledInMenus && drilledInMenus.includes(id)) || false;\n    return (\n      <MenuContext.Provider\n        value={{\n          menuId: id,\n          parentMenu: parentMenu || id,\n          onSelect,\n          onActionClick,\n          activeItemId,\n          selected,\n          drilledInMenus,\n          drilldownItemPath,\n          onDrillIn,\n          onDrillOut,\n          onGetMenuHeight,\n          flyoutRef: this.state.flyoutRef,\n          setFlyoutRef: (flyoutRef) => this.setState({ flyoutRef }),\n          disableHover: this.state.disableHover,\n          role\n        }}\n      >\n        {isRootMenu && (\n          <KeyboardHandler\n            containerRef={(this.menuRef as React.RefObject<HTMLDivElement | null>) || null}\n            additionalKeyHandler={this.handleExtraKeys}\n            createNavigableElements={this.createNavigableElements}\n            isActiveElement={(element: Element) =>\n              document.activeElement.closest('li') === element || // if element is a basic MenuItem\n              document.activeElement.parentElement === element ||\n              document.activeElement.closest(`.${styles.menuSearch}`) === element || // if element is a MenuSearch\n              (document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element)\n            }\n            getFocusableElement={(navigableElement: Element) =>\n              (navigableElement?.tagName === 'DIV' && navigableElement.querySelector('input')) || // for MenuSearchInput\n              ((navigableElement.firstChild as Element)?.tagName === 'LABEL' &&\n                navigableElement.querySelector('input')) || // for MenuItem checkboxes\n              ((navigableElement.firstChild as Element)?.tagName === 'DIV' &&\n                navigableElement.querySelector('a, button, input')) || // For aria-disabled element that is rendered inside a div with \"display: contents\" styling\n              (navigableElement.firstChild as Element)\n            }\n            noHorizontalArrowHandling={\n              document.activeElement &&\n              (document.activeElement.classList.contains(breadcrumbStyles.breadcrumbLink) ||\n                document.activeElement.tagName === 'INPUT')\n            }\n            noEnterHandling\n            noSpaceHandling\n          />\n        )}\n        <div\n          id={id}\n          className={css(\n            styles.menu,\n            isPlain && styles.modifiers.plain,\n            isScrollable && styles.modifiers.scrollable,\n            containsFlyout && styles.modifiers.flyout,\n            isNavFlyout && 'pf-m-nav',\n            containsDrilldown && styles.modifiers.drilldown,\n            _isMenuDrilledIn && styles.modifiers.drilledIn,\n            className\n          )}\n          ref={this.menuRef}\n          {...getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          {...props}\n        >\n          {children}\n        </div>\n      </MenuContext.Provider>\n    );\n  }\n}\n\nexport const Menu = forwardRef((props: MenuProps, ref: React.Ref<HTMLDivElement>) => (\n  <MenuBase {...props} innerRef={ref} />\n));\nMenu.displayName = 'Menu';\n", "import './menu.css';\nexport default {\n  \"button\": \"pf-v6-c-button\",\n  \"check\": \"pf-v6-c-check\",\n  \"dirRtl\": \"pf-v6-m-dir-rtl\",\n  \"divider\": \"pf-v6-c-divider\",\n  \"menu\": \"pf-v6-c-menu\",\n  \"menuBreadcrumb\": \"pf-v6-c-menu__breadcrumb\",\n  \"menuContent\": \"pf-v6-c-menu__content\",\n  \"menuFooter\": \"pf-v6-c-menu__footer\",\n  \"menuGroup\": \"pf-v6-c-menu__group\",\n  \"menuGroupTitle\": \"pf-v6-c-menu__group-title\",\n  \"menuHeader\": \"pf-v6-c-menu__header\",\n  \"menuItem\": \"pf-v6-c-menu__item\",\n  \"menuItemAction\": \"pf-v6-c-menu__item-action\",\n  \"menuItemActionIcon\": \"pf-v6-c-menu__item-action-icon\",\n  \"menuItemCheck\": \"pf-v6-c-menu__item-check\",\n  \"menuItemDescription\": \"pf-v6-c-menu__item-description\",\n  \"menuItemExternalIcon\": \"pf-v6-c-menu__item-external-icon\",\n  \"menuItemIcon\": \"pf-v6-c-menu__item-icon\",\n  \"menuItemMain\": \"pf-v6-c-menu__item-main\",\n  \"menuItemSelectIcon\": \"pf-v6-c-menu__item-select-icon\",\n  \"menuItemText\": \"pf-v6-c-menu__item-text\",\n  \"menuItemToggleIcon\": \"pf-v6-c-menu__item-toggle-icon\",\n  \"menuList\": \"pf-v6-c-menu__list\",\n  \"menuListItem\": \"pf-v6-c-menu__list-item\",\n  \"menuSearch\": \"pf-v6-c-menu__search\",\n  \"menuToggle\": \"pf-v6-c-menu-toggle\",\n  \"modifiers\": {\n    \"hidden\": \"pf-m-hidden\",\n    \"hiddenOnSm\": \"pf-m-hidden-on-sm\",\n    \"visibleOnSm\": \"pf-m-visible-on-sm\",\n    \"hiddenOnMd\": \"pf-m-hidden-on-md\",\n    \"visibleOnMd\": \"pf-m-visible-on-md\",\n    \"hiddenOnLg\": \"pf-m-hidden-on-lg\",\n    \"visibleOnLg\": \"pf-m-visible-on-lg\",\n    \"hiddenOnXl\": \"pf-m-hidden-on-xl\",\n    \"visibleOnXl\": \"pf-m-visible-on-xl\",\n    \"hiddenOn_2xl\": \"pf-m-hidden-on-2xl\",\n    \"visibleOn_2xl\": \"pf-m-visible-on-2xl\",\n    \"disabled\": \"pf-m-disabled\",\n    \"ariaDisabled\": \"pf-m-aria-disabled\",\n    \"flyout\": \"pf-m-flyout\",\n    \"top\": \"pf-m-top\",\n    \"left\": \"pf-m-left\",\n    \"drilldown\": \"pf-m-drilldown\",\n    \"drilledIn\": \"pf-m-drilled-in\",\n    \"currentPath\": \"pf-m-current-path\",\n    \"static\": \"pf-m-static\",\n    \"plain\": \"pf-m-plain\",\n    \"scrollable\": \"pf-m-scrollable\",\n    \"load\": \"pf-m-load\",\n    \"loading\": \"pf-m-loading\",\n    \"danger\": \"pf-m-danger\",\n    \"focus\": \"pf-m-focus\",\n    \"selected\": \"pf-m-selected\",\n    \"favorited\": \"pf-m-favorited\"\n  }\n};", "import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-v6-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-v6-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-v6-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-v6-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-v6-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-v6-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-v6-c-breadcrumb__list\",\n  \"dirRtl\": \"pf-v6-m-dir-rtl\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\"\n  }\n};", "import { createContext } from 'react';\nexport const MenuContext = createContext<{\n  menuId?: string;\n  parentMenu?: string;\n  onSelect?: (event?: any, itemId?: any) => void;\n  onActionClick?: (event?: any, itemId?: any, actionId?: any) => void;\n  activeItemId?: any;\n  selected?: any | any[];\n  drilldownItemPath?: string[];\n  drilledInMenus?: string[];\n  onDrillIn?: (\n    event: React.KeyboardEvent | React.MouseEvent,\n    fromItemId: string,\n    toItemId: string,\n    itemId: string\n  ) => void;\n  onDrillOut?: (event: React.KeyboardEvent | React.MouseEvent, toItemId: string, itemId: string) => void;\n  onGetMenuHeight?: (menuId: string, height: number) => void;\n  flyoutRef?: React.Ref<HTMLLIElement>;\n  setFlyoutRef?: (ref: React.Ref<HTMLLIElement>) => void;\n  disableHover?: boolean;\n  role?: string;\n}>({\n  menuId: null,\n  parentMenu: null,\n  onActionClick: () => null,\n  onSelect: () => null,\n  activeItemId: null,\n  selected: null,\n  drilledInMenus: [],\n  drilldownItemPath: [],\n  onDrillIn: null,\n  onDrillOut: null,\n  onGetMenuHeight: () => null,\n  flyoutRef: null,\n  setFlyoutRef: () => null,\n  disableHover: false,\n  role: 'menu'\n});\n\nexport const MenuItemContext = createContext<{\n  itemId?: any;\n  isDisabled?: boolean;\n}>({\n  itemId: null,\n  isDisabled: false\n});\n", "import { createRef, forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nimport cssHeight from '@patternfly/react-tokens/dist/esm/c_menu__content_Height';\nimport cssMaxHeight from '@patternfly/react-tokens/dist/esm/c_menu__content_MaxHeight';\n\nexport interface MenuContentProps extends React.HTMLProps<HTMLElement> {\n  /** Items within group */\n  children?: React.ReactNode;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Height of the menu content */\n  menuHeight?: string;\n  /** Maximum height of menu content */\n  maxMenuHeight?: string;\n  /** Callback to return the height of the menu content */\n  getHeight?: (height: string) => void;\n}\n\nexport const MenuContent = forwardRef((props: MenuContentProps, ref: React.Ref<HTMLDivElement>) => {\n  const { getHeight, children, menuHeight, maxMenuHeight, ...rest } = props;\n  const menuContentRef = createRef<HTMLDivElement>();\n  const refCallback = (el: HTMLElement, menuId: string, onGetMenuHeight: (menuId: string, height: number) => void) => {\n    if (el) {\n      let clientHeight = el.clientHeight;\n\n      // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n      let rootMenuList = null;\n      let parentEl = el.closest(`.${styles.menuList}`);\n      while (parentEl !== null && parentEl.nodeType === 1) {\n        if (parentEl.classList.contains(styles.menuList)) {\n          rootMenuList = parentEl;\n        }\n        parentEl = parentEl.parentElement;\n      }\n\n      if (rootMenuList) {\n        const rootMenuListStyles = getComputedStyle(rootMenuList);\n        const rootMenuListPaddingOffset =\n          parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) +\n          parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) +\n          parseFloat(\n            getComputedStyle(rootMenuList.parentElement).getPropertyValue('border-bottom-width').replace(/px/g, '')\n          );\n        clientHeight = clientHeight + rootMenuListPaddingOffset;\n      }\n\n      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n      getHeight && getHeight(clientHeight.toString());\n    }\n    return ref || menuContentRef;\n  };\n  return (\n    <MenuContext.Consumer>\n      {({ menuId, onGetMenuHeight }) => (\n        <div\n          {...rest}\n          className={css(styles.menuContent, props.className)}\n          ref={(el) => {\n            refCallback(el, menuId, onGetMenuHeight);\n          }}\n          style={\n            {\n              ...(menuHeight && { [cssHeight.name]: menuHeight }),\n              ...(maxMenuHeight && { [cssMaxHeight.name]: maxMenuHeight })\n            } as React.CSSProperties\n          }\n        >\n          {children}\n        </div>\n      )}\n    </MenuContext.Consumer>\n  );\n});\nMenuContent.displayName = 'MenuContent';\n", "export const c_menu__content_Height = {\n  \"name\": \"--pf-v6-c-menu__content--Height\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-v6-c-menu__content--Height)\"\n};\nexport default c_menu__content_Height;", "export const c_menu__content_MaxHeight = {\n  \"name\": \"--pf-v6-c-menu__content--MaxHeight\",\n  \"value\": \"18.75rem\",\n  \"var\": \"var(--pf-v6-c-menu__content--MaxHeight)\"\n};\nexport default c_menu__content_MaxHeight;", "import styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\n\nexport interface MenuFooterProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the footer */\n  children?: React.ReactNode;\n  /** Additional classes added to the footer */\n  className?: string;\n}\n\nexport const MenuFooter: React.FunctionComponent<MenuFooterProps> = ({\n  children,\n  className = '',\n  ...props\n}: MenuFooterProps) => (\n  <div {...props} className={css(styles.menuFooter, className)}>\n    {children}\n  </div>\n);\n\nMenuFooter.displayName = 'MenuFooter';\n", "import { forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\n\nexport interface MenuSearchProps extends React.HTMLProps<HTMLElement> {\n  /** Items within search */\n  children?: React.ReactNode;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nexport const MenuSearch = forwardRef((props: MenuSearchProps, ref: React.Ref<HTMLDivElement>) => (\n  <div {...props} className={css(styles.menuSearch, props.className)} ref={ref} />\n));\nMenuSearch.displayName = 'MenuSearch';\n", "import { forwardRef } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\n\nexport interface MenuSearchInputProps extends React.HTMLProps<HTMLElement> {\n  /** Items within input */\n  children?: React.ReactNode;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nexport const MenuSearchInput = forwardRef((props: MenuSearchInputProps, ref: React.Ref<HTMLDivElement>) => (\n  // Update to use the styles object when core adds the class\n  <div {...props} className={css(`${styles.menuSearch}-input`, props.className)} ref={ref} />\n));\nMenuSearchInput.displayName = 'MenuSearchInput';\n", "import { forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\n\nexport interface MenuGroupProps extends Omit<React.HTMLProps<HTMLElement>, 'label'> {\n  /** Items within group */\n  children?: React.ReactNode;\n  /** Additional classes added to the MenuGroup */\n  className?: string;\n  /** Group label */\n  label?: React.ReactNode;\n  /** ID for title label */\n  titleId?: string;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Group label heading level. Default is h1. */\n  labelHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nconst MenuGroupBase: React.FunctionComponent<MenuGroupProps> = ({\n  children,\n  className = '',\n  label = '',\n  titleId,\n  innerRef,\n  labelHeadingLevel: HeadingLevel = 'h1',\n  ...props\n}: MenuGroupProps) => {\n  const Wrapper = typeof label === 'function' ? label : HeadingLevel;\n  return (\n    <section {...props} className={css(styles.menuGroup, className)} ref={innerRef}>\n      <>\n        {['function', 'string'].includes(typeof label) ? (\n          <Wrapper className={css(styles.menuGroupTitle)} id={titleId}>\n            {label}\n          </Wrapper>\n        ) : (\n          label\n        )}\n        {children}\n      </>\n    </section>\n  );\n};\n\nexport const MenuGroup = forwardRef((props: MenuGroupProps, ref: React.Ref<HTMLElement>) => (\n  <MenuGroupBase {...props} innerRef={ref} />\n));\nMenuGroup.displayName = 'MenuGroup';\n", "import { Component } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getDefaultOUIAId, getOUIAProps, OUIAProps } from '../../helpers';\nimport { ASTERISK } from '../../helpers/htmlConstants';\n\nexport interface CheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'>,\n    OUIAProps {\n  /** Additional classes added to the checkbox wrapper. This wrapper will be div element by default. It will be a label element if\n   * isLabelWrapped is true, or it can be overridden by any element specified in the component prop.\n   */\n  className?: string;\n  /** Additional classes added to the checkbox input. */\n  inputClassName?: string;\n  /** Flag to indicate whether the checkbox wrapper element is a <label> element for the checkbox input. Will not apply if a component prop (with a value other than a \"label\") is specified. */\n  isLabelWrapped?: boolean;\n  /** Flag to show if the checkbox selection is valid or invalid. */\n  isValid?: boolean;\n  /** Flag to show if the checkbox is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the checkbox is required. */\n  isRequired?: boolean;\n  /** Flag to show if the checkbox is checked. If null, the checkbox will be indeterminate (partially checked). */\n  isChecked?: boolean | null;\n  checked?: boolean;\n  /** A callback for when the checkbox selection changes. */\n  onChange?: (event: React.FormEvent<HTMLInputElement>, checked: boolean) => void;\n  /** Label text of the checkbox. */\n  label?: React.ReactNode;\n  /** Sets the position of the label. Defaults to 'end' (after the checkbox input). */\n  labelPosition?: 'start' | 'end';\n  /** Id of the checkbox. */\n  id: string;\n  /** Aria-label of the checkbox. */\n  'aria-label'?: string;\n  /** Description text of the checkbox. */\n  description?: React.ReactNode;\n  /** Body text of the checkbox */\n  body?: React.ReactNode;\n  /** Sets the checkbox wrapper component to render. Defaults to \"div\". If set to \"label\", behaves the same as if isLabelWrapped prop was specified. */\n  component?: React.ElementType;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => {};\n\ninterface CheckboxState {\n  ouiaStateId: string;\n}\n\nclass Checkbox extends Component<CheckboxProps, CheckboxState> {\n  static displayName = 'Checkbox';\n  static defaultProps: PickOptional<CheckboxProps> = {\n    className: '',\n    isLabelWrapped: false,\n    isValid: true,\n    isDisabled: false,\n    isRequired: false,\n    isChecked: false,\n    onChange: defaultOnChange,\n    ouiaSafe: true\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n    };\n  }\n\n  private handleChange = (event: React.FormEvent<HTMLInputElement>): void => {\n    this.props.onChange(event, event.currentTarget.checked);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      className,\n      inputClassName,\n      onChange,\n      isLabelWrapped,\n      labelPosition = 'end',\n      isValid,\n      isDisabled,\n      isRequired,\n      isChecked,\n      label,\n      checked,\n      defaultChecked,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe,\n      component,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Checkbox:', 'id is required to make input accessible');\n    }\n    const checkedProps: { checked?: boolean; defaultChecked?: boolean } = {};\n    if ([true, false].includes(checked) || isChecked === true) {\n      checkedProps.checked = checked || isChecked;\n    }\n    if (onChange !== defaultOnChange) {\n      checkedProps.checked = isChecked;\n    }\n    if ([false, true].includes(defaultChecked)) {\n      checkedProps.defaultChecked = defaultChecked;\n    }\n\n    const inputRendered = (\n      <input\n        {...props}\n        className={css(styles.checkInput, inputClassName)}\n        type=\"checkbox\"\n        onChange={this.handleChange}\n        aria-invalid={!isValid}\n        aria-label={ariaLabel}\n        disabled={isDisabled}\n        required={isRequired}\n        ref={(elem) => {\n          elem && (elem.indeterminate = isChecked === null);\n        }}\n        {...checkedProps}\n        {...getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      />\n    );\n\n    const wrapWithLabel = (isLabelWrapped && !component) || component === 'label';\n\n    const Label = wrapWithLabel ? 'span' : 'label';\n    const labelRendered = label ? (\n      <Label\n        className={css(styles.checkLabel, isDisabled && styles.modifiers.disabled)}\n        htmlFor={!wrapWithLabel ? props.id : undefined}\n      >\n        {label}\n        {isRequired && (\n          <span className={css(styles.checkLabelRequired)} aria-hidden=\"true\">\n            {ASTERISK}\n          </span>\n        )}\n      </Label>\n    ) : null;\n\n    const Component = component ?? (wrapWithLabel ? 'label' : 'div');\n\n    checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n    return (\n      <Component\n        className={css(styles.check, !label && styles.modifiers.standalone, className)}\n        htmlFor={wrapWithLabel ? props.id : undefined}\n      >\n        {labelPosition === 'start' ? (\n          <>\n            {labelRendered}\n            {inputRendered}\n          </>\n        ) : (\n          <>\n            {inputRendered}\n            {labelRendered}\n          </>\n        )}\n        {description && <span className={css(styles.checkDescription)}>{description}</span>}\n        {body && <span className={css(styles.checkBody)}>{body}</span>}\n      </Component>\n    );\n  }\n}\n\nexport { Checkbox };\n", "import './check.css';\nexport default {\n  \"check\": \"pf-v6-c-check\",\n  \"checkBody\": \"pf-v6-c-check__body\",\n  \"checkDescription\": \"pf-v6-c-check__description\",\n  \"checkInput\": \"pf-v6-c-check__input\",\n  \"checkLabel\": \"pf-v6-c-check__label\",\n  \"checkLabelRequired\": \"pf-v6-c-check__label-required\",\n  \"modifiers\": {\n    \"standalone\": \"pf-m-standalone\",\n    \"disabled\": \"pf-m-disabled\"\n  }\n};", "import { forwardRef } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { MenuContext, MenuItemContext } from './MenuContext';\nimport { Button } from '../Button';\nexport interface MenuItemActionProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the action button */\n  className?: string;\n  /** The action icon to use */\n  icon?: 'favorites' | React.ReactNode;\n  /** Callback on action click, can also specify onActionClick on the Menu instead */\n  onClick?: (event?: any) => void;\n  /** Accessibility label */\n  'aria-label': string;\n  /** Flag indicating if the item is favorited */\n  isFavorited?: boolean;\n  /** Disables action, can also be specified on the MenuItem instead */\n  isDisabled?: boolean;\n  /** Identifies the action item in the onActionClick on the Menu */\n  actionId?: any;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst MenuItemActionBase: React.FunctionComponent<MenuItemActionProps> = ({\n  className,\n  icon,\n  onClick,\n  'aria-label': ariaLabel,\n  isFavorited = null,\n  isDisabled,\n  actionId,\n  innerRef,\n  ...props\n}: MenuItemActionProps) => (\n  <MenuContext.Consumer>\n    {({ onActionClick }) => (\n      <MenuItemContext.Consumer>\n        {({ itemId, isDisabled: isDisabledContext }) => {\n          const onClickButton = (event: any) => {\n            // event specified on the MenuItemAction\n            onClick && onClick(event);\n            // event specified on the Menu\n            onActionClick && onActionClick(event, itemId, actionId);\n          };\n          return (\n            <div\n              className={css(\n                styles.menuItemAction,\n                isFavorited !== null && 'pf-m-favorite',\n                isFavorited && styles.modifiers.favorited,\n                className\n              )}\n              {...props}\n            >\n              <Button\n                aria-label={ariaLabel}\n                onClick={onClickButton}\n                ref={innerRef}\n                role=\"menuitem\"\n                variant=\"plain\"\n                tabIndex={-1}\n                isDisabled={isDisabled || isDisabledContext}\n                icon={icon === 'favorites' || isFavorited !== null ? <StarIcon /> : icon}\n              />\n            </div>\n          );\n        }}\n      </MenuItemContext.Consumer>\n    )}\n  </MenuContext.Consumer>\n);\n\nexport const MenuItemAction = forwardRef((props: MenuItemActionProps, ref: React.Ref<HTMLButtonElement>) => (\n  <MenuItemActionBase {...props} innerRef={ref} />\n));\nMenuItemAction.displayName = 'MenuItemAction';\n", "import { createContext, forwardRef, useContext, useEffect, useRef, useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport topOffset from '@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_top_offset';\nimport rightOffset from '@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_m_left_right_offset';\nimport leftOffset from '@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_left_offset';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { Checkbox } from '../Checkbox';\nimport { MenuContext, MenuItemContext } from './MenuContext';\nimport { MenuItemAction } from './MenuItemAction';\nimport { Tooltip, TooltipProps } from '../Tooltip';\nimport { canUseDOM } from '../../helpers/util';\nimport { useIsomorphicLayoutEffect } from '../../helpers/useIsomorphicLayout';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport interface MenuItemProps extends Omit<React.HTMLProps<HTMLLIElement>, 'onClick'> {\n  /** Content rendered inside the menu list item. */\n  children?: React.ReactNode;\n  /** Additional classes added to the menu list item */\n  className?: string;\n  /** Identifies the component in the Menu onSelect or onActionClick callback */\n  itemId?: any;\n  /** Target navigation link. Should not be used if the flyout prop is defined. */\n  to?: string;\n  /** Navigation link target. Only set when the to property is present. If isExternalLink is also passed in, this property will be set to \"_blank\". */\n  target?: string;\n  /** Navigation link relationship. Only set when the to property is present. */\n  rel?: string;\n  /** Navigation link download. Only set when the to property is present. */\n  download?: string;\n  /** Flag indicating the item has a checkbox */\n  hasCheckbox?: boolean;\n  /** Flag indicating whether the item is active */\n  isActive?: boolean;\n  /** Flag indicating if the item is favorited */\n  isFavorited?: boolean;\n  /** Flag indicating if the item causes a load */\n  isLoadButton?: boolean;\n  /** Flag indicating a loading state */\n  isLoading?: boolean;\n  /** Callback for item click */\n  onClick?: (event?: any) => void;\n  /** Component used to render the menu item */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n  /** Render item as disabled option */\n  isDisabled?: boolean;\n  /** Render item as aria-disabled option */\n  isAriaDisabled?: boolean;\n  /** Props for adding a tooltip to a menu item */\n  tooltipProps?: TooltipProps;\n  /** Render item with icon */\n  icon?: React.ReactNode;\n  /** Render item with one or more actions */\n  actions?: React.ReactNode;\n  /** Description of the menu item */\n  description?: React.ReactNode;\n  /** Render an external link icon on focus or hover, and set the link's\n   * \"target\" attribute to a value of \"_blank\".\n   */\n  isExternalLink?: boolean;\n  /** Flag indicating if the option is selected */\n  isSelected?: boolean;\n  /** Flag indicating the item is focused */\n  isFocused?: boolean;\n  /** Flag indicating the item is in danger state */\n  isDanger?: boolean;\n  /** Flyout menu. Should not be used if the to prop is defined. */\n  flyoutMenu?: React.ReactElement<any>;\n  /** Callback function when mouse leaves trigger */\n  onShowFlyout?: (event?: any) => void;\n  /** Drilldown menu of the item. Should be a Menu or DrilldownMenu type. */\n  drilldownMenu?: React.ReactNode | (() => React.ReactNode);\n  /** Sub menu direction */\n  direction?: 'down' | 'up';\n  /** True if item is on current selection path */\n  isOnPath?: boolean;\n  /** Adds an accessible name to the menu item. */\n  'aria-label'?: string;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLAnchorElement | HTMLButtonElement>;\n  /** Sets the id attribute on the menu item component. */\n  id?: string;\n}\n\nconst FlyoutContext = createContext({\n  direction: 'right' as 'left' | 'right'\n});\n\nconst MenuItemBase: React.FunctionComponent<MenuItemProps> = ({\n  children,\n  className,\n  itemId = null,\n  to,\n  hasCheckbox = false,\n  isActive = null,\n  isFavorited = null,\n  isLoadButton = false,\n  isLoading = false,\n  flyoutMenu,\n  direction,\n  description = null as string,\n  onClick = () => {},\n  component = 'button',\n  isDisabled = false,\n  isAriaDisabled = false,\n  isExternalLink = false,\n  isSelected = null,\n  isFocused,\n  isDanger = false,\n  icon,\n  actions,\n  onShowFlyout,\n  drilldownMenu,\n  isOnPath,\n  innerRef,\n  id,\n  'aria-label': ariaLabel,\n  tooltipProps,\n  rel,\n  target,\n  download,\n  ...props\n}: MenuItemProps) => {\n  const {\n    menuId,\n    parentMenu,\n    onSelect,\n    onActionClick,\n    activeItemId,\n    selected,\n    drilldownItemPath,\n    onDrillIn,\n    onDrillOut,\n    flyoutRef,\n    setFlyoutRef,\n    disableHover,\n    role: menuRole\n  } = useContext(MenuContext);\n  let Component = (to ? 'a' : component) as any;\n  if (hasCheckbox && !to) {\n    Component = 'label' as any;\n  }\n  const [flyoutTarget, setFlyoutTarget] = useState(null);\n  const flyoutContext = useContext(FlyoutContext);\n  const [flyoutXDirection, setFlyoutXDirection] = useState(flyoutContext.direction);\n  const ref = useRef<HTMLLIElement>(undefined);\n  const privateRef = useRef(undefined);\n  const innerComponentRef = innerRef || privateRef;\n  const flyoutVisible = ref === flyoutRef;\n\n  const hasFlyout = flyoutMenu !== undefined;\n  const showFlyout = (show: boolean) => {\n    if (!flyoutVisible && show) {\n      setFlyoutRef(ref);\n    } else if (flyoutVisible && !show) {\n      setFlyoutRef(null);\n    }\n    onShowFlyout && show && onShowFlyout();\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (hasFlyout && ref.current && canUseDOM) {\n      const flyoutMenu = ref.current.lastElementChild as HTMLElement;\n      if (flyoutMenu && flyoutMenu.classList.contains(styles.menu)) {\n        const origin = ref.current.getClientRects()[0];\n        const rect = flyoutMenu.getClientRects()[0];\n        if (origin && rect) {\n          const spaceLeftLeft = origin.x - rect.width;\n          const spaceLeftRight = window.innerWidth - origin.x - origin.width - rect.width;\n          let xDir = flyoutXDirection as 'left' | 'right' | 'none';\n          if (spaceLeftRight < 0 && xDir !== 'left') {\n            setFlyoutXDirection('left');\n            xDir = 'left';\n          } else if (spaceLeftLeft < 0 && xDir !== 'right') {\n            setFlyoutXDirection('right');\n            xDir = 'right';\n          }\n          let xOffset = 0;\n          if (spaceLeftLeft < 0 && spaceLeftRight < 0) {\n            xOffset = xDir === 'right' ? -spaceLeftRight : -spaceLeftLeft;\n          }\n          if (xDir === 'left') {\n            flyoutMenu.classList.add(styles.modifiers.left);\n            flyoutMenu.style.setProperty(rightOffset.name, `-${xOffset}px`);\n          } else {\n            flyoutMenu.style.setProperty(leftOffset.name, `-${xOffset}px`);\n          }\n\n          const spaceLeftBot = window.innerHeight - origin.y - rect.height;\n          const spaceLeftTop = window.innerHeight - rect.height;\n          if (spaceLeftTop < 0 && spaceLeftBot < 0) {\n            // working idea: page can usually scroll down, but not up\n            // TODO: proper scroll buttons\n          } else if (spaceLeftBot < 0) {\n            flyoutMenu.style.setProperty(topOffset.name, `${spaceLeftBot}px`);\n          }\n        }\n      }\n    }\n  }, [flyoutVisible, flyoutMenu]);\n\n  useEffect(() => {\n    setFlyoutXDirection(flyoutContext.direction);\n  }, [flyoutContext]);\n\n  useEffect(() => {\n    if (flyoutTarget) {\n      if (flyoutVisible) {\n        const flyoutMenu = (flyoutTarget as HTMLElement).nextElementSibling;\n        const flyoutItems = Array.from(flyoutMenu.getElementsByTagName('UL')[0].children).filter(\n          (el) => !(el.classList.contains('pf-m-disabled') || el.classList.contains(styles.divider))\n        );\n        (flyoutItems[0].firstChild as HTMLElement).focus();\n      } else {\n        flyoutTarget.focus();\n      }\n    }\n  }, [flyoutVisible, flyoutTarget]);\n\n  const handleFlyout = (event: React.KeyboardEvent | React.MouseEvent) => {\n    const key = (event as React.KeyboardEvent).key;\n    const target = event.target;\n    const type = event.type;\n\n    if (key === ' ' || key === 'Enter' || key === 'ArrowRight' || type === 'click') {\n      event.stopPropagation();\n      event.preventDefault();\n      if (!flyoutVisible) {\n        showFlyout(true);\n        setFlyoutTarget(target as HTMLElement);\n      }\n    }\n\n    if (key === 'Escape' || key === 'ArrowLeft') {\n      if (flyoutVisible) {\n        event.stopPropagation();\n        showFlyout(false);\n      }\n    }\n  };\n\n  const onItemSelect = (event: any, onSelect: any) => {\n    if (!isAriaDisabled) {\n      // Trigger callback for Menu onSelect\n      onSelect && onSelect(event, itemId);\n      // Trigger callback for item onClick\n      onClick && onClick(event);\n    }\n  };\n  const _isOnPath = (isOnPath && isOnPath) || (drilldownItemPath && drilldownItemPath.includes(itemId)) || false;\n  let drill: (event: React.KeyboardEvent | React.MouseEvent) => void;\n  if (direction) {\n    if (direction === 'down') {\n      drill = (event) =>\n        onDrillIn &&\n        onDrillIn(\n          event,\n          menuId,\n          typeof drilldownMenu === 'function'\n            ? (drilldownMenu() as any).props.id\n            : (drilldownMenu as React.ReactElement<any>).props.id,\n          itemId\n        );\n    } else {\n      drill = (event) => onDrillOut && onDrillOut(event, parentMenu, itemId);\n    }\n  }\n  let additionalProps = {} as any;\n  if (Component === 'a') {\n    additionalProps = {\n      href: to,\n      'aria-disabled': isDisabled || isAriaDisabled ? true : null,\n      // prevent invalid 'disabled' attribute on <a> tags\n      disabled: null,\n      target: isExternalLink ? '_blank' : target,\n      rel,\n      download\n    };\n  } else if (Component === 'button') {\n    additionalProps = {\n      type: 'button',\n      'aria-disabled': isAriaDisabled ? true : null\n    };\n  }\n\n  if (isOnPath) {\n    additionalProps['aria-expanded'] = true;\n  } else if (hasFlyout) {\n    additionalProps['aria-haspopup'] = 'menu';\n    additionalProps['aria-expanded'] = flyoutVisible;\n  }\n  const getAriaCurrent = () => {\n    if (isActive !== null) {\n      if (isActive) {\n        return 'page';\n      } else {\n        return null;\n      }\n    } else if (itemId !== null && activeItemId !== null) {\n      return itemId === activeItemId;\n    }\n    return null;\n  };\n  const getIsSelected = () => {\n    if (isSelected !== null) {\n      return isSelected;\n    } else if (selected !== null && itemId !== null) {\n      return (Array.isArray(selected) && selected.includes(itemId)) || itemId === selected;\n    }\n    return false;\n  };\n  const onMouseOver = () => {\n    if (disableHover) {\n      return;\n    }\n    if (hasFlyout) {\n      showFlyout(true);\n    } else {\n      setFlyoutRef(null);\n    }\n  };\n\n  useEffect(() => {\n    if (isFocused && ref.current) {\n      const itemEl = ref.current;\n      const parentListEl = itemEl.parentElement;\n\n      if (parentListEl) {\n        const isAboveTop = itemEl.offsetTop - parentListEl.offsetTop < parentListEl.scrollTop;\n        const isBelowBottom = itemEl.offsetTop - parentListEl.offsetTop + itemEl.clientHeight;\n\n        if (isAboveTop || isBelowBottom) {\n          itemEl.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n        }\n      }\n    }\n  }, [isFocused]);\n\n  const isSelectMenu = menuRole === 'listbox';\n\n  const renderItem = (\n    <>\n      <GenerateId>\n        {(randomId) => (\n          <Component\n            id={id}\n            tabIndex={-1}\n            className={css(styles.menuItem, getIsSelected() && !hasCheckbox && styles.modifiers.selected, className)}\n            aria-current={getAriaCurrent()}\n            {...(!hasCheckbox && { disabled: isDisabled, 'aria-label': ariaLabel })}\n            {...(!hasCheckbox && !flyoutMenu && { role: isSelectMenu ? 'option' : 'menuitem' })}\n            {...(!hasCheckbox && !flyoutMenu && isSelectMenu && { 'aria-selected': getIsSelected() })}\n            ref={innerComponentRef}\n            {...(!hasCheckbox && {\n              onClick: (event: React.KeyboardEvent | React.MouseEvent) => {\n                if (!isAriaDisabled) {\n                  onItemSelect(event, onSelect);\n                  drill && drill(event);\n                  flyoutMenu && handleFlyout(event);\n                } else {\n                  event.preventDefault();\n                }\n              }\n            })}\n            {...(hasCheckbox && { htmlFor: randomId })}\n            {...additionalProps}\n          >\n            <span className={css(styles.menuItemMain)}>\n              {direction === 'up' && (\n                <span className={css(styles.menuItemToggleIcon)}>\n                  <AngleLeftIcon />\n                </span>\n              )}\n              {icon && <span className={css(styles.menuItemIcon)}>{icon}</span>}\n              {hasCheckbox && (\n                <span className={css(styles.menuItemCheck)}>\n                  <Checkbox\n                    id={randomId}\n                    component=\"span\"\n                    isChecked={isSelected || false}\n                    onChange={(event) => onItemSelect(event, onSelect)}\n                    isDisabled={isDisabled}\n                    aria-disabled={isAriaDisabled}\n                  />\n                </span>\n              )}\n              <span className={css(styles.menuItemText)}>{children}</span>\n              {isExternalLink && (\n                <span className={css(styles.menuItemExternalIcon)}>\n                  <ExternalLinkAltIcon />\n                </span>\n              )}\n              {(flyoutMenu || direction === 'down') && (\n                <span className={css(styles.menuItemToggleIcon)}>\n                  <AngleRightIcon />\n                </span>\n              )}\n              {getIsSelected() && (\n                <span className={css(styles.menuItemSelectIcon)}>\n                  <CheckIcon />\n                </span>\n              )}\n            </span>\n            {description && direction !== 'up' && (\n              <span className={css(styles.menuItemDescription)}>\n                <span>{description}</span>\n              </span>\n            )}\n          </Component>\n        )}\n      </GenerateId>\n      {flyoutVisible && (\n        <MenuContext.Provider value={{ disableHover }}>\n          <FlyoutContext.Provider value={{ direction: flyoutXDirection }}>{flyoutMenu}</FlyoutContext.Provider>\n        </MenuContext.Provider>\n      )}\n      {typeof drilldownMenu === 'function' ? drilldownMenu() : drilldownMenu}\n      <MenuItemContext.Provider value={{ itemId, isDisabled }}>\n        {actions}\n        {isFavorited !== null && (\n          <MenuItemAction\n            icon=\"favorites\"\n            isFavorited={isFavorited}\n            aria-label={isFavorited ? 'starred' : 'not starred'}\n            onClick={(event) => onActionClick(event, itemId)}\n            tabIndex={-1}\n            actionId=\"fav\"\n          />\n        )}\n      </MenuItemContext.Provider>\n    </>\n  );\n\n  return (\n    <>\n      <li\n        className={css(\n          styles.menuListItem,\n          isDisabled && styles.modifiers.disabled,\n          isAriaDisabled && styles.modifiers.ariaDisabled,\n          _isOnPath && styles.modifiers.currentPath,\n          isLoadButton && styles.modifiers.load,\n          isLoading && styles.modifiers.loading,\n          isFocused && 'pf-m-focus',\n          isDanger && styles.modifiers.danger,\n          className\n        )}\n        onMouseOver={() => {\n          if (!isAriaDisabled) {\n            onMouseOver();\n          }\n        }}\n        {...(flyoutMenu && !isAriaDisabled && { onKeyDown: handleFlyout })}\n        ref={ref}\n        role={!hasCheckbox ? 'none' : 'menuitem'}\n        {...(hasCheckbox && { 'aria-label': ariaLabel })}\n        {...props}\n      >\n        {renderItem}\n      </li>\n      {tooltipProps && <Tooltip {...tooltipProps} triggerRef={innerComponentRef as any} />}\n    </>\n  );\n};\n\nexport const MenuItem = forwardRef((props: MenuItemProps, ref: React.Ref<any>) => (\n  <MenuItemBase {...props} innerRef={ref} />\n));\n\nMenuItem.displayName = 'MenuItem';\n", "export const c_menu_m_flyout__menu_top_offset = {\n  \"name\": \"--pf-v6-c-menu--m-flyout__menu--top-offset\",\n  \"value\": \"0px\",\n  \"var\": \"var(--pf-v6-c-menu--m-flyout__menu--top-offset)\"\n};\nexport default c_menu_m_flyout__menu_top_offset;", "export const c_menu_m_flyout__menu_m_left_right_offset = {\n  \"name\": \"--pf-v6-c-menu--m-flyout__menu--m-left--right-offset\",\n  \"value\": \"0px\",\n  \"var\": \"var(--pf-v6-c-menu--m-flyout__menu--m-left--right-offset)\"\n};\nexport default c_menu_m_flyout__menu_m_left_right_offset;", "export const c_menu_m_flyout__menu_left_offset = {\n  \"name\": \"--pf-v6-c-menu--m-flyout__menu--left-offset\",\n  \"value\": \"0px\",\n  \"var\": \"var(--pf-v6-c-menu--m-flyout__menu--left-offset)\"\n};\nexport default c_menu_m_flyout__menu_left_offset;", "import { useContext } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\n\nexport interface MenuListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Anything that can be rendered inside of menu list */\n  children: React.ReactNode;\n  /** Additional classes added to the menu list */\n  className?: string;\n  /** Indicates to assistive technologies whether more than one item can be selected\n   * for a non-checkbox menu. Only applies when the menu's role is \"listbox\".\n   */\n  isAriaMultiselectable?: boolean;\n  /** Adds an accessible name to the menu. */\n  'aria-label'?: string;\n}\n\nexport const MenuList: React.FunctionComponent<MenuListProps> = ({\n  children = null,\n  className,\n  isAriaMultiselectable = false,\n  'aria-label': ariaLabel,\n  ...props\n}: MenuListProps) => {\n  const { role } = useContext(MenuContext);\n\n  return (\n    <ul\n      role={role}\n      {...(role === 'listbox' && { 'aria-multiselectable': isAriaMultiselectable })}\n      className={css(styles.menuList, className)}\n      aria-label={ariaLabel}\n      {...props}\n    >\n      {children}\n    </ul>\n  );\n};\nMenuList.displayName = 'MenuList';\n", "import { createRef } from 'react';\nimport { Menu } from './Menu';\nimport { MenuContent } from './MenuContent';\nimport { MenuList } from './MenuList';\nimport { MenuContext } from './MenuContext';\n\nexport interface DrilldownMenuProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'ref' | 'onSelect'> {\n  /** Items within drilldown sub-menu */\n  children?: React.ReactNode;\n  /** ID of the drilldown sub-menu */\n  id?: string;\n  /** Flag indicating whether the menu is drilled in */\n  isMenuDrilledIn?: boolean;\n  /** Optional callback to get the height of the sub menu */\n  getHeight?: (height: string) => void;\n}\n\nexport const DrilldownMenu: React.FunctionComponent<DrilldownMenuProps> = ({\n  children,\n  id,\n  isMenuDrilledIn = false,\n  getHeight,\n  ...props\n}: DrilldownMenuProps) => (\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  <MenuContext.Consumer>\n    {({ menuId, parentMenu, flyoutRef, setFlyoutRef, disableHover, ...context }) => (\n      <Menu\n        id={id}\n        parentMenu={menuId}\n        isMenuDrilledIn={isMenuDrilledIn}\n        isRootMenu={false}\n        ref={createRef()}\n        {...context}\n        {...props}\n      >\n        <MenuContent getHeight={getHeight}>\n          <MenuList>{children}</MenuList>\n        </MenuContent>\n      </Menu>\n    )}\n  </MenuContext.Consumer>\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n);\n\nDrilldownMenu.displayName = 'DrilldownMenu';\n", "import styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\n\nexport interface MenuBreadcrumbProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'ref' | 'onSelect'> {\n  /** Items within breadcrumb menu container */\n  children?: React.ReactNode;\n}\n\nexport const MenuBreadcrumb: React.FunctionComponent<MenuBreadcrumbProps> = ({\n  children,\n  ...props\n}: MenuBreadcrumbProps) => (\n  <div className={css(styles.menuBreadcrumb)} {...props}>\n    {children}\n  </div>\n);\n\nMenuBreadcrumb.displayName = 'MenuBreadcrumb';\n", "import { useEffect, useRef } from 'react';\nimport { onToggleArrowKeydownDefault, Popper } from '../../helpers';\n\nexport interface MenuPopperProps {\n  /** Vertical direction of the popper. If enableFlip is set to true, this will set the initial direction before the popper flips. */\n  direction?: 'up' | 'down';\n  /** Horizontal position of the popper */\n  position?: 'right' | 'left' | 'center' | 'start' | 'end';\n  /** Custom width of the popper. If the value is \"trigger\", it will set the width to the dropdown toggle's width */\n  width?: string | 'trigger';\n  /** Minimum width of the popper. If the value is \"trigger\", it will set the min width to the dropdown toggle's width */\n  minWidth?: string | 'trigger';\n  /** Maximum width of the popper. If the value is \"trigger\", it will set the max width to the dropdown toggle's width */\n  maxWidth?: string | 'trigger';\n  /** Enable to flip the popper when it reaches the boundary */\n  enableFlip?: boolean;\n  /** Flag to prevent the popper from overflowing its container and becoming partially obscured. */\n  preventOverflow?: boolean;\n}\n\nexport interface MenuContainerProps {\n  /** Menu to be rendered */\n  menu: React.ReactElement<any, string | React.JSXElementConstructor<any>>;\n  /** Reference to the menu */\n  menuRef: React.RefObject<any>;\n  /** Toggle to be rendered */\n  toggle: React.ReactNode;\n  /** Reference to the toggle */\n  toggleRef: React.RefObject<any>;\n  /** Flag to indicate if menu is opened.*/\n  isOpen: boolean;\n  /** Callback to change the open state of the menu.\n   * Triggered by clicking outside of the menu, or by pressing any keys specified in onOpenChangeKeys. */\n  onOpenChange?: (isOpen: boolean) => void;\n  /** Keys that trigger onOpenChange, defaults to tab and escape. It is highly recommended to include Escape in the array, while Tab may be omitted if the menu contains non-menu items that are focusable. */\n  onOpenChangeKeys?: string[];\n  /** Callback to override the toggle keydown behavior. By default, when the toggle has focus and the menu is open, pressing the up/down arrow keys will focus a valid non-disabled menu item - the first item for the down arrow key and last item for the up arrow key. */\n  onToggleKeydown?: (event: KeyboardEvent) => void;\n  /** z-index of the dropdown menu */\n  zIndex?: number;\n  /** Additional properties to pass to the Popper */\n  popperProps?: MenuPopperProps;\n  /** @beta Flag indicating the first menu item should be focused after opening the dropdown. */\n  shouldFocusFirstItemOnOpen?: boolean;\n  /** Flag indicating if scroll on focus of the first menu item should occur. */\n  shouldPreventScrollOnItemFocus?: boolean;\n  /** Time in ms to wait before firing the toggles' focus event. Defaults to 0 */\n  focusTimeoutDelay?: number;\n}\n\n/**\n * Container that links a menu and menu toggle together, to handle basic keyboard input and control the opening and closing of a menu.\n */\nexport const MenuContainer: React.FunctionComponent<MenuContainerProps> = ({\n  menu,\n  menuRef,\n  isOpen,\n  toggle,\n  toggleRef,\n  onOpenChange,\n  onToggleKeydown,\n  zIndex = 9999,\n  popperProps,\n  onOpenChangeKeys = ['Escape', 'Tab'],\n  shouldFocusFirstItemOnOpen = false,\n  shouldPreventScrollOnItemFocus = true,\n  focusTimeoutDelay = 0\n}: MenuContainerProps) => {\n  const prevIsOpen = useRef<boolean>(isOpen);\n  useEffect(() => {\n    // menu was opened, focus on first menu item\n    if (prevIsOpen.current === false && isOpen === true && shouldFocusFirstItemOnOpen) {\n      setTimeout(() => {\n        const firstElement = menuRef?.current?.querySelector(\n          'li button:not(:disabled),li input:not(:disabled),li a:not([aria-disabled=\"true\"])'\n        );\n        firstElement && (firstElement as HTMLElement).focus({ preventScroll: shouldPreventScrollOnItemFocus });\n      }, focusTimeoutDelay);\n    }\n\n    prevIsOpen.current = isOpen;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  useEffect(() => {\n    const handleMenuKeys = (event: KeyboardEvent) => {\n      // Close the menu on tab or escape if onOpenChange is provided\n      if (\n        (isOpen && onOpenChange && menuRef.current?.contains(event.target as Node)) ||\n        toggleRef.current?.contains(event.target as Node)\n      ) {\n        if (onOpenChangeKeys.includes(event.key)) {\n          onOpenChange(false);\n          toggleRef.current?.focus();\n        }\n      }\n\n      if (toggleRef.current?.contains(event.target as Node)) {\n        if (onToggleKeydown) {\n          onToggleKeydown(event);\n        } else if (isOpen) {\n          onToggleArrowKeydownDefault(event, menuRef);\n        }\n      }\n    };\n\n    const handleClick = (event: MouseEvent) => {\n      // If the event is not on the toggle and onOpenChange callback is provided, close the menu\n      if (isOpen && onOpenChange && !toggleRef?.current?.contains(event.target as Node)) {\n        if (isOpen && !menuRef.current?.contains(event.target as Node)) {\n          onOpenChange(false);\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleMenuKeys);\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('keydown', handleMenuKeys);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [\n    focusTimeoutDelay,\n    isOpen,\n    menuRef,\n    onOpenChange,\n    onOpenChangeKeys,\n    onToggleKeydown,\n    shouldPreventScrollOnItemFocus,\n    toggleRef\n  ]);\n\n  return (\n    <Popper\n      trigger={toggle}\n      triggerRef={toggleRef}\n      popper={menu}\n      popperRef={menuRef}\n      isVisible={isOpen}\n      zIndex={zIndex}\n      {...popperProps}\n    />\n  );\n};\nMenuContainer.displayName = 'MenuContainer';\n", "import { forwardRef, useEffect, useRef } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Menu, MenuContent, MenuProps } from '../Menu';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId, onToggleArrowKeydownDefault } from '../../helpers';\n\nexport interface SelectPopperProps {\n  /** Vertical direction of the popper. If enableFlip is set to true, this will set the initial direction before the popper flips. */\n  direction?: 'up' | 'down';\n  /** Horizontal position of the popper */\n  position?: 'right' | 'left' | 'center' | 'start' | 'end';\n  /** Custom width of the popper. If the value is \"trigger\", it will set the width to the select toggle's width */\n  width?: string | 'trigger';\n  /** Minimum width of the popper. If the value is \"trigger\", it will set the min width to the select toggle's width */\n  minWidth?: string | 'trigger';\n  /** Maximum width of the popper. If the value is \"trigger\", it will set the max width to the select toggle's width */\n  maxWidth?: string | 'trigger';\n  /** Enable to flip the popper when it reaches the boundary */\n  enableFlip?: boolean;\n  /** The container to append the select to. Defaults to document.body.\n   * If your select is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * appendTo=\"inline\"\n   * appendTo={() => document.body}\n   * appendTo={document.getElementById('target')}\n   */\n  appendTo?: HTMLElement | (() => HTMLElement) | 'inline';\n  /** Flag to prevent the popper from overflowing its container and becoming partially obscured. */\n  preventOverflow?: boolean;\n}\n\nexport interface SelectToggleProps {\n  /**  Select toggle node. */\n  toggleNode: React.ReactNode;\n  /** Reference to the toggle. */\n  toggleRef?: React.RefObject<HTMLButtonElement | null>;\n}\n\n/**\n * See the Menu documentation for additional props that may be passed.\n */\n\nexport interface SelectProps extends MenuProps, OUIAProps {\n  /** Anything which can be rendered in a select */\n  children?: React.ReactNode;\n  /** Classes applied to root element of select */\n  className?: string;\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Single select option value for single select menus, or array of select option values for multi select. You can also specify isSelected on the SelectOption. */\n  selected?: any | any[];\n  /** Select toggle. The toggle should either be a renderer function which forwards the given toggle ref, or a direct ReactNode that should be passed along with the toggleRef property. */\n  toggle: SelectToggleProps | ((toggleRef: React.RefObject<any>) => React.ReactNode);\n  /** Flag indicating the toggle should be focused after a selection. If this use case is too restrictive, the optional toggleRef property with a node toggle may be used to control focus. */\n  shouldFocusToggleOnSelect?: boolean;\n  /** @beta Flag indicating the first menu item should be focused after opening the menu. */\n  shouldFocusFirstItemOnOpen?: boolean;\n  /** Function callback when user selects an option. */\n  onSelect?: (event?: React.MouseEvent<Element, MouseEvent>, value?: string | number) => void;\n  /** Callback to allow the select component to change the open state of the menu.\n   * Triggered by clicking outside of the menu, or by pressing any keys specified in onOpenChangeKeys. */\n  onOpenChange?: (isOpen: boolean) => void;\n  /** Keys that trigger onOpenChange, defaults to tab and escape. It is highly recommended to include Escape in the array, while Tab may be omitted if the menu contains non-menu items that are focusable. */\n  onOpenChangeKeys?: string[];\n  /** Callback to override the toggle keydown behavior. By default, when the toggle has focus and the menu is open, pressing the up/down arrow keys will focus a valid non-disabled menu item - the first item for the down arrow key and last item for the up arrow key. */\n  onToggleKeydown?: (event: KeyboardEvent) => void;\n  /** Select variant. For typeahead variant focus won't shift to menu items when pressing up/down arrows. */\n  variant?: 'default' | 'typeahead';\n  /** Indicates if the select should be without the outer box-shadow */\n  isPlain?: boolean;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLDivElement>;\n  /** z-index of the select menu */\n  zIndex?: number;\n  /** Determines the accessible role of the select. For a checkbox select pass in \"menu\". */\n  role?: string;\n  /** Additional properties to pass to the popper */\n  popperProps?: SelectPopperProps;\n  /** Height of the select menu */\n  menuHeight?: string;\n  /** Maximum height of select menu */\n  maxMenuHeight?: string;\n  /** Indicates if the select menu should be scrollable */\n  isScrollable?: boolean;\n  /** Flag indicating if scroll on focus of the first menu item should occur. */\n  shouldPreventScrollOnItemFocus?: boolean;\n  /** Time in ms to wait before firing the toggles' focus event. Defaults to 0 */\n  focusTimeoutDelay?: number;\n}\n\nconst SelectBase: React.FunctionComponent<SelectProps & OUIAProps> = ({\n  children,\n  className,\n  onSelect,\n  isOpen,\n  selected,\n  toggle,\n  shouldFocusToggleOnSelect = false,\n  shouldFocusFirstItemOnOpen = false,\n  onOpenChange,\n  onOpenChangeKeys = ['Escape', 'Tab'],\n  onToggleKeydown,\n  variant,\n  isPlain,\n  innerRef,\n  zIndex = 9999,\n  role = 'listbox',\n  popperProps,\n  menuHeight,\n  maxMenuHeight,\n  isScrollable,\n  shouldPreventScrollOnItemFocus = true,\n  focusTimeoutDelay = 0,\n  ...props\n}: SelectProps & OUIAProps) => {\n  const localMenuRef = useRef<HTMLDivElement>(undefined);\n  const localToggleRef = useRef<HTMLButtonElement>(undefined);\n\n  const menuRef = (innerRef as React.RefObject<HTMLDivElement | null>) || localMenuRef;\n  const toggleRef =\n    typeof toggle === 'function' || (typeof toggle !== 'function' && !toggle.toggleRef)\n      ? localToggleRef\n      : (toggle?.toggleRef as React.RefObject<HTMLButtonElement | null>);\n\n  const prevIsOpen = useRef<boolean>(isOpen);\n  useEffect(() => {\n    // menu was opened, focus on first menu item\n    if (prevIsOpen.current === false && isOpen === true && shouldFocusFirstItemOnOpen) {\n      setTimeout(() => {\n        const firstElement = menuRef?.current?.querySelector('li button:not(:disabled),li input:not(:disabled)');\n        firstElement && (firstElement as HTMLElement).focus({ preventScroll: shouldPreventScrollOnItemFocus });\n      }, focusTimeoutDelay);\n    }\n\n    prevIsOpen.current = isOpen;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  useEffect(() => {\n    const handleMenuKeys = (event: KeyboardEvent) => {\n      // Close the menu on tab or escape if onOpenChange is provided\n      if (\n        isOpen &&\n        onOpenChange &&\n        (menuRef.current?.contains(event.target as Node) || toggleRef.current?.contains(event.target as Node))\n      ) {\n        if (onOpenChangeKeys.includes(event.key)) {\n          event.preventDefault();\n          onOpenChange(false);\n          toggleRef.current?.focus();\n        }\n      }\n\n      if (toggleRef.current?.contains(event.target as Node)) {\n        if (onToggleKeydown) {\n          onToggleKeydown(event);\n        } else if (isOpen && variant !== 'typeahead') {\n          onToggleArrowKeydownDefault(event, menuRef);\n        }\n      }\n    };\n\n    const handleClick = (event: MouseEvent) => {\n      // If the event is not on the toggle and onOpenChange callback is provided, close the menu\n      if (isOpen && onOpenChange && !toggleRef?.current?.contains(event.target as Node)) {\n        if (isOpen && !menuRef.current?.contains(event.target as Node)) {\n          onOpenChange(false);\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleMenuKeys);\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('keydown', handleMenuKeys);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [\n    isOpen,\n    menuRef,\n    toggleRef,\n    onOpenChange,\n    onOpenChangeKeys,\n    onToggleKeydown,\n    shouldPreventScrollOnItemFocus,\n    shouldFocusFirstItemOnOpen,\n    focusTimeoutDelay\n  ]);\n\n  const menu = (\n    <Menu\n      role={role}\n      className={css(className)}\n      ref={menuRef}\n      onSelect={(event, value) => {\n        onSelect && onSelect(event, value);\n        shouldFocusToggleOnSelect && toggleRef.current.focus();\n      }}\n      isPlain={isPlain}\n      selected={selected}\n      isScrollable={isScrollable ?? (menuHeight !== undefined || maxMenuHeight !== undefined)}\n      {...getOUIAProps(\n        Select.displayName,\n        props.ouiaId !== undefined ? props.ouiaId : getDefaultOUIAId(Select.displayName),\n        props.ouiaSafe !== undefined ? props.ouiaSafe : true\n      )}\n      {...props}\n    >\n      <MenuContent menuHeight={menuHeight} maxMenuHeight={maxMenuHeight}>\n        {children}\n      </MenuContent>\n    </Menu>\n  );\n  return (\n    <Popper\n      trigger={typeof toggle === 'function' ? toggle(toggleRef) : toggle.toggleNode}\n      triggerRef={toggleRef}\n      popper={menu}\n      popperRef={menuRef}\n      isVisible={isOpen}\n      zIndex={zIndex}\n      {...popperProps}\n    />\n  );\n};\n\nexport const Select = forwardRef((props: SelectProps, ref: React.Ref<any>) => <SelectBase innerRef={ref} {...props} />);\n\nSelect.displayName = 'Select';\n", "import { css } from '@patternfly/react-styles';\nimport { MenuGroupProps, MenuGroup } from '../Menu';\n\n/**\n * See the MenuGroup section of the Menu documentation for additional props that may be passed.\n */\nexport interface SelectGroupProps extends Omit<MenuGroupProps, 'ref'> {\n  /** Anything which can be rendered in a select group */\n  children: React.ReactNode;\n  /** Classes applied to root element of select group */\n  className?: string;\n  /** Label of the select group */\n  label?: React.ReactNode;\n}\n\nexport const SelectGroup: React.FunctionComponent<SelectGroupProps> = ({\n  children,\n  className,\n  label,\n  ...props\n}: SelectGroupProps) => (\n  <MenuGroup className={css(className)} label={label} {...props}>\n    {children}\n  </MenuGroup>\n);\nSelectGroup.displayName = 'SelectGroup';\n", "import { css } from '@patternfly/react-styles';\nimport { MenuListProps, MenuList } from '../Menu';\n\nexport interface SelectListProps extends MenuListProps {\n  /** Anything which can be rendered in a select list */\n  children: React.ReactNode;\n  /** Classes applied to root element of select list */\n  className?: string;\n  /** Indicates to assistive technologies whether more than one item can be selected for a non-checkbox select */\n  isAriaMultiselectable?: boolean;\n}\n\nexport const SelectList: React.FunctionComponent<MenuListProps> = ({\n  children,\n  className,\n  isAriaMultiselectable = false,\n  ...props\n}: SelectListProps) => (\n  <MenuList isAriaMultiselectable={isAriaMultiselectable} className={css(className)} {...props}>\n    {children}\n  </MenuList>\n);\nSelectList.displayName = 'SelectList';\n", "import { forwardRef } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { MenuItemProps, MenuItem } from '../Menu';\n\n/**\n * See the MenuItem section of the Menu documentation for additional props that may be passed.\n */\n\nexport interface SelectOptionProps extends Omit<MenuItemProps, 'ref'> {\n  /** Anything which can be rendered in a select option */\n  children?: React.ReactNode;\n  /** Classes applied to root element of select option */\n  className?: string;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLAnchorElement | HTMLButtonElement>;\n  /** Identifies the component in the Select onSelect callback */\n  value?: any;\n  /** Indicates the option has a checkbox */\n  hasCheckbox?: boolean;\n  /** Indicates the option is disabled */\n  isDisabled?: boolean;\n  /** Indicates the option is selected */\n  isSelected?: boolean;\n  /** Indicates the option is focused */\n  isFocused?: boolean;\n  /** Render an external link icon on focus or hover, and set the link's\n   * \"target\" attribute to a value of \"_blank\".\n   */\n  isExternalLink?: boolean;\n  /** Render option with icon */\n  icon?: React.ReactNode;\n  /** Description of the option */\n  description?: React.ReactNode;\n}\n\nconst SelectOptionBase: React.FunctionComponent<MenuItemProps> = ({\n  children,\n  className,\n  innerRef,\n  value,\n  ...props\n}: SelectOptionProps) => (\n  <MenuItem itemId={value} ref={innerRef} className={css(className)} {...props}>\n    {children}\n  </MenuItem>\n);\n\nexport const SelectOption = forwardRef((props: SelectOptionProps, ref: React.Ref<any>) => (\n  <SelectOptionBase {...props} innerRef={ref} />\n));\n\nSelectOption.displayName = 'SelectOption';\n", "import { Component, forwardRef, isValidElement } from 'react';\nimport styles from '@patternfly/react-styles/css/components/MenuToggle/menu-toggle';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { BadgeProps } from '../Badge';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { OUIAProps, getDefaultOUIAId, getOUIAProps } from '../../helpers';\n\nexport enum MenuToggleStatus {\n  success = 'success',\n  danger = 'danger',\n  warning = 'warning'\n}\n\nexport enum MenuToggleSize {\n  default = 'default',\n  sm = 'sm'\n}\n\nexport type MenuToggleElement = HTMLDivElement | HTMLButtonElement;\n\nexport interface MenuToggleProps\n  extends Omit<\n      React.DetailedHTMLProps<\n        React.ButtonHTMLAttributes<HTMLButtonElement> & React.HTMLAttributes<HTMLDivElement>,\n        MenuToggleElement\n      >,\n      'ref'\n    >,\n    OUIAProps {\n  /** Content rendered inside the toggle */\n  children?: React.ReactNode;\n  /** Additional classes added to the toggle */\n  className?: string;\n  /** Flag indicating the toggle has expanded styling */\n  isExpanded?: boolean;\n  /** Flag indicating the toggle is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating the toggle is full height */\n  isFullHeight?: boolean;\n  /** Flag indicating the toggle takes up the full width of its parent */\n  isFullWidth?: boolean;\n  /** Flag indicating the toggle contains placeholder text */\n  isPlaceholder?: boolean;\n  /** Flag indicating whether the toggle is a settings toggle. This will override the icon property */\n  isSettings?: boolean;\n  /** Elements to display before the toggle button. When included, renders the menu toggle as a split button. */\n  splitButtonItems?: React.ReactNode[];\n  /** Variant styles of the menu toggle */\n  variant?: 'default' | 'plain' | 'primary' | 'plainText' | 'secondary' | 'typeahead';\n  /** Status styles of the menu toggle */\n  status?: 'success' | 'warning' | 'danger';\n  /** Overrides the status icon */\n  statusIcon?: React.ReactNode;\n  /** Optional icon or image rendered inside the toggle, before the children content. It is\n   * recommended to wrap most basic icons in our icon component.\n   */\n  icon?: React.ReactNode;\n  /** Optional badge rendered inside the toggle, after the children content */\n  badge?: BadgeProps | React.ReactNode;\n  /** Adds styling which affects the size of the menu toggle */\n  size?: 'default' | 'sm';\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<MenuToggleElement>;\n  /** Value to overwrite the randomly generated data-ouia-component-id. It will always target the toggle button. */\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\ninterface MenuToggleState {\n  ouiaStateId: string;\n}\n\nclass MenuToggleBase extends Component<MenuToggleProps, MenuToggleState> {\n  displayName = 'MenuToggleBase';\n  static defaultProps: MenuToggleProps = {\n    className: '',\n    isExpanded: false,\n    isDisabled: false,\n    isFullWidth: false,\n    isFullHeight: false,\n    isPlaceholder: false,\n    size: 'default',\n    ouiaSafe: true\n  };\n\n  state: MenuToggleState = {\n    ouiaStateId: getDefaultOUIAId(MenuToggle.displayName, this.props.variant)\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      icon,\n      badge,\n      isExpanded,\n      isDisabled,\n      isFullHeight,\n      isFullWidth,\n      isPlaceholder,\n      isSettings,\n      splitButtonItems,\n      variant,\n      status,\n      statusIcon,\n      innerRef,\n      onClick,\n      'aria-label': ariaLabel,\n      ouiaId,\n      ouiaSafe,\n      size,\n      ...otherProps\n    } = this.props;\n    const isPlain = variant === 'plain';\n    const isPlainText = variant === 'plainText';\n    const isTypeahead = variant === 'typeahead';\n\n    const ouiaProps = getOUIAProps(MenuToggle.displayName, ouiaId ?? this.state.ouiaStateId, ouiaSafe);\n\n    let _statusIcon = statusIcon;\n    if (!statusIcon) {\n      switch (status) {\n        case MenuToggleStatus.success:\n          _statusIcon = <CheckCircleIcon />;\n          break;\n        case MenuToggleStatus.warning:\n          _statusIcon = <ExclamationTriangleIcon />;\n          break;\n        case MenuToggleStatus.danger:\n          _statusIcon = <ExclamationCircleIcon />;\n          break;\n      }\n    }\n\n    const toggleControls = (\n      <span className={css(styles.menuToggleControls)}>\n        {status !== undefined && <span className={css(styles.menuToggleStatusIcon)}>{_statusIcon}</span>}\n        <span className={css(styles.menuToggleToggleIcon)}>\n          <CaretDownIcon />\n        </span>\n      </span>\n    );\n\n    const content = (\n      <>\n        {(icon || isSettings) && <span className={css(styles.menuToggleIcon)}>{isSettings ? <CogIcon /> : icon}</span>}\n        {isTypeahead ? children : children && <span className={css(styles.menuToggleText)}>{children}</span>}\n        {isValidElement(badge) && <span className={css(styles.menuToggleCount)}>{badge}</span>}\n        {isTypeahead ? (\n          <button\n            type=\"button\"\n            className={css(styles.menuToggleButton)}\n            aria-expanded={isExpanded}\n            onClick={onClick}\n            aria-label={ariaLabel || 'Menu toggle'}\n            tabIndex={-1}\n            {...ouiaProps}\n          >\n            {toggleControls}\n          </button>\n        ) : (\n          !isPlain && toggleControls\n        )}\n      </>\n    );\n\n    const commonStyles = css(\n      styles.menuToggle,\n      isExpanded && styles.modifiers.expanded,\n      variant === 'primary' && styles.modifiers.primary,\n      variant === 'secondary' && styles.modifiers.secondary,\n      status && styles.modifiers[status],\n      (isPlain || isPlainText) && styles.modifiers.plain,\n      isPlainText && 'pf-m-text',\n      isFullHeight && styles.modifiers.fullHeight,\n      isFullWidth && styles.modifiers.fullWidth,\n      isDisabled && styles.modifiers.disabled,\n      isPlaceholder && styles.modifiers.placeholder,\n      isSettings && styles.modifiers.settings,\n      size === MenuToggleSize.sm && styles.modifiers.small,\n      className\n    );\n\n    const componentProps = {\n      children: content,\n      ...(isDisabled && { disabled: true }),\n      ...otherProps\n    };\n\n    if (isTypeahead) {\n      return (\n        <div\n          ref={innerRef as React.Ref<HTMLDivElement>}\n          className={css(commonStyles, styles.modifiers.typeahead)}\n          {...componentProps}\n        />\n      );\n    }\n\n    if (splitButtonItems) {\n      return (\n        <div ref={innerRef as React.Ref<HTMLDivElement>} className={css(commonStyles, styles.modifiers.splitButton)}>\n          {splitButtonItems}\n          <button\n            className={css(styles.menuToggleButton, children && styles.modifiers.text)}\n            type=\"button\"\n            aria-expanded={isExpanded}\n            aria-label={ariaLabel}\n            disabled={isDisabled}\n            onClick={onClick}\n            {...otherProps}\n            {...ouiaProps}\n          >\n            {children && <span className={css(styles.menuToggleText)}>{children}</span>}\n            {toggleControls}\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <button\n        className={css(commonStyles)}\n        type=\"button\"\n        aria-label={ariaLabel}\n        aria-expanded={isExpanded}\n        ref={innerRef as React.Ref<HTMLButtonElement>}\n        disabled={isDisabled}\n        onClick={onClick}\n        {...componentProps}\n        {...ouiaProps}\n      />\n    );\n  }\n}\n\nexport const MenuToggle = forwardRef((props: MenuToggleProps, ref: React.Ref<MenuToggleElement>) => (\n  <MenuToggleBase innerRef={ref} {...props} />\n));\n\nMenuToggle.displayName = 'MenuToggle';\n", "import './menu-toggle.css';\nexport default {\n  \"avatar\": \"pf-v6-c-avatar\",\n  \"button\": \"pf-v6-c-button\",\n  \"check\": \"pf-v6-c-check\",\n  \"checkInput\": \"pf-v6-c-check__input\",\n  \"menuToggle\": \"pf-v6-c-menu-toggle\",\n  \"menuToggleButton\": \"pf-v6-c-menu-toggle__button\",\n  \"menuToggleControls\": \"pf-v6-c-menu-toggle__controls\",\n  \"menuToggleCount\": \"pf-v6-c-menu-toggle__count\",\n  \"menuToggleIcon\": \"pf-v6-c-menu-toggle__icon\",\n  \"menuToggleStatusIcon\": \"pf-v6-c-menu-toggle__status-icon\",\n  \"menuToggleText\": \"pf-v6-c-menu-toggle__text\",\n  \"menuToggleToggleIcon\": \"pf-v6-c-menu-toggle__toggle-icon\",\n  \"modifiers\": {\n    \"primary\": \"pf-m-primary\",\n    \"secondary\": \"pf-m-secondary\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"fullWidth\": \"pf-m-full-width\",\n    \"plain\": \"pf-m-plain\",\n    \"expanded\": \"pf-m-expanded\",\n    \"disabled\": \"pf-m-disabled\",\n    \"small\": \"pf-m-small\",\n    \"success\": \"pf-m-success\",\n    \"warning\": \"pf-m-warning\",\n    \"danger\": \"pf-m-danger\",\n    \"settings\": \"pf-m-settings\",\n    \"placeholder\": \"pf-m-placeholder\",\n    \"splitButton\": \"pf-m-split-button\",\n    \"standalone\": \"pf-m-standalone\",\n    \"typeahead\": \"pf-m-typeahead\",\n    \"text\": \"pf-m-text\",\n    \"avatar\": \"pf-m-avatar\"\n  },\n  \"textInputGroup\": \"pf-v6-c-text-input-group\"\n};", "import { Component } from 'react';\nimport styles from '@patternfly/react-styles/css/components/MenuToggle/menu-toggle';\nimport { css } from '@patternfly/react-styles';\n\nexport interface MenuToggleActionProps {\n  /** Additional classes added to the MenuToggleAction */\n  className?: string;\n  /** Flag to show if the action button is disabled */\n  isDisabled?: boolean;\n  /** A callback for when the action button is clicked */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Element to be rendered inside the <button> */\n  children?: React.ReactNode;\n  /** Id of the action button */\n  id?: string;\n}\n\nclass MenuToggleAction extends Component<MenuToggleActionProps> {\n  static displayName = 'MenuToggleAction';\n  static defaultProps: MenuToggleActionProps = {\n    className: '',\n    isDisabled: false,\n    onClick: () => {}\n  };\n\n  render() {\n    const { id, className, onClick, isDisabled, children, ...props } = this.props;\n\n    return (\n      <button\n        id={id}\n        className={css(styles.menuToggleButton, className)}\n        onClick={onClick}\n        type=\"button\"\n        disabled={isDisabled}\n        {...props}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n\nexport { MenuToggleAction };\n", "import { Component } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface MenuToggleCheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'checked'>,\n    OUIAProps {\n  /** Additional classes added to the MenuToggleCheckbox */\n  className?: string;\n  /** Flag to show if the checkbox selection is valid or invalid */\n  isValid?: boolean;\n  /** Flag to show if the checkbox is disabled */\n  isDisabled?: boolean;\n  /** Flag to show if the checkbox is checked when it is controlled by React state.\n   * To make the checkbox uncontrolled instead use the defaultChecked prop, but do not use both.\n   */\n  isChecked?: boolean | null;\n  /** Flag to set the default checked value of the checkbox when it is uncontrolled by React state.\n   * To make the checkbox controlled instead use the isChecked prop, but do not use both.\n   */\n  defaultChecked?: boolean;\n  /** A callback for when the checkbox selection changes */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Element to be rendered inside the <span> */\n  children?: React.ReactNode;\n  /** Id of the checkbox */\n  id: string;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n}\n\nclass MenuToggleCheckbox extends Component<MenuToggleCheckboxProps, { ouiaStateId: string }> {\n  static displayName = 'MenuToggleCheckbox';\n  static defaultProps: PickOptional<MenuToggleCheckboxProps> = {\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined as any\n  };\n\n  constructor(props: MenuToggleCheckboxProps) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange((event.target as HTMLInputElement).checked, event);\n  };\n\n  calculateChecked = () => {\n    const { isChecked, defaultChecked } = this.props;\n    if (isChecked === null) {\n      // return false here and the indeterminate state will be set to true through the ref\n      return false;\n    } else if (isChecked !== undefined) {\n      return isChecked;\n    }\n    return defaultChecked;\n  };\n\n  render() {\n    const {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      children,\n      ouiaId,\n      ouiaSafe,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      defaultChecked,\n      id,\n      ...props\n    } = this.props;\n    const text = children && (\n      <span className={css(styles.checkLabel, className)} aria-hidden=\"true\" id={id}>\n        {children}\n      </span>\n    );\n    return (\n      <label className={css(styles.check, !children && styles.modifiers.standalone, className)}>\n        <input\n          className={css(styles.checkInput)}\n          {...(this.calculateChecked() !== undefined && { onChange: this.handleChange })}\n          name={id}\n          type=\"checkbox\"\n          ref={(elem) => {\n            elem && (elem.indeterminate = isChecked === null);\n          }}\n          aria-invalid={!isValid}\n          disabled={isDisabled}\n          {...(defaultChecked !== undefined ? { defaultChecked } : { checked: this.calculateChecked() })}\n          {...getOUIAProps(\n            MenuToggleCheckbox.displayName,\n            ouiaId !== undefined ? ouiaId : this.state.ouiaStateId,\n            ouiaSafe\n          )}\n          {...props}\n        />\n        {text}\n      </label>\n    );\n  }\n}\n\nexport { MenuToggleCheckbox };\n", "import { ReactElement, useEffect, useRef, useState } from 'react';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverContext } from './PopoverContext';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverBody } from './PopoverBody';\nimport { PopoverHeader } from './PopoverHeader';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverCloseButton } from './PopoverCloseButton';\nimport { PopoverArrow } from './PopoverArrow';\nimport popoverMaxWidth from '@patternfly/react-tokens/dist/esm/c_popover_MaxWidth';\nimport popoverMinWidth from '@patternfly/react-tokens/dist/esm/c_popover_MinWidth';\nimport { FocusTrap } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getUniqueId } from '../../helpers/util';\n\nexport enum PopoverPosition {\n  auto = 'auto',\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n  topStart = 'top-start',\n  topEnd = 'top-end',\n  bottomStart = 'bottom-start',\n  bottomEnd = 'bottom-end',\n  leftStart = 'left-start',\n  leftEnd = 'left-end',\n  rightStart = 'right-start',\n  rightEnd = 'right-end'\n}\n\n/** The main popover component. The following properties can also be passed into another component\n * that has a property specifically for passing in popover properties.\n */\n\nexport interface PopoverProps {\n  /** Text announced by screen reader when alert severity variant is set to indicate\n   * severity level.\n   */\n  alertSeverityScreenReaderText?: string;\n  /** Severity variants for an alert popover. This modifies the color of the header to\n   * match the severity.\n   */\n  alertSeverityVariant?: 'custom' | 'info' | 'warning' | 'success' | 'danger';\n  /** The duration of the CSS fade transition animation. */\n  animationDuration?: number;\n  /** The element to append the popover to. Defaults to \"inline\". */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement) | 'inline';\n  /** Accessible label for the popover, required when header is not present. */\n  'aria-label'?: string;\n  /**\n   * Body content of the popover. If you want to close the popover after an action within the\n   * body content, you can use the isVisible prop for manual control, or you can provide a\n   * function which will receive a callback as an argument to hide the popover, i.e.\n   * bodyContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  bodyContent: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /**\n   * The trigger reference element to which the popover is relatively placed to. If you cannot wrap\n   * the element with the Popover, you can use the triggerRef prop instead.\n   * Usage: <Popover><Button>Reference</Button></Popover>\n   */\n  children?: ReactElement<any>;\n  /**\n   * The trigger reference element to which the popover is relatively placed to. If you can wrap the\n   * element with the popover, you can use the children prop instead, or both props together.\n   * When passed along with the trigger prop, the div element that wraps the trigger will be removed.\n   * Usage: <Popover triggerRef={() => document.getElementById('reference-element')} />\n   */\n  triggerRef?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** Additional classes added to the popover. */\n  className?: string;\n  /** Accessible label for the close button. */\n  closeBtnAriaLabel?: string;\n  /** Distance of the popover to its target. Defaults to 25. */\n  distance?: number;\n  /** The element to focus when the popover becomes visible. By default the first\n   * focusable element will receive focus.\n   */\n  elementToFocus?: HTMLElement | SVGElement | string;\n  /**\n   * If true, tries to keep the popover in view by flipping it if necessary.\n   * If the position is set to 'auto', this prop is ignored.\n   */\n  enableFlip?: boolean;\n  /**\n   * The desired position to flip the popover to if the initial position is not possible.\n   * By setting this prop to 'flip' it attempts to flip the popover to the opposite side if\n   * there is no space.\n   * You can also pass an array of positions that determines the flip order. It should contain\n   * the initial position followed by alternative positions if that position is unavailable.\n   * Example: Initial position is 'top'. Button with popover is in the top right corner.\n   * 'flipBehavior' is set to ['top', 'right', 'left']. Since there is no space to the top, it\n   * checks if right is available. There's also no space to the right, so it finally shows the\n   * popover on the left.\n   */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n  /**\n   * Footer content of the popover. If you want to close the popover after an action within the\n   * footer content, you can use the isVisible prop for manual control, or you can provide a\n   * function which will receive a callback as an argument to hide the popover, i.e.\n   * footerContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  footerContent?: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /** Removes fixed-width and allows width to be defined by contents. */\n  hasAutoWidth?: boolean;\n  /** Allows content to touch edges of popover container. */\n  hasNoPadding?: boolean;\n  /** Sets the heading level to use for the popover header. Defaults to h6. */\n  headerComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /**\n   * Simple header content to be placed within a title. If you want to close the popover after\n   * an action within the header content, you can use the isVisible prop for manual control,\n   * or you can provide a function which will receive a callback as an argument to hide the\n   * popover, i.e. headerContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  headerContent?: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /** Icon to be displayed in the popover header. **/\n  headerIcon?: React.ReactNode;\n  /** Hides the popover when a click occurs outside (only works if isVisible is not controlled\n   * by the user).\n   */\n  hideOnOutsideClick?: boolean;\n  /** Id used as part of the various popover elements (popover-${id}-header/body/footer). */\n  id?: string;\n  /**\n   * True to show the popover programmatically. Used in conjunction with the shouldClose prop.\n   * By default, the popover child element handles click events automatically. If you want to\n   * control this programmatically, the popover will not auto-close if the close button is\n   * clicked, the escape key is used, or if a click occurs outside the popover. Instead, the\n   * consumer is responsible for closing the popover themselves by adding a callback listener\n   * for the shouldClose prop.\n   */\n  isVisible?: boolean;\n  /** Maximum width of the popover (default 18.75rem). */\n  maxWidth?: string;\n  /** Minimum width of the popover (default 6.25rem). */\n  minWidth?: string;\n  /**\n   * Lifecycle function invoked when the popover has fully transitioned out.\n   */\n  onHidden?: () => void;\n  /**\n   * Lifecycle function invoked when the popover begins to transition out.\n   */\n  onHide?: (event: MouseEvent | KeyboardEvent) => void;\n  /**\n   * Lifecycle function invoked when the popover has been mounted to the DOM.\n   */\n  onMount?: () => void;\n  /**\n   * Lifecycle function invoked when the popover begins to transition in.\n   */\n  onShow?: (event: MouseEvent | KeyboardEvent) => void;\n  /**\n   * Lifecycle function invoked when the popover has fully transitioned in.\n   */\n  onShown?: () => void;\n  /**\n   * Popover position. Note: With the enableFlip property set to true, it will change the\n   * position if there is not enough space for the starting position. The behavior of where it\n   * flips to can be controlled through the flipBehavior property.\n   */\n  position?:\n    | PopoverPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the\n   * popover close button is clicked, the enter key was used on it, or the escape key is used.\n   */\n  shouldClose?: (event: MouseEvent | KeyboardEvent, hideFunction?: () => void) => void;\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the\n   * enter key is used on the focused trigger.\n   */\n  shouldOpen?: (event: MouseEvent | KeyboardEvent, showFunction?: () => void) => void;\n  /** Flag indicating whether the close button should be shown. */\n  showClose?: boolean;\n  /** Sets an interaction to open popover, defaults to \"click\" */\n  triggerAction?: 'click' | 'hover';\n  /** Whether to trap focus in the popover. */\n  withFocusTrap?: boolean;\n  /** The z-index of the popover. */\n  zIndex?: number;\n}\n\nconst alertStyle = {\n  custom: styles.modifiers.custom,\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\n\nexport const Popover: React.FunctionComponent<PopoverProps> = ({\n  children,\n  position = 'top',\n  enableFlip = true,\n  className = '',\n  isVisible = null as boolean,\n  shouldClose = (): void => null,\n  shouldOpen = (): void => null,\n  'aria-label': ariaLabel = '',\n  bodyContent,\n  headerContent = null,\n  headerComponent = 'h6',\n  headerIcon = null,\n  alertSeverityVariant,\n  alertSeverityScreenReaderText,\n  footerContent = null,\n  appendTo = () => document.body,\n  hideOnOutsideClick = true,\n  onHide = (): void => null,\n  onHidden = (): void => null,\n  onShow = (): void => null,\n  onShown = (): void => null,\n  onMount = (): void => null,\n  zIndex = 9999,\n  triggerAction = 'click',\n  minWidth = popoverMinWidth && popoverMinWidth.value,\n  maxWidth = popoverMaxWidth && popoverMaxWidth.value,\n  closeBtnAriaLabel = 'Close',\n  showClose = true,\n  distance = 25,\n  flipBehavior = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'top-start',\n    'top-end',\n    'bottom-start',\n    'bottom-end',\n    'left-start',\n    'left-end',\n    'right-start',\n    'right-end'\n  ],\n  animationDuration = 300,\n  id,\n  withFocusTrap: propWithFocusTrap,\n  triggerRef,\n  hasNoPadding = false,\n  hasAutoWidth = false,\n  elementToFocus,\n  ...rest\n}: PopoverProps) => {\n  // could make this a prop in the future (true | false | 'toggle')\n  // const hideOnClick = true;\n  const uniqueId = id || getUniqueId();\n  const triggerManually = isVisible !== null;\n  const [visible, setVisible] = useState(false);\n  const [focusTrapActive, setFocusTrapActive] = useState(Boolean(propWithFocusTrap));\n  const popoverRef = useRef(null);\n\n  useEffect(() => {\n    onMount();\n  }, []);\n  useEffect(() => {\n    if (triggerManually) {\n      if (isVisible) {\n        show(undefined, true);\n      } else {\n        hide();\n      }\n    }\n  }, [isVisible, triggerManually]);\n  const show = (event?: MouseEvent | KeyboardEvent, withFocusTrap?: boolean) => {\n    event && onShow(event);\n    setVisible(true);\n    propWithFocusTrap !== false && withFocusTrap && setFocusTrapActive(true);\n  };\n\n  const hide = (event?: MouseEvent | KeyboardEvent) => {\n    event && onHide(event);\n    setVisible(false);\n  };\n\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMinWidth = minWidth !== popoverMinWidth.value;\n  const hasCustomMaxWidth = maxWidth !== popoverMaxWidth.value;\n  const onDocumentKeyDown = (event: KeyboardEvent) => {\n    if (event.key === KeyTypes.Escape && visible) {\n      if (triggerManually) {\n        shouldClose(event, hide);\n      } else {\n        hide(event);\n      }\n    }\n  };\n  const onDocumentClick = (event: MouseEvent, triggerElement: HTMLElement, popperElement: HTMLElement) => {\n    if (hideOnOutsideClick && visible) {\n      const isFromChild = popperElement && popperElement.contains(event.target as Node);\n      const isFromTrigger = triggerElement && triggerElement.contains(event.target as Node);\n      if (isFromChild || isFromTrigger) {\n        // if clicked within the popper or on the trigger, ignore this event\n        return;\n      }\n      if (triggerManually) {\n        shouldClose(event, hide);\n      } else {\n        hide(event);\n      }\n    }\n  };\n  const onTriggerClick = (event: MouseEvent) => {\n    if (triggerManually) {\n      if (visible) {\n        shouldClose(event, hide);\n      } else {\n        shouldOpen(event, show);\n      }\n    } else {\n      if (visible) {\n        hide(event);\n      } else {\n        show(event, true);\n      }\n    }\n  };\n\n  const onContentMouseDown = () => {\n    if (focusTrapActive) {\n      setFocusTrapActive(false);\n    }\n  };\n\n  const onMouseEnter = (event: MouseEvent) => {\n    if (triggerManually) {\n      shouldOpen(event as MouseEvent, show);\n    } else {\n      show(event as MouseEvent, false);\n    }\n  };\n\n  const onMouseLeave = (event: MouseEvent) => {\n    if (triggerManually) {\n      shouldClose(event as MouseEvent, hide);\n    } else {\n      hide(event);\n    }\n  };\n\n  const onFocus = (event: FocusEvent) => {\n    if (triggerManually) {\n      shouldOpen(event as MouseEvent | KeyboardEvent, show);\n    } else {\n      show(event as MouseEvent | KeyboardEvent, false);\n    }\n  };\n\n  const onBlur = (event: FocusEvent) => {\n    if (triggerManually) {\n      shouldClose(event as MouseEvent | KeyboardEvent, hide);\n    } else {\n      hide(event as MouseEvent | KeyboardEvent);\n    }\n  };\n\n  const closePopover = (event: MouseEvent) => {\n    event.stopPropagation();\n    if (triggerManually) {\n      shouldClose(event, hide);\n    } else {\n      hide(event);\n    }\n  };\n\n  const content = (\n    <FocusTrap\n      ref={popoverRef}\n      active={focusTrapActive}\n      focusTrapOptions={{\n        returnFocusOnDeactivate: propWithFocusTrap !== false,\n        clickOutsideDeactivates: true,\n        // FocusTrap's initialFocus can accept false as a value to prevent initial focus.\n        // We want to prevent this in case false is ever passed in.\n        initialFocus: elementToFocus || undefined,\n        checkCanFocusTrap: (containers) =>\n          new Promise((resolve) => {\n            const interval = setInterval(() => {\n              if (containers.every((container) => getComputedStyle(container).visibility !== 'hidden')) {\n                clearInterval(interval);\n                resolve();\n              }\n            }, 10);\n\n            // Clear interval if promise is never resolved (component unmount)\n            const timeout = setTimeout(() => {\n              clearInterval(interval);\n              resolve(); // Resolve to prevent hanging promise\n            }, 5000); // 5 second timeout as safety net\n\n            // Store cleanup function for potential external cleanup\n            (resolve as any)._cleanup = () => {\n              clearInterval(interval);\n              clearTimeout(timeout);\n            };\n          }),\n        tabbableOptions: { displayCheck: 'none' },\n\n        fallbackFocus: () => {\n          // If the popover's trigger is focused but scrolled out of view,\n          // FocusTrap will throw an error when the Enter button is used on the trigger.\n          // That is because the Popover is hidden when its trigger is out of view.\n          // Provide a fallback in that case.\n          let node = null;\n          if (document && document.activeElement) {\n            node = document.activeElement as HTMLElement;\n          }\n          return node;\n        }\n      }}\n      preventScrollOnDeactivate\n      className={css(\n        styles.popover,\n        alertSeverityVariant && alertStyle[alertSeverityVariant],\n        hasNoPadding && styles.modifiers.noPadding,\n        hasAutoWidth && styles.modifiers.widthAuto,\n        className\n      )}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={headerContent ? undefined : ariaLabel}\n      aria-labelledby={headerContent ? `popover-${uniqueId}-header` : undefined}\n      aria-describedby={`popover-${uniqueId}-body`}\n      onMouseDown={onContentMouseDown}\n      style={{\n        minWidth: hasCustomMinWidth ? minWidth : null,\n        maxWidth: hasCustomMaxWidth ? maxWidth : null\n      }}\n      {...rest}\n    >\n      <PopoverArrow />\n      <PopoverContent>\n        {showClose && triggerAction === 'click' && (\n          <PopoverCloseButton onClose={closePopover} aria-label={closeBtnAriaLabel} />\n        )}\n        {headerContent && (\n          <PopoverHeader\n            id={`popover-${uniqueId}-header`}\n            icon={headerIcon}\n            alertSeverityVariant={alertSeverityVariant}\n            alertSeverityScreenReaderText={alertSeverityScreenReaderText || `${alertSeverityVariant} alert:`}\n            titleHeadingLevel={headerComponent}\n          >\n            {typeof headerContent === 'function' ? headerContent(hide) : headerContent}\n          </PopoverHeader>\n        )}\n        <PopoverBody id={`popover-${uniqueId}-body`}>\n          {typeof bodyContent === 'function' ? bodyContent(hide) : bodyContent}\n        </PopoverBody>\n        {footerContent && (\n          <PopoverFooter id={`popover-${uniqueId}-footer`}>\n            {typeof footerContent === 'function' ? footerContent(hide) : footerContent}\n          </PopoverFooter>\n        )}\n      </PopoverContent>\n    </FocusTrap>\n  );\n\n  return (\n    <PopoverContext.Provider value={{ headerComponent }}>\n      <Popper\n        trigger={children}\n        triggerRef={triggerRef}\n        popper={content}\n        popperRef={popoverRef}\n        minWidth={minWidth}\n        appendTo={appendTo}\n        isVisible={visible}\n        onMouseEnter={triggerAction === 'hover' && onMouseEnter}\n        onMouseLeave={triggerAction === 'hover' && onMouseLeave}\n        onPopperMouseEnter={triggerAction === 'hover' && onMouseEnter}\n        onPopperMouseLeave={triggerAction === 'hover' && onMouseLeave}\n        onFocus={triggerAction === 'hover' && onFocus}\n        onBlur={triggerAction === 'hover' && onBlur}\n        positionModifiers={positionModifiers}\n        distance={distance}\n        placement={position}\n        onTriggerClick={triggerAction === 'click' && onTriggerClick}\n        onDocumentClick={onDocumentClick}\n        onDocumentKeyDown={onDocumentKeyDown}\n        enableFlip={enableFlip}\n        zIndex={zIndex}\n        flipBehavior={flipBehavior}\n        animationDuration={animationDuration}\n        onHidden={onHidden}\n        onShown={onShown}\n        onHide={() => setFocusTrapActive(false)}\n      />\n    </PopoverContext.Provider>\n  );\n};\nPopover.displayName = 'Popover';\n", "import './popover.css';\nexport default {\n  \"modifiers\": {\n    \"noPadding\": \"pf-m-no-padding\",\n    \"widthAuto\": \"pf-m-width-auto\",\n    \"top\": \"pf-m-top\",\n    \"topLeft\": \"pf-m-top-left\",\n    \"topRight\": \"pf-m-top-right\",\n    \"bottom\": \"pf-m-bottom\",\n    \"bottomLeft\": \"pf-m-bottom-left\",\n    \"bottomRight\": \"pf-m-bottom-right\",\n    \"left\": \"pf-m-left\",\n    \"leftTop\": \"pf-m-left-top\",\n    \"leftBottom\": \"pf-m-left-bottom\",\n    \"right\": \"pf-m-right\",\n    \"rightTop\": \"pf-m-right-top\",\n    \"rightBottom\": \"pf-m-right-bottom\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"custom\": \"pf-m-custom\",\n    \"info\": \"pf-m-info\"\n  },\n  \"popover\": \"pf-v6-c-popover\",\n  \"popoverArrow\": \"pf-v6-c-popover__arrow\",\n  \"popoverBody\": \"pf-v6-c-popover__body\",\n  \"popoverClose\": \"pf-v6-c-popover__close\",\n  \"popoverContent\": \"pf-v6-c-popover__content\",\n  \"popoverFooter\": \"pf-v6-c-popover__footer\",\n  \"popoverHeader\": \"pf-v6-c-popover__header\",\n  \"popoverTitle\": \"pf-v6-c-popover__title\",\n  \"popoverTitleIcon\": \"pf-v6-c-popover__title-icon\",\n  \"popoverTitleText\": \"pf-v6-c-popover__title-text\"\n};", "import { createContext } from 'react';\ninterface PopoverContextProps {\n  headerComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nexport const PopoverContext = createContext<Partial<PopoverContextProps>>({});\n", "import styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\n\nexport const PopoverContent: React.FunctionComponent<PopoverContentProps> = ({\n  className = null,\n  children,\n  ...props\n}: PopoverContentProps) => (\n  <div className={css(styles.popoverContent, className)} {...props}>\n    {children}\n  </div>\n);\nPopoverContent.displayName = 'PopoverContent';\n\nexport interface PopoverContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** PopoverContent additional class */\n  className?: string;\n  /** PopoverContent content */\n  children: React.ReactNode;\n}\n", "import styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\n\nexport interface PopoverBodyProps extends React.HTMLProps<HTMLDivElement> {\n  /** Popover body id */\n  id: string;\n  /** Popover body content */\n  children: React.ReactNode;\n  /** Classes to be applied to the popover body. */\n  className?: string;\n}\n\nexport const PopoverBody: React.FunctionComponent<PopoverBodyProps> = ({\n  children,\n  id,\n  className,\n  ...props\n}: PopoverBodyProps) => (\n  <div className={css(styles.popoverBody, className)} id={id} {...props}>\n    {children}\n  </div>\n);\nPopoverBody.displayName = 'PopoverBody';\n", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\n\nexport interface PopoverHeaderIconProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Content of the header icon */\n  children: React.ReactNode;\n  /** Class to be applied to the header icon */\n  className?: string;\n}\n\nexport const PopoverHeaderIcon: React.FunctionComponent<PopoverHeaderIconProps> = ({\n  children,\n  className,\n  ...props\n}: PopoverHeaderIconProps) => (\n  <span className={css(styles.popoverTitleIcon, className)} {...props}>\n    {children}\n  </span>\n);\nPopoverHeaderIcon.displayName = 'PopoverHeaderIcon';\n", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\n\nexport interface PopoverHeaderTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content of the header text */\n  children: React.ReactNode;\n  /** Class to be applied to the header text */\n  className?: string;\n  /** Heading level of the header title */\n  headingLevel: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nexport const PopoverHeaderText: React.FunctionComponent<PopoverHeaderTextProps> = ({\n  children,\n  className,\n  headingLevel,\n  ...props\n}: PopoverHeaderTextProps) => {\n  const HeadingLevel = headingLevel;\n\n  return (\n    <HeadingLevel className={css(styles.popoverTitleText, className)} {...props}>\n      {children}\n    </HeadingLevel>\n  );\n};\nPopoverHeaderText.displayName = 'PopoverHeaderText';\n", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\n\nexport interface PopoverHeaderProps extends Omit<React.HTMLProps<HTMLHeadingElement>, 'size'> {\n  /** Content of the popover header. */\n  children: React.ReactNode;\n  /** Indicates the header contains an icon. */\n  icon?: React.ReactNode;\n  /** Class to be applied to the header. */\n  className?: string;\n  /** Heading level of the header title */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Severity variants for an alert popover. This modifies the color of the header to match the severity. */\n  alertSeverityVariant?: 'custom' | 'info' | 'warning' | 'success' | 'danger';\n  /** Id of the header */\n  id?: string;\n  /** Text announced by screen reader when alert severity variant is set to indicate severity level */\n  alertSeverityScreenReaderText?: string;\n}\n\nexport const PopoverHeader: React.FunctionComponent<PopoverHeaderProps> = ({\n  children,\n  icon,\n  className,\n  titleHeadingLevel = 'h6',\n  alertSeverityVariant,\n  id,\n  alertSeverityScreenReaderText,\n  ...props\n}: PopoverHeaderProps) => (\n  <header className={css(styles.popoverHeader, className)} {...props}>\n    <div className={css(styles.popoverTitle)} id={id}>\n      {icon && <PopoverHeaderIcon>{icon}</PopoverHeaderIcon>}\n      <PopoverHeaderText headingLevel={titleHeadingLevel}>\n        {alertSeverityVariant && alertSeverityScreenReaderText && (\n          <span className=\"pf-v6-screen-reader\">{alertSeverityScreenReaderText}</span>\n        )}\n        {children}\n      </PopoverHeaderText>\n    </div>\n  </header>\n);\nPopoverHeader.displayName = 'PopoverHeader';\n", "import styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\n\nexport interface PopoverFooterProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the Popover footer */\n  className?: string;\n  /** Footer node */\n  children: React.ReactNode;\n}\n\nexport const PopoverFooter: React.FunctionComponent<PopoverFooterProps> = ({\n  children,\n  className = '',\n  ...props\n}: PopoverFooterProps) => (\n  <footer className={css(styles.popoverFooter, className)} {...props}>\n    {children}\n  </footer>\n);\nPopoverFooter.displayName = 'PopoverFooter';\n", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nexport const PopoverCloseButton: React.FunctionComponent<PopoverCloseButtonProps> = ({\n  onClose = () => undefined as void,\n  ...props\n}: PopoverCloseButtonProps) => (\n  <div className={css(styles.popoverClose)}>\n    <Button\n      onClick={onClose}\n      variant=\"plain\"\n      aria-label\n      {...props}\n      style={{ pointerEvents: 'auto' }}\n      icon={<TimesIcon />}\n    />\n  </div>\n);\n\nPopoverCloseButton.displayName = 'PopoverCloseButton';\n\nexport interface PopoverCloseButtonProps {\n  /** PopoverCloseButton onClose function */\n  onClose?: (event: any) => void;\n  /** Aria label for the Close button */\n  'aria-label': string;\n}\n", "import styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\n\nexport const PopoverArrow: React.FunctionComponent<PopoverArrowProps> = ({\n  className = '',\n  ...props\n}: PopoverArrowProps) => <div className={css(styles.popoverArrow, className)} {...props} />;\nPopoverArrow.displayName = 'PopoverArrow';\n\nexport interface PopoverArrowProps extends React.HTMLProps<HTMLDivElement> {\n  /** Popover arrow additional className */\n  className?: string;\n}\n", "export const c_popover_MaxWidth = {\n  \"name\": \"--pf-v6-c-popover--MaxWidth\",\n  \"value\": \"none\",\n  \"var\": \"var(--pf-v6-c-popover--MaxWidth)\"\n};\nexport default c_popover_MaxWidth;", "export const c_popover_MinWidth = {\n  \"name\": \"--pf-v6-c-popover--MinWidth\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-v6-c-popover--MinWidth)\"\n};\nexport default c_popover_MinWidth;", "import './divider.css';\nexport default {\n  \"divider\": \"pf-v6-c-divider\",\n  \"modifiers\": {\n    \"hidden\": \"pf-m-hidden\",\n    \"hiddenOnSm\": \"pf-m-hidden-on-sm\",\n    \"visibleOnSm\": \"pf-m-visible-on-sm\",\n    \"hiddenOnMd\": \"pf-m-hidden-on-md\",\n    \"visibleOnMd\": \"pf-m-visible-on-md\",\n    \"hiddenOnLg\": \"pf-m-hidden-on-lg\",\n    \"visibleOnLg\": \"pf-m-visible-on-lg\",\n    \"hiddenOnXl\": \"pf-m-hidden-on-xl\",\n    \"visibleOnXl\": \"pf-m-visible-on-xl\",\n    \"hiddenOn_2xl\": \"pf-m-hidden-on-2xl\",\n    \"visibleOn_2xl\": \"pf-m-visible-on-2xl\",\n    \"horizontal\": \"pf-m-horizontal\",\n    \"vertical\": \"pf-m-vertical\",\n    \"insetNone\": \"pf-m-inset-none\",\n    \"insetXs\": \"pf-m-inset-xs\",\n    \"insetSm\": \"pf-m-inset-sm\",\n    \"insetMd\": \"pf-m-inset-md\",\n    \"insetLg\": \"pf-m-inset-lg\",\n    \"insetXl\": \"pf-m-inset-xl\",\n    \"inset_2xl\": \"pf-m-inset-2xl\",\n    \"inset_3xl\": \"pf-m-inset-3xl\",\n    \"horizontalOnSm\": \"pf-m-horizontal-on-sm\",\n    \"verticalOnSm\": \"pf-m-vertical-on-sm\",\n    \"insetNoneOnSm\": \"pf-m-inset-none-on-sm\",\n    \"insetXsOnSm\": \"pf-m-inset-xs-on-sm\",\n    \"insetSmOnSm\": \"pf-m-inset-sm-on-sm\",\n    \"insetMdOnSm\": \"pf-m-inset-md-on-sm\",\n    \"insetLgOnSm\": \"pf-m-inset-lg-on-sm\",\n    \"insetXlOnSm\": \"pf-m-inset-xl-on-sm\",\n    \"inset_2xlOnSm\": \"pf-m-inset-2xl-on-sm\",\n    \"inset_3xlOnSm\": \"pf-m-inset-3xl-on-sm\",\n    \"horizontalOnMd\": \"pf-m-horizontal-on-md\",\n    \"verticalOnMd\": \"pf-m-vertical-on-md\",\n    \"insetNoneOnMd\": \"pf-m-inset-none-on-md\",\n    \"insetXsOnMd\": \"pf-m-inset-xs-on-md\",\n    \"insetSmOnMd\": \"pf-m-inset-sm-on-md\",\n    \"insetMdOnMd\": \"pf-m-inset-md-on-md\",\n    \"insetLgOnMd\": \"pf-m-inset-lg-on-md\",\n    \"insetXlOnMd\": \"pf-m-inset-xl-on-md\",\n    \"inset_2xlOnMd\": \"pf-m-inset-2xl-on-md\",\n    \"inset_3xlOnMd\": \"pf-m-inset-3xl-on-md\",\n    \"horizontalOnLg\": \"pf-m-horizontal-on-lg\",\n    \"verticalOnLg\": \"pf-m-vertical-on-lg\",\n    \"insetNoneOnLg\": \"pf-m-inset-none-on-lg\",\n    \"insetXsOnLg\": \"pf-m-inset-xs-on-lg\",\n    \"insetSmOnLg\": \"pf-m-inset-sm-on-lg\",\n    \"insetMdOnLg\": \"pf-m-inset-md-on-lg\",\n    \"insetLgOnLg\": \"pf-m-inset-lg-on-lg\",\n    \"insetXlOnLg\": \"pf-m-inset-xl-on-lg\",\n    \"inset_2xlOnLg\": \"pf-m-inset-2xl-on-lg\",\n    \"inset_3xlOnLg\": \"pf-m-inset-3xl-on-lg\",\n    \"horizontalOnXl\": \"pf-m-horizontal-on-xl\",\n    \"verticalOnXl\": \"pf-m-vertical-on-xl\",\n    \"insetNoneOnXl\": \"pf-m-inset-none-on-xl\",\n    \"insetXsOnXl\": \"pf-m-inset-xs-on-xl\",\n    \"insetSmOnXl\": \"pf-m-inset-sm-on-xl\",\n    \"insetMdOnXl\": \"pf-m-inset-md-on-xl\",\n    \"insetLgOnXl\": \"pf-m-inset-lg-on-xl\",\n    \"insetXlOnXl\": \"pf-m-inset-xl-on-xl\",\n    \"inset_2xlOnXl\": \"pf-m-inset-2xl-on-xl\",\n    \"inset_3xlOnXl\": \"pf-m-inset-3xl-on-xl\",\n    \"horizontalOn_2xl\": \"pf-m-horizontal-on-2xl\",\n    \"verticalOn_2xl\": \"pf-m-vertical-on-2xl\",\n    \"insetNoneOn_2xl\": \"pf-m-inset-none-on-2xl\",\n    \"insetXsOn_2xl\": \"pf-m-inset-xs-on-2xl\",\n    \"insetSmOn_2xl\": \"pf-m-inset-sm-on-2xl\",\n    \"insetMdOn_2xl\": \"pf-m-inset-md-on-2xl\",\n    \"insetLgOn_2xl\": \"pf-m-inset-lg-on-2xl\",\n    \"insetXlOn_2xl\": \"pf-m-inset-xl-on-2xl\",\n    \"inset_2xlOn_2xl\": \"pf-m-inset-2xl-on-2xl\",\n    \"inset_3xlOn_2xl\": \"pf-m-inset-3xl-on-2xl\"\n  }\n};", "import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport enum DividerVariant {\n  hr = 'hr',\n  li = 'li',\n  div = 'div'\n}\n\nexport interface DividerProps extends React.HTMLProps<HTMLElement> {\n  /** Additional classes added to the divider */\n  className?: string;\n  /** The component type to use */\n  component?: 'hr' | 'li' | 'div';\n  /** Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    sm?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    md?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    lg?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    xl?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    '2xl'?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n  };\n  /** Indicates how the divider will display at various breakpoints. Vertical divider must be in a flex layout. */\n  orientation?: {\n    default?: 'vertical' | 'horizontal';\n    sm?: 'vertical' | 'horizontal';\n    md?: 'vertical' | 'horizontal';\n    lg?: 'vertical' | 'horizontal';\n    xl?: 'vertical' | 'horizontal';\n    '2xl'?: 'vertical' | 'horizontal';\n  };\n  /** The ARIA role of the divider when the component property has a value other than \"hr\". */\n  role?: 'separator' | 'presentation';\n}\n\nexport const Divider: React.FunctionComponent<DividerProps> = ({\n  className,\n  component = DividerVariant.hr,\n  inset,\n  orientation,\n  role = 'separator',\n  ...props\n}: DividerProps) => {\n  const Component: any = component;\n\n  return (\n    <Component\n      className={css(\n        styles.divider,\n        formatBreakpointMods(inset, styles),\n        formatBreakpointMods(orientation, styles),\n        className\n      )}\n      {...(component !== 'hr' && { role })}\n      {...props}\n    />\n  );\n};\nDivider.displayName = 'Divider';\n", "import { forwardRef, useEffect, useRef } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Menu, MenuContent, MenuProps } from '../Menu';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { useOUIAProps, OUIAProps, onToggleArrowKeydownDefault } from '../../helpers';\n\nexport interface DropdownPopperProps {\n  /** Vertical direction of the popper. If enableFlip is set to true, this will set the initial direction before the popper flips. */\n  direction?: 'up' | 'down';\n  /** Horizontal position of the popper */\n  position?: 'right' | 'left' | 'center' | 'start' | 'end';\n  /** Custom width of the popper. If the value is \"trigger\", it will set the width to the dropdown toggle's width */\n  width?: string | 'trigger';\n  /** Minimum width of the popper. If the value is \"trigger\", it will set the min width to the dropdown toggle's width */\n  minWidth?: string | 'trigger';\n  /** Maximum width of the popper. If the value is \"trigger\", it will set the max width to the dropdown toggle's width */\n  maxWidth?: string | 'trigger';\n  /** Enable to flip the popper when it reaches the boundary */\n  enableFlip?: boolean;\n  /** The container to append the popper to. Defaults to document.body. */\n  appendTo?: HTMLElement | (() => HTMLElement) | 'inline';\n  /** Flag to prevent the popper from overflowing its container and becoming partially obscured. */\n  preventOverflow?: boolean;\n}\n\nexport interface DropdownToggleProps {\n  /**  Dropdown toggle node. */\n  toggleNode: React.ReactNode;\n  /** Reference to the toggle. */\n  toggleRef?: React.RefObject<HTMLButtonElement | null>;\n}\n\n/**\n * See the Menu documentation for additional props that may be passed.\n */\nexport interface DropdownProps extends MenuProps, OUIAProps {\n  /** Anything which can be rendered in a dropdown. */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown. */\n  className?: string;\n  /** Dropdown toggle. The toggle should either be a renderer function which forwards the given toggle ref, or a direct ReactNode that should be passed along with the toggleRef property. */\n  toggle: DropdownToggleProps | ((toggleRef: React.RefObject<any>) => React.ReactNode);\n  /** Flag to indicate if menu is opened.*/\n  isOpen?: boolean;\n  /** Flag indicating the toggle should be focused after a selection. If this use case is too restrictive, the optional toggleRef property with a node toggle may be used to control focus. */\n  shouldFocusToggleOnSelect?: boolean;\n  /** Function callback called when user selects item. */\n  onSelect?: (event?: React.MouseEvent<Element, MouseEvent>, value?: string | number) => void;\n  /** Callback to allow the dropdown component to change the open state of the menu.\n   * Triggered by clicking outside of the menu, or by pressing any keys specified in onOpenChangeKeys. */\n  onOpenChange?: (isOpen: boolean) => void;\n  /** Keys that trigger onOpenChange, defaults to tab and escape. It is highly recommended to include Escape in the array, while Tab may be omitted if the menu contains non-menu items that are focusable. */\n  onOpenChangeKeys?: string[];\n  /** Callback to override the toggle keydown behavior. By default, when the toggle has focus and the menu is open, pressing the up/down arrow keys will focus a valid non-disabled menu item - the first item for the down arrow key and last item for the up arrow key. */\n  onToggleKeydown?: (event: KeyboardEvent) => void;\n  /** Indicates if the menu should be without the outer box-shadow. */\n  isPlain?: boolean;\n  /** Indicates if the menu should be scrollable. */\n  isScrollable?: boolean;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n  /** z-index of the dropdown menu */\n  zIndex?: number;\n  /** Additional properties to pass to the Popper */\n  popperProps?: DropdownPopperProps;\n  /** Height of the dropdown menu */\n  menuHeight?: string;\n  /** Maximum height of dropdown menu */\n  maxMenuHeight?: string;\n  /** @beta Flag indicating the first menu item should be focused after opening the dropdown. */\n  shouldFocusFirstItemOnOpen?: boolean;\n  /** Flag indicating if scroll on focus of the first menu item should occur. */\n  shouldPreventScrollOnItemFocus?: boolean;\n  /** Time in ms to wait before firing the toggles' focus event. Defaults to 0 */\n  focusTimeoutDelay?: number;\n}\n\nconst DropdownBase: React.FunctionComponent<DropdownProps> = ({\n  children,\n  className,\n  onSelect,\n  isOpen,\n  toggle,\n  shouldFocusToggleOnSelect = false,\n  onOpenChange,\n  onToggleKeydown,\n  isPlain,\n  isScrollable,\n  innerRef,\n  ouiaId,\n  ouiaSafe = true,\n  zIndex = 9999,\n  popperProps,\n  onOpenChangeKeys = ['Escape', 'Tab'],\n  menuHeight,\n  maxMenuHeight,\n  shouldFocusFirstItemOnOpen = false,\n  shouldPreventScrollOnItemFocus = true,\n  focusTimeoutDelay = 0,\n  ...props\n}: DropdownProps) => {\n  const localMenuRef = useRef<HTMLDivElement>(undefined);\n  const localToggleRef = useRef<HTMLButtonElement>(undefined);\n  const ouiaProps = useOUIAProps(Dropdown.displayName, ouiaId, ouiaSafe);\n\n  const menuRef = (innerRef as React.RefObject<HTMLDivElement | null>) || localMenuRef;\n  const toggleRef =\n    typeof toggle === 'function' || (typeof toggle !== 'function' && !toggle.toggleRef)\n      ? localToggleRef\n      : (toggle?.toggleRef as React.RefObject<HTMLButtonElement | null>);\n\n  const prevIsOpen = useRef<boolean>(isOpen);\n  useEffect(() => {\n    // menu was opened, focus on first menu item\n    if (prevIsOpen.current === false && isOpen === true && shouldFocusFirstItemOnOpen) {\n      setTimeout(() => {\n        const firstElement = menuRef?.current?.querySelector(\n          'li button:not(:disabled),li input:not(:disabled),li a:not([aria-disabled=\"true\"])'\n        );\n        firstElement && (firstElement as HTMLElement).focus({ preventScroll: shouldPreventScrollOnItemFocus });\n      }, focusTimeoutDelay);\n    }\n\n    prevIsOpen.current = isOpen;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  useEffect(() => {\n    const handleMenuKeys = (event: KeyboardEvent) => {\n      // Close the menu on tab or escape if onOpenChange is provided\n      if (\n        isOpen &&\n        onOpenChange &&\n        (menuRef.current?.contains(event.target as Node) || toggleRef.current?.contains(event.target as Node))\n      ) {\n        if (onOpenChangeKeys.includes(event.key)) {\n          onOpenChange(false);\n          toggleRef.current?.focus();\n        }\n      }\n\n      if (toggleRef.current?.contains(event.target as Node)) {\n        if (onToggleKeydown) {\n          onToggleKeydown(event);\n        } else if (isOpen) {\n          onToggleArrowKeydownDefault(event, menuRef);\n        }\n      }\n    };\n\n    const handleClick = (event: MouseEvent) => {\n      // If the event is not on the toggle and onOpenChange callback is provided, close the menu\n      if (isOpen && onOpenChange && !toggleRef?.current?.contains(event.target as Node)) {\n        if (isOpen && !menuRef.current?.contains(event.target as Node)) {\n          onOpenChange(false);\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleMenuKeys);\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('keydown', handleMenuKeys);\n      window.removeEventListener('click', handleClick);\n    };\n  }, [\n    isOpen,\n    menuRef,\n    toggleRef,\n    onOpenChange,\n    onOpenChangeKeys,\n    onToggleKeydown,\n    shouldPreventScrollOnItemFocus,\n    shouldFocusFirstItemOnOpen,\n    focusTimeoutDelay\n  ]);\n\n  const scrollable = maxMenuHeight !== undefined || menuHeight !== undefined || isScrollable;\n\n  const menu = (\n    <Menu\n      className={css(className)}\n      ref={menuRef}\n      onSelect={(event, value) => {\n        onSelect && onSelect(event, value);\n        shouldFocusToggleOnSelect && toggleRef.current?.focus();\n      }}\n      isPlain={isPlain}\n      isScrollable={scrollable}\n      {...props}\n      {...ouiaProps}\n    >\n      <MenuContent menuHeight={menuHeight} maxMenuHeight={maxMenuHeight}>\n        {children}\n      </MenuContent>\n    </Menu>\n  );\n  return (\n    <Popper\n      trigger={typeof toggle === 'function' ? toggle(toggleRef) : toggle.toggleNode}\n      triggerRef={toggleRef}\n      popper={menu}\n      popperRef={menuRef}\n      isVisible={isOpen}\n      zIndex={zIndex}\n      {...popperProps}\n    />\n  );\n};\n\nexport const Dropdown = forwardRef((props: DropdownProps, ref: React.Ref<any>) => (\n  <DropdownBase innerRef={ref} {...props} />\n));\nDropdown.displayName = 'Dropdown';\n", "import { css } from '@patternfly/react-styles';\nimport { MenuGroupProps, MenuGroup } from '../Menu';\n\n/**\n * See the MenuGroup section of the Menu documentation for additional props that may be passed.\n */\nexport interface DropdownGroupProps extends Omit<MenuGroupProps, 'ref'> {\n  /** Anything which can be rendered in a dropdown group. */\n  children: React.ReactNode;\n  /** Classes applied to root element of dropdown group */\n  className?: string;\n  /** Label of the dropdown group */\n  label?: React.ReactNode;\n}\n\nexport const DropdownGroup: React.FunctionComponent<DropdownGroupProps> = ({\n  children,\n  className,\n  label,\n  labelHeadingLevel = 'h1',\n  ...props\n}: DropdownGroupProps) => (\n  <MenuGroup className={css(className)} label={label} labelHeadingLevel={labelHeadingLevel} {...props}>\n    {children}\n  </MenuGroup>\n);\nDropdownGroup.displayName = 'DropdownGroup';\n", "import { forwardRef } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { MenuItemProps, MenuItem } from '../Menu';\nimport { TooltipProps } from '../Tooltip';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\n/**\n * See the MenuItem section of the Menu documentation for additional props that may be passed.\n */\nexport interface DropdownItemProps extends Omit<MenuItemProps, 'ref'>, OUIAProps {\n  /** Anything which can be rendered in a dropdown item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLAnchorElement | HTMLButtonElement>;\n  /** Description of the dropdown item */\n  description?: React.ReactNode;\n  /** Render item as disabled option */\n  isDisabled?: boolean;\n  /** Render item as aria-disabled option */\n  isAriaDisabled?: boolean;\n  /** Identifies the component in the dropdown onSelect callback */\n  value?: any;\n  /** Callback for item click */\n  onClick?: (event?: any) => void;\n  /** Value to overwrite the randomly generated data-ouia-component-id.*/\n  ouiaId?: number | string;\n  /** Set the value of data-ouia-safe. Only set to true when the component is in a static state, i.e. no animations are occurring. At all other times, this value must be false. */\n  ouiaSafe?: boolean;\n  /** Props for adding a tooltip to a menu item */\n  tooltipProps?: TooltipProps;\n}\n\nconst DropdownItemBase: React.FunctionComponent<DropdownItemProps> = ({\n  children,\n  className,\n  description,\n  isDisabled,\n  isAriaDisabled,\n  value,\n  onClick,\n  ouiaId,\n  ouiaSafe,\n  innerRef,\n  tooltipProps,\n  ...props\n}: DropdownItemProps) => {\n  const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n  return (\n    <MenuItem\n      className={css(className)}\n      description={description}\n      isDisabled={isDisabled}\n      isAriaDisabled={isAriaDisabled}\n      itemId={value}\n      onClick={onClick}\n      tooltipProps={tooltipProps}\n      ref={innerRef}\n      {...ouiaProps}\n      {...props}\n    >\n      {children}\n    </MenuItem>\n  );\n};\n\nexport const DropdownItem = forwardRef(\n  (props: DropdownItemProps, ref: React.Ref<HTMLAnchorElement | HTMLButtonElement>) => (\n    <DropdownItemBase {...props} innerRef={ref} />\n  )\n);\n\nDropdownItem.displayName = 'DropdownItem';\n", "import { css } from '@patternfly/react-styles';\nimport { MenuListProps, MenuList } from '../Menu';\n\nexport interface DropdownListProps extends MenuListProps {\n  /** Anything which can be rendered in a dropdown list */\n  children: React.ReactNode;\n  /** Classes applied to root element of dropdown list */\n  className?: string;\n}\n\nexport const DropdownList: React.FunctionComponent<MenuListProps> = ({\n  children,\n  className,\n  ...props\n}: DropdownListProps) => (\n  <MenuList className={css(className)} {...props}>\n    {children}\n  </MenuList>\n);\nDropdownList.displayName = 'DropdownList';\n", "import './form.css';\nexport default {\n  \"button\": \"pf-v6-c-button\",\n  \"dirRtl\": \"pf-v6-m-dir-rtl\",\n  \"form\": \"pf-v6-c-form\",\n  \"formActions\": \"pf-v6-c-form__actions\",\n  \"formFieldGroup\": \"pf-v6-c-form__field-group\",\n  \"formFieldGroupBody\": \"pf-v6-c-form__field-group-body\",\n  \"formFieldGroupHeader\": \"pf-v6-c-form__field-group-header\",\n  \"formFieldGroupHeaderActions\": \"pf-v6-c-form__field-group-header-actions\",\n  \"formFieldGroupHeaderDescription\": \"pf-v6-c-form__field-group-header-description\",\n  \"formFieldGroupHeaderMain\": \"pf-v6-c-form__field-group-header-main\",\n  \"formFieldGroupHeaderTitle\": \"pf-v6-c-form__field-group-header-title\",\n  \"formFieldGroupHeaderTitleText\": \"pf-v6-c-form__field-group-header-title-text\",\n  \"formFieldGroupToggle\": \"pf-v6-c-form__field-group-toggle\",\n  \"formFieldGroupToggleButton\": \"pf-v6-c-form__field-group-toggle-button\",\n  \"formFieldGroupToggleIcon\": \"pf-v6-c-form__field-group-toggle-icon\",\n  \"formFieldset\": \"pf-v6-c-form__fieldset\",\n  \"formGroup\": \"pf-v6-c-form__group\",\n  \"formGroupControl\": \"pf-v6-c-form__group-control\",\n  \"formGroupLabel\": \"pf-v6-c-form__group-label\",\n  \"formGroupLabelHelp\": \"pf-v6-c-form__group-label-help\",\n  \"formGroupLabelInfo\": \"pf-v6-c-form__group-label-info\",\n  \"formGroupLabelMain\": \"pf-v6-c-form__group-label-main\",\n  \"formHelperText\": \"pf-v6-c-form__helper-text\",\n  \"formLabel\": \"pf-v6-c-form__label\",\n  \"formLabelRequired\": \"pf-v6-c-form__label-required\",\n  \"formLabelText\": \"pf-v6-c-form__label-text\",\n  \"formSection\": \"pf-v6-c-form__section\",\n  \"formSectionTitle\": \"pf-v6-c-form__section-title\",\n  \"modifiers\": {\n    \"horizontal\": \"pf-m-horizontal\",\n    \"alignRight\": \"pf-m-align-right\",\n    \"noPaddingTop\": \"pf-m-no-padding-top\",\n    \"info\": \"pf-m-info\",\n    \"horizontalOnXs\": \"pf-m-horizontal-on-xs\",\n    \"horizontalOnSm\": \"pf-m-horizontal-on-sm\",\n    \"horizontalOnMd\": \"pf-m-horizontal-on-md\",\n    \"horizontalOnLg\": \"pf-m-horizontal-on-lg\",\n    \"horizontalOnXl\": \"pf-m-horizontal-on-xl\",\n    \"horizontalOn_2xl\": \"pf-m-horizontal-on-2xl\",\n    \"limitWidth\": \"pf-m-limit-width\",\n    \"action\": \"pf-m-action\",\n    \"disabled\": \"pf-m-disabled\",\n    \"inline\": \"pf-m-inline\",\n    \"stack\": \"pf-m-stack\",\n    \"inactive\": \"pf-m-inactive\",\n    \"hidden\": \"pf-m-hidden\",\n    \"expanded\": \"pf-m-expanded\",\n    \"expandable\": \"pf-m-expandable\"\n  }\n};"],
  "mappings": "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",
  "names": ["ValidatedOptions", "candidateSelectors", "candidateSelector", "join", "NoElement", "Element", "matches", "prototype", "msMatchesSelector", "webkitMatchesSelector", "getRootNode", "element", "_element$getRootNode", "call", "ownerDocument", "isInert", "node", "lookUp", "_node$getAttribute", "inertAtt", "getAttribute", "inert", "result", "parentNode", "isContentEditable", "_node$getAttribute2", "attValue", "getCandidates", "el", "includeContainer", "filter", "candidates", "Array", "slice", "apply", "querySelectorAll", "unshift", "getCandidatesIteratively", "elements", "options", "elementsToCheck", "from", "length", "shift", "tagName", "assigned", "assignedElements", "content", "children", "nestedCandidates", "flatten", "push", "scopeParent", "validCandidate", "includes", "shadowRoot", "getShadowRoot", "validShadowRoot", "shadowRootFilter", "hasTabIndex", "isNaN", "parseInt", "getTabIndex", "Error", "tabIndex", "test", "getSortOrderTabIndex", "isScope", "sortOrderedTabbables", "a", "b", "documentOrder", "isInput", "isHiddenInput", "type", "isDetailsWithSummary", "r", "some", "child", "getCheckedRadio", "nodes", "form", "i", "checked", "isTabbableRadio", "name", "radioScope", "queryRadios", "radioSet", "window", "CSS", "escape", "err", "console", "error", "message", "isRadio", "isNonTabbableRadio", "isNodeAttached", "_nodeRoot", "nodeRoot", "nodeRootHost", "host", "attached", "_nodeRootHost", "_nodeRootHost$ownerDo", "_node$ownerDocument", "contains", "_nodeRoot2", "_nodeRootHost2", "_nodeRootHost2$ownerD", "isZeroArea", "_node$getBoundingClie", "getBoundingClientRect", "width", "height", "isHidden", "_ref", "displayCheck", "getComputedStyle", "visibility", "isDirectSummary", "nodeUnderDetails", "parentElement", "originalNode", "rootNode", "assignedSlot", "getClientRects", "isDisabledFromFieldset", "disabled", "item", "isNodeMatchingSelectorFocusable", "isNodeMatchingSelectorTabbable", "isValidShadowRootTabbable", "shadowHostNode", "sortByOrder", "regularTabbables", "orderedTabbables", "forEach", "candidateTabindex", "sort", "reduce", "acc", "sortable", "concat", "tabbable", "container", "bind", "focusable", "isTabbable", "focusableCandidateSelector", "isFocusable", "activeFocusTraps", "activateTrap", "trapStack", "trap", "length", "activeTrap", "_setPausedState", "trapIndex", "indexOf", "push", "splice", "deactivateTrap", "_isManuallyPaused", "isSelectableInput", "node", "tagName", "toLowerCase", "select", "isEscapeEvent", "e", "key", "keyCode", "isTabEvent", "isKeyForward", "shiftKey", "isKeyBackward", "delay", "fn", "setTimeout", "valueOrHandler", "value", "_len", "arguments", "params", "Array", "_key", "apply", "getActualTarget", "event", "target", "shadowRoot", "composedPath", "internalTrapStack", "createFocusTrap", "elements", "userOptions", "doc", "document", "config", "_objectSpread", "returnFocusOnDeactivate", "escapeDeactivates", "delayInitialFocus", "state", "containers", "containerGroups", "tabbableGroups", "nodeFocusedBeforeActivation", "mostRecentlyFocusedNode", "active", "paused", "manuallyPaused", "delayInitialFocusTimer", "undefined", "recentNavEvent", "getOption", "configOverrideOptions", "optionName", "configOptionName", "findContainerIndex", "element", "findIndex", "_ref", "container", "tabbableNodes", "contains", "includes", "find", "getNodeForOption", "_ref2", "_ref2$hasFallback", "hasFallback", "_ref2$params", "optionValue", "_toConsumableArray", "Error", "concat", "querySelector", "err", "message", "getInitialFocusNode", "isFocusable", "tabbableOptions", "activeElement", "firstTabbableGroup", "firstTabbableNode", "updateTabbableNodes", "map", "tabbable", "focusableNodes", "focusable", "lastTabbableNode", "firstDomTabbableNode", "isTabbable", "lastDomTabbableNode", "slice", "reverse", "posTabIndexesFound", "getTabIndex", "nextTabbableNode", "forward", "nodeIdx", "el", "filter", "group", "g", "getActiveElement", "tryFocus", "focus", "preventScroll", "getReturnFocusNode", "previousActiveElement", "findNextNavNode", "_ref3", "_ref3$isBackward", "isBackward", "destinationNode", "containerIndex", "containerGroup", "startOfGroupIndex", "_ref4", "destinationGroupIndex", "destinationGroup", "lastOfGroupIndex", "_ref5", "checkPointerDown", "clickOutsideDeactivates", "deactivate", "returnFocus", "allowOutsideClick", "preventDefault", "checkFocusIn", "targetContained", "Document", "stopImmediatePropagation", "nextNode", "navAcrossContainers", "mruContainerIdx", "mruTabIdx", "some", "n", "checkKeyNav", "checkTabKey", "checkEscapeKey", "checkClick", "addListeners", "addEventListener", "capture", "passive", "removeListeners", "removeEventListener", "checkDomRemoval", "mutations", "isFocusedNodeRemoved", "mutation", "removedNodes", "from", "mutationObserver", "window", "MutationObserver", "updateObservedNodes", "disconnect", "observe", "subtree", "childList", "activate", "activateOptions", "onActivate", "onPostActivate", "checkCanFocusTrap", "finishActivation", "then", "deactivateOptions", "options", "onDeactivate", "onPostDeactivate", "checkCanReturnFocus", "clearTimeout", "finishDeactivation", "pause", "pauseOptions", "unpause", "unpauseOptions", "updateContainerElements", "containerElements", "elementsAsArray", "Boolean", "Object", "defineProperties", "onPause", "onPostPause", "onUnpause", "onPostUnpause", "import_react", "effect", "FocusTrap", "_jsx", "uid", "tabbable", "breakpoint", "import_react", "import_react", "import_react", "import_react", "import_react", "getComputedStyle", "getComputedStyle", "getComputedStyle", "css", "window", "debounce", "merged", "getComputedStyle", "clippingParents", "getComputedStyle", "reference", "popperOffsets", "offset", "defaultModifiers", "createPopper", "reference", "popper", "options", "getComputedStyle", "debounce", "state", "effect", "window", "popper", "getComputedStyle", "name", "effect", "style", "offset", "hash", "placements", "placement", "placements", "basePlacement", "popperOffsets", "offset", "popperOffsets", "offset", "effect", "createPopper", "state", "createPopper", "hash", "getOppositePlacement", "popper", "preventOverflow", "_a", "hide", "_jsx", "_jsxs", "_Fragment", "import_react", "index", "import_react", "delay", "spinnerSize", "_jsx", "_jsxs", "_jsx", "import_react", "_jsxs", "_jsx", "ButtonVariant", "ButtonType", "ButtonSize", "ButtonState", "Component", "preventedEvents", "_jsxs", "_Fragment", "_jsx", "import_react", "_jsx", "_jsx", "TooltipPosition", "hide", "_jsxs", "_jsx", "_jsx", "_jsx", "_jsx", "import_react", "statusIcons", "_jsx", "TextInputTypes", "TextInputReadOnlyVariant", "_jsxs", "_jsx", "import_react", "import_react", "_jsxs", "_jsx", "_a", "import_react", "_jsx", "_jsx", "import_react", "_jsx", "import_react", "_jsx", "import_react", "_jsx", "_jsxs", "_Fragment", "import_react", "_jsx", "_jsxs", "Component", "_Fragment", "import_react", "_jsx", "import_react", "Component", "flyoutMenu", "target", "onSelect", "_jsxs", "_Fragment", "_jsx", "import_react", "_jsx", "import_react", "_jsx", "_a", "_jsx", "import_react", "_jsx", "import_react", "_a", "_jsx", "_jsx", "_jsx", "import_react", "_jsx", "import_react", "MenuToggleStatus", "MenuToggleSize", "_jsx", "_jsxs", "_Fragment", "import_react", "_jsx", "import_react", "_jsx", "_jsxs", "import_react", "import_react", "_jsx", "_jsx", "_jsx", "_jsx", "_jsx", "_jsxs", "_jsx", "_jsx", "_jsx", "PopoverPosition", "hide", "_jsxs", "_jsx", "DividerVariant", "Component", "_jsx", "import_react", "_a", "_jsx", "_jsx", "import_react", "_jsx", "_jsx"]
}
